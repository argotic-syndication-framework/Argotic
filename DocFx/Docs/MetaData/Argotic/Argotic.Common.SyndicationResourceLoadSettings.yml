### YamlMime:ManagedReference
items:
- uid: Argotic.Common.SyndicationResourceLoadSettings
  commentId: T:Argotic.Common.SyndicationResourceLoadSettings
  id: SyndicationResourceLoadSettings
  parent: Argotic.Common
  children:
  - Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions
  - Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  - Argotic.Common.SyndicationResourceLoadSettings.CompareTo(System.Object)
  - Argotic.Common.SyndicationResourceLoadSettings.Equals(System.Object)
  - Argotic.Common.SyndicationResourceLoadSettings.GetHashCode
  - Argotic.Common.SyndicationResourceLoadSettings.op_Equality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Common.SyndicationResourceLoadSettings.op_GreaterThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Common.SyndicationResourceLoadSettings.op_Inequality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Common.SyndicationResourceLoadSettings.op_LessThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Common.SyndicationResourceLoadSettings.RetrievalLimit
  - Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions
  - Argotic.Common.SyndicationResourceLoadSettings.Timeout
  - Argotic.Common.SyndicationResourceLoadSettings.ToString
  langs:
  - csharp
  - vb
  name: SyndicationResourceLoadSettings
  nameWithType: SyndicationResourceLoadSettings
  fullName: Argotic.Common.SyndicationResourceLoadSettings
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: SyndicationResourceLoadSettings
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 11
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nSpecifies a set of features to support on a <xref href=\"Argotic.Common.ISyndicationResource\" data-throw-if-not-resolved=\"false\"></xref> object loaded by the <xref href=\"Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable%2cArgotic.Common.SyndicationResourceLoadSettings)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class SyndicationResourceLoadSettings : IComparable
    content.vb: >-
      <Serializable>

      Public NotInheritable Class SyndicationResourceLoadSettings

          Implements IComparable
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions
  id: AutoDetectExtensions
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: AutoDetectExtensions
  nameWithType: SyndicationResourceLoadSettings.AutoDetectExtensions
  fullName: Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AutoDetectExtensions
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 45
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nGets or sets a value indicating whether gets or sets a value indicating if auto-detection of supported syndication extensions is enabled.\n"
  remarks: "\nAutomatic detection of supported syndication extensions will <strong>not</strong> remove any syndication extensions already added\nto the <xref href=\"Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions\" data-throw-if-not-resolved=\"false\"></xref> collection prior to the load operation execution.\n"
  example: []
  syntax:
    content: public bool AutoDetectExtensions { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the syndication extensions supported by the load operation are automatically determined based on the XML namespaces declared on a syndication resource; otherwise <strong>false</strong>.\nThe default value is <strong>true</strong>.\n"
    content.vb: Public Property AutoDetectExtensions As Boolean
  overload: Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  id: CharacterEncoding
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: CharacterEncoding
  nameWithType: SyndicationResourceLoadSettings.CharacterEncoding
  fullName: Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CharacterEncoding
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 52
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nGets or sets the character encoding to use when parsing a syndication resource.\n"
  example: []
  syntax:
    content: public Encoding CharacterEncoding { get; set; }
    parameters: []
    return:
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the character encoding to use when parsing a syndication resource. The default value is <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Property CharacterEncoding As Encoding
  overload: Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Common.SyndicationResourceLoadSettings.RetrievalLimit
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.RetrievalLimit
  id: RetrievalLimit
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: RetrievalLimit
  nameWithType: SyndicationResourceLoadSettings.RetrievalLimit
  fullName: Argotic.Common.SyndicationResourceLoadSettings.RetrievalLimit
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RetrievalLimit
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 75
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nGets or sets the maximum number of resource entities to retrieve from a syndication resource.\n"
  remarks: "\nThis setting is typically used to optimize processing by reducing the number of resource entities that must be parsed.\nSome syndication resources may not utilize this setting if they do not represent a list of retrievable entities.\n"
  example: []
  syntax:
    content: public int RetrievalLimit { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The maximum number of entities to retrieve from a syndication resource. The default value is 0, which indicates there is <strong>no limit</strong>.
    content.vb: Public Property RetrievalLimit As Integer
  overload: Argotic.Common.SyndicationResourceLoadSettings.RetrievalLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is less than zero.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions
  id: SupportedExtensions
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: SupportedExtensions
  nameWithType: SyndicationResourceLoadSettings.SupportedExtensions
  fullName: Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: SupportedExtensions
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 100
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nGets the syndication extensions to attempt to load from a syndication resource.\n"
  remarks: "\nIf <xref href=\"Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions\" data-throw-if-not-resolved=\"false\"></xref> is <strong>true</strong>, this collection will be automatically filled during the load operation based on the XML namespaces declared on the syndication resource.\nAutomatic detection will <strong>not</strong> remove any syndication extensions already added to this collection prior to the load operation execution.\n"
  example: []
  syntax:
    content: public Collection<Type> SupportedExtensions { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "\nA <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects that represent syndication extension instances to attempt to instantiate during the load operation.\nThe default value is an <em>empty</em> collection.\n"
    content.vb: Public ReadOnly Property SupportedExtensions As Collection(Of Type)
  overload: Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Common.SyndicationResourceLoadSettings.Timeout
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.Timeout
  id: Timeout
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: SyndicationResourceLoadSettings.Timeout
  fullName: Argotic.Common.SyndicationResourceLoadSettings.Timeout
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Timeout
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 119
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nGets or sets a value that specifies the amount of time after which asynchronous load operations will time out.\n"
  example: []
  syntax:
    content: public TimeSpan Timeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
      description: An <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that specifies the time-out period. The default value is 15 seconds.
    content.vb: Public Property Timeout As TimeSpan
  overload: Argotic.Common.SyndicationResourceLoadSettings.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The time-out period is less than zero.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The time-out period is greater than a year.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Common.SyndicationResourceLoadSettings.op_Equality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.SyndicationResourceLoadSettings.op_Equality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  id: op_Equality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: Equality(SyndicationResourceLoadSettings, SyndicationResourceLoadSettings)
  nameWithType: SyndicationResourceLoadSettings.Equality(SyndicationResourceLoadSettings, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.SyndicationResourceLoadSettings.Equality(Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.SyndicationResourceLoadSettings)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 148
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(SyndicationResourceLoadSettings first, SyndicationResourceLoadSettings second)
    parameters:
    - id: first
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: Operand to be compared.
    - id: second
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As SyndicationResourceLoadSettings, second As SyndicationResourceLoadSettings) As Boolean
  overload: Argotic.Common.SyndicationResourceLoadSettings.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Common.SyndicationResourceLoadSettings.op_Inequality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.SyndicationResourceLoadSettings.op_Inequality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  id: op_Inequality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: Inequality(SyndicationResourceLoadSettings, SyndicationResourceLoadSettings)
  nameWithType: SyndicationResourceLoadSettings.Inequality(SyndicationResourceLoadSettings, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.SyndicationResourceLoadSettings.Inequality(Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.SyndicationResourceLoadSettings)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 169
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(SyndicationResourceLoadSettings first, SyndicationResourceLoadSettings second)
    parameters:
    - id: first
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: Operand to be compared.
    - id: second
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As SyndicationResourceLoadSettings, second As SyndicationResourceLoadSettings) As Boolean
  overload: Argotic.Common.SyndicationResourceLoadSettings.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Common.SyndicationResourceLoadSettings.op_LessThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.SyndicationResourceLoadSettings.op_LessThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  id: op_LessThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: LessThan(SyndicationResourceLoadSettings, SyndicationResourceLoadSettings)
  nameWithType: SyndicationResourceLoadSettings.LessThan(SyndicationResourceLoadSettings, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.SyndicationResourceLoadSettings.LessThan(Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.SyndicationResourceLoadSettings)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 180
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(SyndicationResourceLoadSettings first, SyndicationResourceLoadSettings second)
    parameters:
    - id: first
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: Operand to be compared.
    - id: second
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As SyndicationResourceLoadSettings, second As SyndicationResourceLoadSettings) As Boolean
  overload: Argotic.Common.SyndicationResourceLoadSettings.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Common.SyndicationResourceLoadSettings.op_GreaterThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.SyndicationResourceLoadSettings.op_GreaterThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  id: op_GreaterThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: GreaterThan(SyndicationResourceLoadSettings, SyndicationResourceLoadSettings)
  nameWithType: SyndicationResourceLoadSettings.GreaterThan(SyndicationResourceLoadSettings, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.SyndicationResourceLoadSettings.GreaterThan(Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.SyndicationResourceLoadSettings)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 201
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(SyndicationResourceLoadSettings first, SyndicationResourceLoadSettings second)
    parameters:
    - id: first
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: Operand to be compared.
    - id: second
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As SyndicationResourceLoadSettings, second As SyndicationResourceLoadSettings) As Boolean
  overload: Argotic.Common.SyndicationResourceLoadSettings.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Common.SyndicationResourceLoadSettings.ToString
  commentId: M:Argotic.Common.SyndicationResourceLoadSettings.ToString
  id: ToString
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyndicationResourceLoadSettings.ToString()
  fullName: Argotic.Common.SyndicationResourceLoadSettings.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 223
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns a human-readable string for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Common.SyndicationResourceLoadSettings.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Common.SyndicationResourceLoadSettings.CompareTo(System.Object)
  commentId: M:Argotic.Common.SyndicationResourceLoadSettings.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: SyndicationResourceLoadSettings.CompareTo(Object)
  fullName: Argotic.Common.SyndicationResourceLoadSettings.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 234
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Common.SyndicationResourceLoadSettings.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Common.SyndicationResourceLoadSettings.Equals(System.Object)
  commentId: M:Argotic.Common.SyndicationResourceLoadSettings.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyndicationResourceLoadSettings.Equals(Object)
  fullName: Argotic.Common.SyndicationResourceLoadSettings.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 262
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Common.SyndicationResourceLoadSettings.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Common.SyndicationResourceLoadSettings.GetHashCode
  commentId: M:Argotic.Common.SyndicationResourceLoadSettings.GetHashCode
  id: GetHashCode
  parent: Argotic.Common.SyndicationResourceLoadSettings
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyndicationResourceLoadSettings.GetHashCode()
  fullName: Argotic.Common.SyndicationResourceLoadSettings.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Common/SyndicationResourceLoadSettings.cs
    startLine: 276
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Common.SyndicationResourceLoadSettings.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Argotic.Common.ISyndicationResource
  commentId: T:Argotic.Common.ISyndicationResource
  parent: Argotic.Common
  name: ISyndicationResource
  nameWithType: ISyndicationResource
  fullName: Argotic.Common.ISyndicationResource
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(IXPathNavigable, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(IXPathNavigable, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common
  commentId: N:Argotic.Common
  name: Argotic.Common
  nameWithType: Argotic.Common
  fullName: Argotic.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions
  isExternal: true
- uid: Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions
  name: AutoDetectExtensions
  nameWithType: SyndicationResourceLoadSettings.AutoDetectExtensions
  fullName: Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text.Encoding.UTF8
  commentId: P:System.Text.Encoding.UTF8
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  name: CharacterEncoding
  nameWithType: SyndicationResourceLoadSettings.CharacterEncoding
  fullName: Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: Argotic.Common.SyndicationResourceLoadSettings.RetrievalLimit*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.RetrievalLimit
  name: RetrievalLimit
  nameWithType: SyndicationResourceLoadSettings.RetrievalLimit
  fullName: Argotic.Common.SyndicationResourceLoadSettings.RetrievalLimit
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions
  isExternal: true
- uid: Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions
  name: SupportedExtensions
  nameWithType: SyndicationResourceLoadSettings.SupportedExtensions
  fullName: Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions
- uid: System.Collections.ObjectModel.Collection{System.Type}
  commentId: T:System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  nameWithType.vb: Collection(Of Type)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Type)
  name.vb: Collection(Of Type)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Argotic.Common.SyndicationResourceLoadSettings.Timeout*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.Timeout
  name: Timeout
  nameWithType: SyndicationResourceLoadSettings.Timeout
  fullName: Argotic.Common.SyndicationResourceLoadSettings.Timeout
- uid: Argotic.Common.SyndicationResourceLoadSettings.op_Equality*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.op_Equality
  name: Equality
  nameWithType: SyndicationResourceLoadSettings.Equality
  fullName: Argotic.Common.SyndicationResourceLoadSettings.Equality
- uid: Argotic.Common.SyndicationResourceLoadSettings
  commentId: T:Argotic.Common.SyndicationResourceLoadSettings
  parent: Argotic.Common
  name: SyndicationResourceLoadSettings
  nameWithType: SyndicationResourceLoadSettings
  fullName: Argotic.Common.SyndicationResourceLoadSettings
- uid: Argotic.Common.SyndicationResourceLoadSettings.op_Inequality*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.op_Inequality
  name: Inequality
  nameWithType: SyndicationResourceLoadSettings.Inequality
  fullName: Argotic.Common.SyndicationResourceLoadSettings.Inequality
- uid: Argotic.Common.SyndicationResourceLoadSettings.op_LessThan*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.op_LessThan
  name: LessThan
  nameWithType: SyndicationResourceLoadSettings.LessThan
  fullName: Argotic.Common.SyndicationResourceLoadSettings.LessThan
- uid: Argotic.Common.SyndicationResourceLoadSettings.op_GreaterThan*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.op_GreaterThan
  name: GreaterThan
  nameWithType: SyndicationResourceLoadSettings.GreaterThan
  fullName: Argotic.Common.SyndicationResourceLoadSettings.GreaterThan
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadSettings.ToString*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.ToString
  name: ToString
  nameWithType: SyndicationResourceLoadSettings.ToString
  fullName: Argotic.Common.SyndicationResourceLoadSettings.ToString
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Common.SyndicationResourceLoadSettings.CompareTo*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.CompareTo
  name: CompareTo
  nameWithType: SyndicationResourceLoadSettings.CompareTo
  fullName: Argotic.Common.SyndicationResourceLoadSettings.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadSettings.Equals*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.Equals
  name: Equals
  nameWithType: SyndicationResourceLoadSettings.Equals
  fullName: Argotic.Common.SyndicationResourceLoadSettings.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadSettings.GetHashCode*
  commentId: Overload:Argotic.Common.SyndicationResourceLoadSettings.GetHashCode
  name: GetHashCode
  nameWithType: SyndicationResourceLoadSettings.GetHashCode
  fullName: Argotic.Common.SyndicationResourceLoadSettings.GetHashCode
