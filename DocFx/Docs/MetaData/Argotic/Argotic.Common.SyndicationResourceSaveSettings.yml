### YamlMime:ManagedReference
items:
- uid: Argotic.Common.SyndicationResourceSaveSettings
  commentId: T:Argotic.Common.SyndicationResourceSaveSettings
  id: SyndicationResourceSaveSettings
  parent: Argotic.Common
  children:
  - Argotic.Common.SyndicationResourceSaveSettings.AutoDetectExtensions
  - Argotic.Common.SyndicationResourceSaveSettings.CharacterEncoding
  - Argotic.Common.SyndicationResourceSaveSettings.CompareTo(System.Object)
  - Argotic.Common.SyndicationResourceSaveSettings.Equals(System.Object)
  - Argotic.Common.SyndicationResourceSaveSettings.GetHashCode
  - Argotic.Common.SyndicationResourceSaveSettings.MinimizeOutputSize
  - Argotic.Common.SyndicationResourceSaveSettings.op_Equality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Common.SyndicationResourceSaveSettings.op_GreaterThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Common.SyndicationResourceSaveSettings.op_Inequality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Common.SyndicationResourceSaveSettings.op_LessThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions
  - Argotic.Common.SyndicationResourceSaveSettings.ToString
  langs:
  - csharp
  - vb
  name: SyndicationResourceSaveSettings
  nameWithType: SyndicationResourceSaveSettings
  fullName: Argotic.Common.SyndicationResourceSaveSettings
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: SyndicationResourceSaveSettings
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 11
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nSpecifies a set of features to support on a <xref href=\"Argotic.Common.ISyndicationResource\" data-throw-if-not-resolved=\"false\"></xref> object persisted by the <xref href=\"Argotic.Common.ISyndicationResource.Save(System.IO.Stream%2cArgotic.Common.SyndicationResourceSaveSettings)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class SyndicationResourceSaveSettings : IComparable
    content.vb: >-
      <Serializable>

      Public NotInheritable Class SyndicationResourceSaveSettings

          Implements IComparable
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Argotic.Common.SyndicationResourceSaveSettings.AutoDetectExtensions
  commentId: P:Argotic.Common.SyndicationResourceSaveSettings.AutoDetectExtensions
  id: AutoDetectExtensions
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: AutoDetectExtensions
  nameWithType: SyndicationResourceSaveSettings.AutoDetectExtensions
  fullName: Argotic.Common.SyndicationResourceSaveSettings.AutoDetectExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AutoDetectExtensions
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 45
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nGets or sets a value indicating whether gets or sets a value indicating if auto-detection of supported syndication extensions is enabled.\n"
  remarks: "\nAutomatic detection of supported syndication extensions will <strong>not</strong> remove any syndication extensions already added\nto the <xref href=\"Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions\" data-throw-if-not-resolved=\"false\"></xref> collection prior to the save operation execution.\n"
  example: []
  syntax:
    content: public bool AutoDetectExtensions { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<strong>true</strong> if the syndication extensions supported by the save operation are automatically determined based on the syndication extensions added to the syndication resource and its child entities; otherwise <strong>false</strong>.\nThe default value is <strong>true</strong>.\n"
    content.vb: Public Property AutoDetectExtensions As Boolean
  overload: Argotic.Common.SyndicationResourceSaveSettings.AutoDetectExtensions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Common.SyndicationResourceSaveSettings.CharacterEncoding
  commentId: P:Argotic.Common.SyndicationResourceSaveSettings.CharacterEncoding
  id: CharacterEncoding
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: CharacterEncoding
  nameWithType: SyndicationResourceSaveSettings.CharacterEncoding
  fullName: Argotic.Common.SyndicationResourceSaveSettings.CharacterEncoding
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CharacterEncoding
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 63
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nGets or sets the character encoding to use when persisting a syndication resource.\n"
  example: []
  syntax:
    content: public Encoding CharacterEncoding { get; set; }
    parameters: []
    return:
      type: System.Text.Encoding
      description: A <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object that indicates the character encoding to use when persisting a syndication resource. The default value is <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Property CharacterEncoding As Encoding
  overload: Argotic.Common.SyndicationResourceSaveSettings.CharacterEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Common.SyndicationResourceSaveSettings.MinimizeOutputSize
  commentId: P:Argotic.Common.SyndicationResourceSaveSettings.MinimizeOutputSize
  id: MinimizeOutputSize
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: MinimizeOutputSize
  nameWithType: SyndicationResourceSaveSettings.MinimizeOutputSize
  fullName: Argotic.Common.SyndicationResourceSaveSettings.MinimizeOutputSize
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: MinimizeOutputSize
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 81
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nGets or sets a value indicating whether gets or sets a value indicating if syndication resource persist operations should attempt to minimize the physical size of the resulting output.\n"
  example: []
  syntax:
    content: public bool MinimizeOutputSize { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if output size should be as small as possible; otherwise <strong>false</strong>. The default value is <strong>false</strong>.
    content.vb: Public Property MinimizeOutputSize As Boolean
  overload: Argotic.Common.SyndicationResourceSaveSettings.MinimizeOutputSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions
  commentId: P:Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions
  id: SupportedExtensions
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: SupportedExtensions
  nameWithType: SyndicationResourceSaveSettings.SupportedExtensions
  fullName: Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: SupportedExtensions
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 104
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nGets the syndication extensions that extend the syndication resource.\n"
  remarks: "\nDuring a save operation, each of these syndication extension types is instantiated and used to write the prefixed XML namespace declarations on the root syndication resource entity.\n"
  example: []
  syntax:
    content: public Collection<Type> SupportedExtensions { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "\nA <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects that represent syndication extension instances used during the save operation.\nThe default value is an <em>empty</em> collection.\n"
    content.vb: Public ReadOnly Property SupportedExtensions As Collection(Of Type)
  overload: Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Common.SyndicationResourceSaveSettings.op_Equality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.SyndicationResourceSaveSettings.op_Equality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  id: op_Equality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: Equality(SyndicationResourceSaveSettings, SyndicationResourceSaveSettings)
  nameWithType: SyndicationResourceSaveSettings.Equality(SyndicationResourceSaveSettings, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.SyndicationResourceSaveSettings.Equality(Argotic.Common.SyndicationResourceSaveSettings, Argotic.Common.SyndicationResourceSaveSettings)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 123
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(SyndicationResourceSaveSettings first, SyndicationResourceSaveSettings second)
    parameters:
    - id: first
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: Operand to be compared.
    - id: second
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As SyndicationResourceSaveSettings, second As SyndicationResourceSaveSettings) As Boolean
  overload: Argotic.Common.SyndicationResourceSaveSettings.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Common.SyndicationResourceSaveSettings.op_Inequality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.SyndicationResourceSaveSettings.op_Inequality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  id: op_Inequality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: Inequality(SyndicationResourceSaveSettings, SyndicationResourceSaveSettings)
  nameWithType: SyndicationResourceSaveSettings.Inequality(SyndicationResourceSaveSettings, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.SyndicationResourceSaveSettings.Inequality(Argotic.Common.SyndicationResourceSaveSettings, Argotic.Common.SyndicationResourceSaveSettings)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 144
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(SyndicationResourceSaveSettings first, SyndicationResourceSaveSettings second)
    parameters:
    - id: first
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: Operand to be compared.
    - id: second
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As SyndicationResourceSaveSettings, second As SyndicationResourceSaveSettings) As Boolean
  overload: Argotic.Common.SyndicationResourceSaveSettings.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Common.SyndicationResourceSaveSettings.op_LessThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.SyndicationResourceSaveSettings.op_LessThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  id: op_LessThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: LessThan(SyndicationResourceSaveSettings, SyndicationResourceSaveSettings)
  nameWithType: SyndicationResourceSaveSettings.LessThan(SyndicationResourceSaveSettings, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.SyndicationResourceSaveSettings.LessThan(Argotic.Common.SyndicationResourceSaveSettings, Argotic.Common.SyndicationResourceSaveSettings)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 155
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(SyndicationResourceSaveSettings first, SyndicationResourceSaveSettings second)
    parameters:
    - id: first
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: Operand to be compared.
    - id: second
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As SyndicationResourceSaveSettings, second As SyndicationResourceSaveSettings) As Boolean
  overload: Argotic.Common.SyndicationResourceSaveSettings.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Common.SyndicationResourceSaveSettings.op_GreaterThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.SyndicationResourceSaveSettings.op_GreaterThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  id: op_GreaterThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: GreaterThan(SyndicationResourceSaveSettings, SyndicationResourceSaveSettings)
  nameWithType: SyndicationResourceSaveSettings.GreaterThan(SyndicationResourceSaveSettings, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.SyndicationResourceSaveSettings.GreaterThan(Argotic.Common.SyndicationResourceSaveSettings, Argotic.Common.SyndicationResourceSaveSettings)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 176
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(SyndicationResourceSaveSettings first, SyndicationResourceSaveSettings second)
    parameters:
    - id: first
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: Operand to be compared.
    - id: second
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As SyndicationResourceSaveSettings, second As SyndicationResourceSaveSettings) As Boolean
  overload: Argotic.Common.SyndicationResourceSaveSettings.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Common.SyndicationResourceSaveSettings.ToString
  commentId: M:Argotic.Common.SyndicationResourceSaveSettings.ToString
  id: ToString
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyndicationResourceSaveSettings.ToString()
  fullName: Argotic.Common.SyndicationResourceSaveSettings.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 198
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Common.SyndicationResourceSaveSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns a human-readable string for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Common.SyndicationResourceSaveSettings" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Common.SyndicationResourceSaveSettings.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Common.SyndicationResourceSaveSettings.CompareTo(System.Object)
  commentId: M:Argotic.Common.SyndicationResourceSaveSettings.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: SyndicationResourceSaveSettings.CompareTo(Object)
  fullName: Argotic.Common.SyndicationResourceSaveSettings.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 209
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Common.SyndicationResourceSaveSettings.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Common.SyndicationResourceSaveSettings.Equals(System.Object)
  commentId: M:Argotic.Common.SyndicationResourceSaveSettings.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyndicationResourceSaveSettings.Equals(Object)
  fullName: Argotic.Common.SyndicationResourceSaveSettings.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 236
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Common.SyndicationResourceSaveSettings.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Common.SyndicationResourceSaveSettings.GetHashCode
  commentId: M:Argotic.Common.SyndicationResourceSaveSettings.GetHashCode
  id: GetHashCode
  parent: Argotic.Common.SyndicationResourceSaveSettings
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyndicationResourceSaveSettings.GetHashCode()
  fullName: Argotic.Common.SyndicationResourceSaveSettings.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Common/SyndicationResourceSaveSettings.cs
    startLine: 250
  assemblies:
  - Argotic.Common
  namespace: Argotic.Common
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Common.SyndicationResourceSaveSettings.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Argotic.Common.ISyndicationResource
  commentId: T:Argotic.Common.ISyndicationResource
  parent: Argotic.Common
  name: ISyndicationResource
  nameWithType: ISyndicationResource
  fullName: Argotic.Common.ISyndicationResource
- uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(Stream, SyndicationResourceSaveSettings)
  nameWithType: ISyndicationResource.Save(Stream, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.ISyndicationResource.Save(System.IO.Stream, Argotic.Common.SyndicationResourceSaveSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common
  commentId: N:Argotic.Common
  name: Argotic.Common
  nameWithType: Argotic.Common
  fullName: Argotic.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions
  commentId: P:Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions
  isExternal: true
- uid: Argotic.Common.SyndicationResourceSaveSettings.AutoDetectExtensions*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.AutoDetectExtensions
  name: AutoDetectExtensions
  nameWithType: SyndicationResourceSaveSettings.AutoDetectExtensions
  fullName: Argotic.Common.SyndicationResourceSaveSettings.AutoDetectExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text.Encoding.UTF8
  commentId: P:System.Text.Encoding.UTF8
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Argotic.Common.SyndicationResourceSaveSettings.CharacterEncoding*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.CharacterEncoding
  name: CharacterEncoding
  nameWithType: SyndicationResourceSaveSettings.CharacterEncoding
  fullName: Argotic.Common.SyndicationResourceSaveSettings.CharacterEncoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Argotic.Common.SyndicationResourceSaveSettings.MinimizeOutputSize*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.MinimizeOutputSize
  name: MinimizeOutputSize
  nameWithType: SyndicationResourceSaveSettings.MinimizeOutputSize
  fullName: Argotic.Common.SyndicationResourceSaveSettings.MinimizeOutputSize
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions
  name: SupportedExtensions
  nameWithType: SyndicationResourceSaveSettings.SupportedExtensions
  fullName: Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions
- uid: System.Collections.ObjectModel.Collection{System.Type}
  commentId: T:System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  nameWithType.vb: Collection(Of Type)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Type)
  name.vb: Collection(Of Type)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Argotic.Common.SyndicationResourceSaveSettings.op_Equality*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.op_Equality
  name: Equality
  nameWithType: SyndicationResourceSaveSettings.Equality
  fullName: Argotic.Common.SyndicationResourceSaveSettings.Equality
- uid: Argotic.Common.SyndicationResourceSaveSettings
  commentId: T:Argotic.Common.SyndicationResourceSaveSettings
  parent: Argotic.Common
  name: SyndicationResourceSaveSettings
  nameWithType: SyndicationResourceSaveSettings
  fullName: Argotic.Common.SyndicationResourceSaveSettings
- uid: Argotic.Common.SyndicationResourceSaveSettings.op_Inequality*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.op_Inequality
  name: Inequality
  nameWithType: SyndicationResourceSaveSettings.Inequality
  fullName: Argotic.Common.SyndicationResourceSaveSettings.Inequality
- uid: Argotic.Common.SyndicationResourceSaveSettings.op_LessThan*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.op_LessThan
  name: LessThan
  nameWithType: SyndicationResourceSaveSettings.LessThan
  fullName: Argotic.Common.SyndicationResourceSaveSettings.LessThan
- uid: Argotic.Common.SyndicationResourceSaveSettings.op_GreaterThan*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.op_GreaterThan
  name: GreaterThan
  nameWithType: SyndicationResourceSaveSettings.GreaterThan
  fullName: Argotic.Common.SyndicationResourceSaveSettings.GreaterThan
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceSaveSettings.ToString*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.ToString
  name: ToString
  nameWithType: SyndicationResourceSaveSettings.ToString
  fullName: Argotic.Common.SyndicationResourceSaveSettings.ToString
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Common.SyndicationResourceSaveSettings.CompareTo*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.CompareTo
  name: CompareTo
  nameWithType: SyndicationResourceSaveSettings.CompareTo
  fullName: Argotic.Common.SyndicationResourceSaveSettings.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceSaveSettings.Equals*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.Equals
  name: Equals
  nameWithType: SyndicationResourceSaveSettings.Equals
  fullName: Argotic.Common.SyndicationResourceSaveSettings.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceSaveSettings.GetHashCode*
  commentId: Overload:Argotic.Common.SyndicationResourceSaveSettings.GetHashCode
  name: GetHashCode
  nameWithType: SyndicationResourceSaveSettings.GetHashCode
  fullName: Argotic.Common.SyndicationResourceSaveSettings.GetHashCode
