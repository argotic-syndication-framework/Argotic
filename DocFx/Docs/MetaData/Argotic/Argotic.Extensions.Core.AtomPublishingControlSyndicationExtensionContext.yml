### YamlMime:ManagedReference
items:
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  commentId: T:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  id: AtomPublishingControlSyndicationExtensionContext
  parent: Argotic.Extensions.Core
  children:
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.#ctor
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AddExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.BaseUri
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.HasExtensions
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.IsDraft
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Language
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)
  langs:
  - csharp
  - vb
  name: AtomPublishingControlSyndicationExtensionContext
  nameWithType: AtomPublishingControlSyndicationExtensionContext
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AtomPublishingControlSyndicationExtensionContext
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 13
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nEncapsulates specific information about an individual <xref href=\"Argotic.Extensions.Core.AtomPublishingControlSyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class AtomPublishingControlSyndicationExtensionContext : IAtomPublishingCommonObjectAttributes, IExtensibleSyndicationObject
    content.vb: >-
      <Serializable>

      Public Class AtomPublishingControlSyndicationExtensionContext

          Implements IAtomPublishingCommonObjectAttributes, IExtensibleSyndicationObject
  inheritance:
  - System.Object
  implements:
  - Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes
  - Argotic.Extensions.IExtensibleSyndicationObject
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.#ctor
  commentId: M:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.#ctor
  id: '#ctor'
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: AtomPublishingControlSyndicationExtensionContext()
  nameWithType: AtomPublishingControlSyndicationExtensionContext.AtomPublishingControlSyndicationExtensionContext()
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AtomPublishingControlSyndicationExtensionContext()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 39
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AtomPublishingControlSyndicationExtensionContext()
    content.vb: Public Sub New
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.BaseUri
  commentId: P:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.BaseUri
  id: BaseUri
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: AtomPublishingControlSyndicationExtensionContext.BaseUri
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.BaseUri
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: BaseUri
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 52
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the base URI other than the base URI of the document or external entity.\n"
  remarks: "\n<p>\n    The value of this property is interpreted as a URI Reference as defined in <a href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC 2396: Uniform Resource Identifiers</a>,\n    after processing according to <a href=\"http://www.w3.org/TR/xmlbase/#escaping\">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</p>\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents a base URI other than the base URI of the document or external entity. The default value is a <strong>null</strong> reference.
    content.vb: Public Property BaseUri As Uri
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.BaseUri*
  implements:
  - Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Language
  commentId: P:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Language
  id: Language
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: AtomPublishingControlSyndicationExtensionContext.Language
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Language
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Language
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 74
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the natural or formal language in which the content is written.\n"
  remarks: "\n<p>\n    The value of this property is a language identifier as defined by <a href=\"http://www.ietf.org/rfc/rfc3066.txt\">RFC 3066: Tags for the Identification of Languages</a>, or its successor.\n</p>\n"
  example: []
  syntax:
    content: public CultureInfo Language { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> that represents the natural or formal language in which the content is written. The default value is a <strong>null</strong> reference.
    content.vb: Public Property Language As CultureInfo
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Language*
  implements:
  - Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes.Language
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions
  commentId: P:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions
  id: Extensions
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: AtomPublishingControlSyndicationExtensionContext.Extensions
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Extensions
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 95
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the syndication extensions applied to this syndication entity.\n"
  remarks: "\nThis <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public IEnumerable<ISyndicationExtension> Extensions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects that represent syndication extensions applied to this syndication entity.
    content.vb: Public Property Extensions As IEnumerable(Of ISyndicationExtension)
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.HasExtensions
  commentId: P:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.HasExtensions
  id: HasExtensions
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: HasExtensions
  nameWithType: AtomPublishingControlSyndicationExtensionContext.HasExtensions
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.HasExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: HasExtensions
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 118
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets a value indicating whether gets a value indicating if this syndication entity has one or more syndication extensions applied to it.\n"
  example: []
  syntax:
    content: public bool HasExtensions { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions" data-throw-if-not-resolved="false"></xref> collection for this entity contains one or more <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects, otherwise returns <strong>false</strong>.
    content.vb: Public ReadOnly Property HasExtensions As Boolean
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.HasExtensions*
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.IsDraft
  commentId: P:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.IsDraft
  id: IsDraft
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: IsDraft
  nameWithType: AtomPublishingControlSyndicationExtensionContext.IsDraft
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.IsDraft
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: IsDraft
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 130
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets a value indicating whether gets or sets a value indicating if client has requested to control the visibility of the resource.\n"
  example: []
  syntax:
    content: public bool IsDraft { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if the client is requesting to control the visibility of the resource; otherwise <strong>false</strong>. The default value is <strong>false</strong>.
    content.vb: Public Property IsDraft As Boolean
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.IsDraft*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AddExtension(Argotic.Extensions.ISyndicationExtension)
  id: AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: AddExtension(ISyndicationExtension)
  nameWithType: AtomPublishingControlSyndicationExtensionContext.AddExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AddExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddExtension
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 149
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nAdds the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> to the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AddExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  id: FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: AtomPublishingControlSyndicationExtensionContext.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: FindExtension
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 172
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nSearches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <xref href=\"Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nThe <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> is a delegate to a method that returns <strong>true</strong> if the object passed to it matches the conditions defined in the delegate.\nThe elements of the current <xref href=\"Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions\" data-throw-if-not-resolved=\"false\"></xref> are individually passed to the <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> delegate, moving forward in\nthe <xref href=\"Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions\" data-throw-if-not-resolved=\"false\"></xref>, starting with the first element and ending with the last element. Processing is stopped when a match is found.\n"
  example: []
  syntax:
    content: public ISyndicationExtension FindExtension(Predicate<ISyndicationExtension> match)
    parameters:
    - id: match
      type: System.Predicate{Argotic.Extensions.ISyndicationExtension}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to search for.
    return:
      type: Argotic.Extensions.ISyndicationExtension
      description: "\nThe first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function FindExtension(match As Predicate(Of ISyndicationExtension)) As ISyndicationExtension
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.FindExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">match</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  nameWithType.vb: AtomPublishingControlSyndicationExtensionContext.FindExtension(Predicate(Of ISyndicationExtension))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  id: RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: AtomPublishingControlSyndicationExtensionContext.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveExtension
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 188
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nRemoves the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> from the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection of the current instance does not contain the specified <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.RemoveExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)
  commentId: M:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator, XmlNamespaceManager)
  nameWithType: AtomPublishingControlSyndicationExtensionContext.Load(XPathNavigator, XmlNamespaceManager)
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator, System.Xml.XmlNamespaceManager)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 209
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes the syndication extension context using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source, XmlNamespaceManager manager)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <strong>XPathNavigator</strong> used to load this <xref href="Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext" data-throw-if-not-resolved="false"></xref>.
    - id: manager
      type: System.Xml.XmlNamespaceManager
      description: The <xref href="System.Xml.XmlNamespaceManager" data-throw-if-not-resolved="false"></xref> object used to resolve prefixed syndication extension elements and attributes.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext" data-throw-if-not-resolved="false"></xref> was able to be initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>; otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator, manager As XmlNamespaceManager) As Boolean
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">manager</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator, XmlNamespaceManager, SyndicationResourceLoadSettings)
  nameWithType: AtomPublishingControlSyndicationExtensionContext.Load(XPathNavigator, XmlNamespaceManager, SyndicationResourceLoadSettings)
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator, System.Xml.XmlNamespaceManager, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 254
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes the syndication extension context using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source, XmlNamespaceManager manager, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <strong>XPathNavigator</strong> used to load this <xref href="Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext" data-throw-if-not-resolved="false"></xref>.
    - id: manager
      type: System.Xml.XmlNamespaceManager
      description: The <xref href="System.Xml.XmlNamespaceManager" data-throw-if-not-resolved="false"></xref> object used to resolve prefixed syndication extension elements and attributes.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> used to configure the load operation.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext" data-throw-if-not-resolved="false"></xref> was able to be initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>; otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator, manager As XmlNamespaceManager, settings As SyndicationResourceLoadSettings) As Boolean
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">manager</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">settings</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)
  commentId: M:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)
  id: WriteTo(System.Xml.XmlWriter,System.String)
  parent: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter, String)
  nameWithType: AtomPublishingControlSyndicationExtensionContext.WriteTo(XmlWriter, String)
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.WriteTo(System.Xml.XmlWriter, System.String)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WriteTo
    path: ../Solutions/Argotic.Extensions/Core/AtomPublishing/AtomPublishingControlSyndicationExtensionContext.cs
    startLine: 275
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nWrites the current context to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(XmlWriter writer, string xmlNamespace)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <strong>XmlWriter</strong> to which you want to write the current context.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace used to qualify prefixed syndication extension elements and attributes.
    content.vb: Public Sub WriteTo(writer As XmlWriter, xmlNamespace As String)
  overload: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">xmlNamespace</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">xmlNamespace</code> is an empty string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtension
  commentId: T:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtension
  parent: Argotic.Extensions.Core
  name: AtomPublishingControlSyndicationExtension
  nameWithType: AtomPublishingControlSyndicationExtension
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtension
- uid: Argotic.Extensions.Core
  commentId: N:Argotic.Extensions.Core
  name: Argotic.Extensions.Core
  nameWithType: Argotic.Extensions.Core
  fullName: Argotic.Extensions.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes
  commentId: T:Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes
  parent: Argotic.Extensions.Core
  name: IAtomPublishingCommonObjectAttributes
  nameWithType: IAtomPublishingCommonObjectAttributes
  fullName: Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes
- uid: Argotic.Extensions.IExtensibleSyndicationObject
  commentId: T:Argotic.Extensions.IExtensibleSyndicationObject
  parent: Argotic.Extensions
  name: IExtensibleSyndicationObject
  nameWithType: IExtensibleSyndicationObject
  fullName: Argotic.Extensions.IExtensibleSyndicationObject
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Extensions
  commentId: N:Argotic.Extensions
  name: Argotic.Extensions
  nameWithType: Argotic.Extensions
  fullName: Argotic.Extensions
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  commentId: T:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
  parent: Argotic.Extensions.Core
  name: AtomPublishingControlSyndicationExtensionContext
  nameWithType: AtomPublishingControlSyndicationExtensionContext
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.#ctor*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.#ctor
  name: AtomPublishingControlSyndicationExtensionContext
  nameWithType: AtomPublishingControlSyndicationExtensionContext.AtomPublishingControlSyndicationExtensionContext
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AtomPublishingControlSyndicationExtensionContext
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.BaseUri*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.BaseUri
  name: BaseUri
  nameWithType: AtomPublishingControlSyndicationExtensionContext.BaseUri
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.BaseUri
- uid: Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes.BaseUri
  commentId: P:Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes.BaseUri
  parent: Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes
  name: BaseUri
  nameWithType: IAtomPublishingCommonObjectAttributes.BaseUri
  fullName: Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes.BaseUri
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Language*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Language
  name: Language
  nameWithType: AtomPublishingControlSyndicationExtensionContext.Language
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Language
- uid: Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes.Language
  commentId: P:Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes.Language
  parent: Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes
  name: Language
  nameWithType: IAtomPublishingCommonObjectAttributes.Language
  fullName: Argotic.Extensions.Core.IAtomPublishingCommonObjectAttributes.Language
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.ISyndicationExtension
  commentId: T:Argotic.Extensions.ISyndicationExtension
  parent: Argotic.Extensions
  name: ISyndicationExtension
  nameWithType: ISyndicationExtension
  fullName: Argotic.Extensions.ISyndicationExtension
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions
  name: Extensions
  nameWithType: AtomPublishingControlSyndicationExtensionContext.Extensions
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: Extensions
  nameWithType: IExtensibleSyndicationObject.Extensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
- uid: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISyndicationExtension>
  nameWithType: IEnumerable<ISyndicationExtension>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: IEnumerable(Of ISyndicationExtension)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: IEnumerable(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions
  commentId: P:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Extensions
  isExternal: true
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.HasExtensions*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.HasExtensions
  name: HasExtensions
  nameWithType: AtomPublishingControlSyndicationExtensionContext.HasExtensions
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.HasExtensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: HasExtensions
  nameWithType: IExtensibleSyndicationObject.HasExtensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.IsDraft*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.IsDraft
  name: IsDraft
  nameWithType: AtomPublishingControlSyndicationExtensionContext.IsDraft
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.IsDraft
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AddExtension*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AddExtension
  name: AddExtension
  nameWithType: AtomPublishingControlSyndicationExtensionContext.AddExtension
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.AddExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: AddExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.AddExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.FindExtension*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.FindExtension
  name: FindExtension
  nameWithType: AtomPublishingControlSyndicationExtensionContext.FindExtension
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.FindExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  isExternal: true
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: IExtensibleSyndicationObject.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  nameWithType.vb: IExtensibleSyndicationObject.FindExtension(Predicate(Of ISyndicationExtension))
  fullName.vb: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Predicate{Argotic.Extensions.ISyndicationExtension}
  parent: System
  definition: System.Predicate`1
  name: Predicate<ISyndicationExtension>
  nameWithType: Predicate<ISyndicationExtension>
  fullName: System.Predicate<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: Predicate(Of ISyndicationExtension)
  fullName.vb: System.Predicate(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: Predicate(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.RemoveExtension*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.RemoveExtension
  name: RemoveExtension
  nameWithType: AtomPublishingControlSyndicationExtensionContext.RemoveExtension
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.RemoveExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XmlNamespaceManager
  commentId: T:System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load
  name: Load
  nameWithType: AtomPublishingControlSyndicationExtensionContext.Load
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.Load
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Argotic.Common.SyndicationResourceLoadSettings
  commentId: T:Argotic.Common.SyndicationResourceLoadSettings
  parent: Argotic.Common
  name: SyndicationResourceLoadSettings
  nameWithType: SyndicationResourceLoadSettings
  fullName: Argotic.Common.SyndicationResourceLoadSettings
- uid: Argotic.Common
  commentId: N:Argotic.Common
  name: Argotic.Common
  nameWithType: Argotic.Common
  fullName: Argotic.Common
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.WriteTo*
  commentId: Overload:Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.WriteTo
  name: WriteTo
  nameWithType: AtomPublishingControlSyndicationExtensionContext.WriteTo
  fullName: Argotic.Extensions.Core.AtomPublishingControlSyndicationExtensionContext.WriteTo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
