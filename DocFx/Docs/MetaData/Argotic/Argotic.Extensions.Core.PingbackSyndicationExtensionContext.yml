### YamlMime:ManagedReference
items:
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  commentId: T:Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  id: PingbackSyndicationExtensionContext
  parent: Argotic.Extensions.Core
  children:
  - Argotic.Extensions.Core.PingbackSyndicationExtensionContext.#ctor
  - Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Abouts
  - Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)
  - Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Server
  - Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Target
  - Argotic.Extensions.Core.PingbackSyndicationExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)
  langs:
  - csharp
  - vb
  name: PingbackSyndicationExtensionContext
  nameWithType: PingbackSyndicationExtensionContext
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: PingbackSyndicationExtensionContext
    path: ../Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
    startLine: 11
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nEncapsulates specific information about an individual <xref href=\"Argotic.Extensions.Core.PingbackSyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class PingbackSyndicationExtensionContext
    content.vb: >-
      <Serializable>

      Public Class PingbackSyndicationExtensionContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.#ctor
  commentId: M:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.#ctor
  id: '#ctor'
  parent: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: PingbackSyndicationExtensionContext()
  nameWithType: PingbackSyndicationExtensionContext.PingbackSyndicationExtensionContext()
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.PingbackSyndicationExtensionContext()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
    startLine: 33
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.Core.PingbackSyndicationExtensionContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public PingbackSyndicationExtensionContext()
    content.vb: Public Sub New
  overload: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Abouts
  commentId: P:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Abouts
  id: Abouts
  parent: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: Abouts
  nameWithType: PingbackSyndicationExtensionContext.Abouts
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Abouts
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Abouts
    path: ../Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
    startLine: 44
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets the targets that were pinged in reference.\n"
  example: []
  syntax:
    content: public Collection<Uri> Abouts { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Uri}
      description: "\nA <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> objects that represent targets that were pinged in reference.\nThe default value is an <em>empty</em> collection.\n"
    content.vb: Public ReadOnly Property Abouts As Collection(Of Uri)
  overload: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Abouts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Server
  commentId: P:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Server
  id: Server
  parent: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: PingbackSyndicationExtensionContext.Server
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Server
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Server
    path: ../Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
    startLine: 63
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the URL of the Pingback server.\n"
  example: []
  syntax:
    content: public Uri Server { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the Pingback server.
    content.vb: Public Property Server As Uri
  overload: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Server*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Target
  commentId: P:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Target
  id: Target
  parent: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: PingbackSyndicationExtensionContext.Target
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Target
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Target
    path: ../Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
    startLine: 82
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the value that should be used as the <em>targetURI</em> in a ping.\n"
  example: []
  syntax:
    content: public Uri Target { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the value that should be used as the <em>targetURI</em> in a ping.
    content.vb: Public Property Target As Uri
  overload: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Target*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)
  commentId: M:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlNamespaceManager)
  parent: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator, XmlNamespaceManager)
  nameWithType: PingbackSyndicationExtensionContext.Load(XPathNavigator, XmlNamespaceManager)
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Load(System.Xml.XPath.XPathNavigator, System.Xml.XmlNamespaceManager)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
    startLine: 104
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes the syndication extension context using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source, XmlNamespaceManager manager)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <strong>XPathNavigator</strong> used to load this <xref href="Argotic.Extensions.Core.PingbackSyndicationExtensionContext" data-throw-if-not-resolved="false"></xref>.
    - id: manager
      type: System.Xml.XmlNamespaceManager
      description: The <xref href="System.Xml.XmlNamespaceManager" data-throw-if-not-resolved="false"></xref> object used to resolve prefixed syndication extension elements and attributes.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.Core.PingbackSyndicationExtensionContext" data-throw-if-not-resolved="false"></xref> was able to be initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>; otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator, manager As XmlNamespaceManager) As Boolean
  overload: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">manager</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)
  commentId: M:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.WriteTo(System.Xml.XmlWriter,System.String)
  id: WriteTo(System.Xml.XmlWriter,System.String)
  parent: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter, String)
  nameWithType: PingbackSyndicationExtensionContext.WriteTo(XmlWriter, String)
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.WriteTo(System.Xml.XmlWriter, System.String)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WriteTo
    path: ../Solutions/Argotic.Extensions/Core/Pingback/PingbackSyndicationExtensionContext.cs
    startLine: 161
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nWrites the current context to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(XmlWriter writer, string xmlNamespace)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <strong>XmlWriter</strong> to which you want to write the current context.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace used to qualify prefixed syndication extension elements and attributes.
    content.vb: Public Sub WriteTo(writer As XmlWriter, xmlNamespace As String)
  overload: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">xmlNamespace</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">xmlNamespace</code> is an empty string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Argotic.Extensions.Core.PingbackSyndicationExtension
  commentId: T:Argotic.Extensions.Core.PingbackSyndicationExtension
  parent: Argotic.Extensions.Core
  name: PingbackSyndicationExtension
  nameWithType: PingbackSyndicationExtension
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtension
- uid: Argotic.Extensions.Core
  commentId: N:Argotic.Extensions.Core
  name: Argotic.Extensions.Core
  nameWithType: Argotic.Extensions.Core
  fullName: Argotic.Extensions.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  commentId: T:Argotic.Extensions.Core.PingbackSyndicationExtensionContext
  parent: Argotic.Extensions.Core
  name: PingbackSyndicationExtensionContext
  nameWithType: PingbackSyndicationExtensionContext
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.#ctor*
  commentId: Overload:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.#ctor
  name: PingbackSyndicationExtensionContext
  nameWithType: PingbackSyndicationExtensionContext.PingbackSyndicationExtensionContext
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.PingbackSyndicationExtensionContext
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Abouts*
  commentId: Overload:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Abouts
  name: Abouts
  nameWithType: PingbackSyndicationExtensionContext.Abouts
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Abouts
- uid: System.Collections.ObjectModel.Collection{System.Uri}
  commentId: T:System.Collections.ObjectModel.Collection{System.Uri}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Uri>
  nameWithType: Collection<Uri>
  fullName: System.Collections.ObjectModel.Collection<System.Uri>
  nameWithType.vb: Collection(Of Uri)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.Uri)
  name.vb: Collection(Of Uri)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Server*
  commentId: Overload:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Server
  name: Server
  nameWithType: PingbackSyndicationExtensionContext.Server
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Server
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Target*
  commentId: Overload:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Target
  name: Target
  nameWithType: PingbackSyndicationExtensionContext.Target
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Target
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XmlNamespaceManager
  commentId: T:System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Load*
  commentId: Overload:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Load
  name: Load
  nameWithType: PingbackSyndicationExtensionContext.Load
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.Load
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.WriteTo*
  commentId: Overload:Argotic.Extensions.Core.PingbackSyndicationExtensionContext.WriteTo
  name: WriteTo
  nameWithType: PingbackSyndicationExtensionContext.WriteTo
  fullName: Argotic.Extensions.Core.PingbackSyndicationExtensionContext.WriteTo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
