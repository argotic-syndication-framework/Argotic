### YamlMime:ManagedReference
items:
- uid: Argotic.Extensions.Core.YahooMediaText
  commentId: T:Argotic.Extensions.Core.YahooMediaText
  id: YahooMediaText
  parent: Argotic.Extensions.Core
  children:
  - Argotic.Extensions.Core.YahooMediaText.#ctor
  - Argotic.Extensions.Core.YahooMediaText.#ctor(System.String)
  - Argotic.Extensions.Core.YahooMediaText.CompareTo(System.Object)
  - Argotic.Extensions.Core.YahooMediaText.Content
  - Argotic.Extensions.Core.YahooMediaText.End
  - Argotic.Extensions.Core.YahooMediaText.Equals(System.Object)
  - Argotic.Extensions.Core.YahooMediaText.GetHashCode
  - Argotic.Extensions.Core.YahooMediaText.Language
  - Argotic.Extensions.Core.YahooMediaText.Load(System.Xml.XPath.XPathNavigator)
  - Argotic.Extensions.Core.YahooMediaText.op_Equality(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  - Argotic.Extensions.Core.YahooMediaText.op_GreaterThan(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  - Argotic.Extensions.Core.YahooMediaText.op_Inequality(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  - Argotic.Extensions.Core.YahooMediaText.op_LessThan(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  - Argotic.Extensions.Core.YahooMediaText.Start
  - Argotic.Extensions.Core.YahooMediaText.TextType
  - Argotic.Extensions.Core.YahooMediaText.TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  - Argotic.Extensions.Core.YahooMediaText.TextTypeByName(System.String)
  - Argotic.Extensions.Core.YahooMediaText.ToString
  - Argotic.Extensions.Core.YahooMediaText.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: YahooMediaText
  nameWithType: YahooMediaText
  fullName: Argotic.Extensions.Core.YahooMediaText
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: YahooMediaText
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 19
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nRepresents a means of allowing the inclusion of a text transcript, closed captioning, or lyrics of the media content.\n"
  remarks: "\n<p>\n    Many of these <xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref> objects are permitted to provide a time series of text.\n    In such cases, it is encouraged, but not required, that the <xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref> objects be grouped by language and appear in time sequence order based on the start time.\n<xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref> objects can have overlapping start and end times.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class YahooMediaText : IComparable
    content.vb: >-
      <Serializable>

      Public Class YahooMediaText

          Implements IComparable
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Extensions.Core.YahooMediaText.#ctor
  commentId: M:Argotic.Extensions.Core.YahooMediaText.#ctor
  id: '#ctor'
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: YahooMediaText()
  nameWithType: YahooMediaText.YahooMediaText()
  fullName: Argotic.Extensions.Core.YahooMediaText.YahooMediaText()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 50
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public YahooMediaText()
    content.vb: Public Sub New
  overload: Argotic.Extensions.Core.YahooMediaText.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.#ctor(System.String)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: YahooMediaText(String)
  nameWithType: YahooMediaText.YahooMediaText(String)
  fullName: Argotic.Extensions.Core.YahooMediaText.YahooMediaText(System.String)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 60
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied textual content.\n"
  example: []
  syntax:
    content: public YahooMediaText(string text)
    parameters:
    - id: text
      type: System.String
      description: The text transcript, closed captioning, or lyrics for this media content.
    content.vb: Public Sub New(text As String)
  overload: Argotic.Extensions.Core.YahooMediaText.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">text</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">text</code> is an empty string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.Content
  commentId: P:Argotic.Extensions.Core.YahooMediaText.Content
  id: Content
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: YahooMediaText.Content
  fullName: Argotic.Extensions.Core.YahooMediaText.Content
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Content
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 74
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the content of this embedded text.\n"
  remarks: "\nAll HTML <strong>must</strong> be entity-encoded.\n"
  example: []
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
      description: The text transcript, closed captioning, or lyrics for this media content.
    content.vb: Public Property Content As String
  overload: Argotic.Extensions.Core.YahooMediaText.Content*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is an empty string.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.End
  commentId: P:Argotic.Extensions.Core.YahooMediaText.End
  id: End
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: End
  nameWithType: YahooMediaText.End
  fullName: Argotic.Extensions.Core.YahooMediaText.End
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: End
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 100
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the end time offset that this text stops being relevant to the media object.\n"
  remarks: "\nIf this property is not provided, and a <xref href=\"Argotic.Extensions.Core.YahooMediaText.Start\" data-throw-if-not-resolved=\"false\"></xref> is used,\nit is expected that the <xref href=\"Argotic.Extensions.Core.YahooMediaText.End\" data-throw-if-not-resolved=\"false\"></xref> is either the end of the clip or the start of the next <xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public TimeSpan End { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nA <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that represents the end time offset that this text stops being relevant to the media object.\nThe default value is <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no end time was specified.\n"
    content.vb: Public Property End As TimeSpan
  overload: Argotic.Extensions.Core.YahooMediaText.End*
  seealso:
  - linkId: Argotic.Extensions.Core.YahooMediaText.Start
    commentId: P:Argotic.Extensions.Core.YahooMediaText.Start
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.Language
  commentId: P:Argotic.Extensions.Core.YahooMediaText.Language
  id: Language
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: YahooMediaText.Language
  fullName: Argotic.Extensions.Core.YahooMediaText.Language
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Language
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 125
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the primary language encapsulated in this media object.\n"
  remarks: "\n<p>\n    The value of this property is a language identifier as defined by <a href=\"http://www.ietf.org/rfc/rfc3066.txt\">RFC 3066: Tags for the Identification of Languages</a>, or its successor.\n</p>\n"
  example: []
  syntax:
    content: public CultureInfo Language { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: "\nA <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> that represents the natural or formal language in which the <xref href=\"Argotic.Extensions.Core.YahooMediaText.Content\" data-throw-if-not-resolved=\"false\"></xref> is written.\nThe default value is a <strong>null</strong> reference, which indicates no language was specified.\n"
    content.vb: Public Property Language As CultureInfo
  overload: Argotic.Extensions.Core.YahooMediaText.Language*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.Start
  commentId: P:Argotic.Extensions.Core.YahooMediaText.Start
  id: Start
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: Start
  nameWithType: YahooMediaText.Start
  fullName: Argotic.Extensions.Core.YahooMediaText.Start
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Start
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 146
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the start time offset that this text starts being relevant to the media object.\n"
  example: []
  syntax:
    content: public TimeSpan Start { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
      description: "\nA <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that represents the start time offset that this text starts being relevant to the media object.\nThe default value is <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no start time was specified.\n"
    content.vb: Public Property Start As TimeSpan
  overload: Argotic.Extensions.Core.YahooMediaText.Start*
  seealso:
  - linkId: Argotic.Extensions.Core.YahooMediaText.End
    commentId: P:Argotic.Extensions.Core.YahooMediaText.End
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.TextType
  commentId: P:Argotic.Extensions.Core.YahooMediaText.TextType
  id: TextType
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: TextType
  nameWithType: YahooMediaText.TextType
  fullName: Argotic.Extensions.Core.YahooMediaText.TextType
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: TextType
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 169
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the entity encoding utilized by this embedded text.\n"
  remarks: "\nIf no entity encoding is specified, a default value of <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstructType.Plain\" data-throw-if-not-resolved=\"false\"></xref> can be assumed.\n"
  example: []
  syntax:
    content: public YahooMediaTextConstructType TextType { get; set; }
    parameters: []
    return:
      type: Argotic.Extensions.Core.YahooMediaTextConstructType
      description: "\nAn <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstruct\" data-throw-if-not-resolved=\"false\"></xref> enumeration value that represents the entity encoding utilized by this embedded text.\nThe default value is <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstructType.None\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property TextType As YahooMediaTextConstructType
  overload: Argotic.Extensions.Core.YahooMediaText.TextType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.op_Equality(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.op_Equality(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  id: op_Equality(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: Equality(YahooMediaText, YahooMediaText)
  nameWithType: YahooMediaText.Equality(YahooMediaText, YahooMediaText)
  fullName: Argotic.Extensions.Core.YahooMediaText.Equality(Argotic.Extensions.Core.YahooMediaText, Argotic.Extensions.Core.YahooMediaText)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 188
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(YahooMediaText first, YahooMediaText second)
    parameters:
    - id: first
      type: Argotic.Extensions.Core.YahooMediaText
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.Core.YahooMediaText
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As YahooMediaText, second As YahooMediaText) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaText.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaText.op_Inequality(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.op_Inequality(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  id: op_Inequality(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: Inequality(YahooMediaText, YahooMediaText)
  nameWithType: YahooMediaText.Inequality(YahooMediaText, YahooMediaText)
  fullName: Argotic.Extensions.Core.YahooMediaText.Inequality(Argotic.Extensions.Core.YahooMediaText, Argotic.Extensions.Core.YahooMediaText)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 208
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(YahooMediaText first, YahooMediaText second)
    parameters:
    - id: first
      type: Argotic.Extensions.Core.YahooMediaText
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.Core.YahooMediaText
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As YahooMediaText, second As YahooMediaText) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaText.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaText.op_LessThan(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.op_LessThan(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  id: op_LessThan(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: LessThan(YahooMediaText, YahooMediaText)
  nameWithType: YahooMediaText.LessThan(YahooMediaText, YahooMediaText)
  fullName: Argotic.Extensions.Core.YahooMediaText.LessThan(Argotic.Extensions.Core.YahooMediaText, Argotic.Extensions.Core.YahooMediaText)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 219
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(YahooMediaText first, YahooMediaText second)
    parameters:
    - id: first
      type: Argotic.Extensions.Core.YahooMediaText
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.Core.YahooMediaText
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As YahooMediaText, second As YahooMediaText) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaText.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaText.op_GreaterThan(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.op_GreaterThan(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  id: op_GreaterThan(Argotic.Extensions.Core.YahooMediaText,Argotic.Extensions.Core.YahooMediaText)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: GreaterThan(YahooMediaText, YahooMediaText)
  nameWithType: YahooMediaText.GreaterThan(YahooMediaText, YahooMediaText)
  fullName: Argotic.Extensions.Core.YahooMediaText.GreaterThan(Argotic.Extensions.Core.YahooMediaText, Argotic.Extensions.Core.YahooMediaText)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 239
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(YahooMediaText first, YahooMediaText second)
    parameters:
    - id: first
      type: Argotic.Extensions.Core.YahooMediaText
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.Core.YahooMediaText
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As YahooMediaText, second As YahooMediaText) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaText.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaText.TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  id: TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: TextTypeAsString(YahooMediaTextConstructType)
  nameWithType: YahooMediaText.TextTypeAsString(YahooMediaTextConstructType)
  fullName: Argotic.Extensions.Core.YahooMediaText.TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: TextTypeAsString
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 258
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nReturns the entity encoding type identifier for the supplied <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstructType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static string TextTypeAsString(YahooMediaTextConstructType type)
    parameters:
    - id: type
      type: Argotic.Extensions.Core.YahooMediaTextConstructType
      description: The <xref href="Argotic.Extensions.Core.YahooMediaTextConstructType" data-throw-if-not-resolved="false"></xref> to get the entity encoding type identifier for.
    return:
      type: System.String
      description: The entity encoding type identifier for the supplied <code data-dev-comment-type="paramref" class="paramref">type</code>, otherwise returns an empty string.
    content.vb: Public Shared Function TextTypeAsString(type As YahooMediaTextConstructType) As String
  overload: Argotic.Extensions.Core.YahooMediaText.TextTypeAsString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaText.TextTypeByName(System.String)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.TextTypeByName(System.String)
  id: TextTypeByName(System.String)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: TextTypeByName(String)
  nameWithType: YahooMediaText.TextTypeByName(String)
  fullName: Argotic.Extensions.Core.YahooMediaText.TextTypeByName(System.String)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: TextTypeByName
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 293
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nReturns the <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstructType\" data-throw-if-not-resolved=\"false\"></xref> enumeration value that corresponds to the specified entity encoding type name.\n"
  remarks: This method disregards case of specified entity encoding type name.
  example: []
  syntax:
    content: public static YahooMediaTextConstructType TextTypeByName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the entity encoding type.
    return:
      type: Argotic.Extensions.Core.YahooMediaTextConstructType
      description: A <xref href="Argotic.Extensions.Core.YahooMediaTextConstructType" data-throw-if-not-resolved="false"></xref> enumeration value that corresponds to the specified string, otherwise returns <strong>YahooMediaTextConstructType.None</strong>.
    content.vb: Public Shared Function TextTypeByName(name As String) As YahooMediaTextConstructType
  overload: Argotic.Extensions.Core.YahooMediaText.TextTypeByName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">name</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">name</code> is an empty string.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaText.Load(System.Xml.XPath.XPathNavigator)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator)
  nameWithType: YahooMediaText.Load(XPathNavigator)
  fullName: Argotic.Extensions.Core.YahooMediaText.Load(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 329
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nLoads this <xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be positioned on the XML element that represents a <xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> to extract information from.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.Core.YahooMediaText" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaText.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.WriteTo(System.Xml.XmlWriter)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  nameWithType: YahooMediaText.WriteTo(XmlWriter)
  fullName: Argotic.Extensions.Core.YahooMediaText.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WriteTo
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 399
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nSaves the current <xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> to which you want to save.
    content.vb: Public Sub WriteTo(writer As XmlWriter)
  overload: Argotic.Extensions.Core.YahooMediaText.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.ToString
  commentId: M:Argotic.Extensions.Core.YahooMediaText.ToString
  id: ToString
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: YahooMediaText.ToString()
  fullName: Argotic.Extensions.Core.YahooMediaText.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 440
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Extensions.Core.YahooMediaText\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns the XML representation for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Extensions.Core.YahooMediaText" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Extensions.Core.YahooMediaText.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Extensions.Core.YahooMediaText.CompareTo(System.Object)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: YahooMediaText.CompareTo(Object)
  fullName: Argotic.Extensions.Core.YahooMediaText.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 469
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Extensions.Core.YahooMediaText.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaText.Equals(System.Object)
  commentId: M:Argotic.Extensions.Core.YahooMediaText.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: YahooMediaText.Equals(Object)
  fullName: Argotic.Extensions.Core.YahooMediaText.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 503
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Extensions.Core.YahooMediaText.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Extensions.Core.YahooMediaText.GetHashCode
  commentId: M:Argotic.Extensions.Core.YahooMediaText.GetHashCode
  id: GetHashCode
  parent: Argotic.Extensions.Core.YahooMediaText
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: YahooMediaText.GetHashCode()
  fullName: Argotic.Extensions.Core.YahooMediaText.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaText.cs
    startLine: 517
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Extensions.Core.YahooMediaText.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Argotic.Extensions.Core.YahooMediaText
  commentId: T:Argotic.Extensions.Core.YahooMediaText
  parent: Argotic.Extensions.Core
  name: YahooMediaText
  nameWithType: YahooMediaText
  fullName: Argotic.Extensions.Core.YahooMediaText
- uid: Argotic.Extensions.Core
  commentId: N:Argotic.Extensions.Core
  name: Argotic.Extensions.Core
  nameWithType: Argotic.Extensions.Core
  fullName: Argotic.Extensions.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Extensions.Core.YahooMediaText.#ctor*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.#ctor
  name: YahooMediaText
  nameWithType: YahooMediaText.YahooMediaText
  fullName: Argotic.Extensions.Core.YahooMediaText.YahooMediaText
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Argotic.Extensions.Core.YahooMediaText.Content*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.Content
  name: Content
  nameWithType: YahooMediaText.Content
  fullName: Argotic.Extensions.Core.YahooMediaText.Content
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.MinValue
  commentId: F:System.TimeSpan.MinValue
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaText.Start
  commentId: P:Argotic.Extensions.Core.YahooMediaText.Start
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaText.End
  commentId: P:Argotic.Extensions.Core.YahooMediaText.End
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaText.End*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.End
  name: End
  nameWithType: YahooMediaText.End
  fullName: Argotic.Extensions.Core.YahooMediaText.End
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Argotic.Extensions.Core.YahooMediaText.Content
  commentId: P:Argotic.Extensions.Core.YahooMediaText.Content
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaText.Language*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.Language
  name: Language
  nameWithType: YahooMediaText.Language
  fullName: Argotic.Extensions.Core.YahooMediaText.Language
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Argotic.Extensions.Core.YahooMediaText.Start*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.Start
  name: Start
  nameWithType: YahooMediaText.Start
  fullName: Argotic.Extensions.Core.YahooMediaText.Start
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct
  commentId: T:Argotic.Extensions.Core.YahooMediaTextConstruct
  parent: Argotic.Extensions.Core
  name: YahooMediaTextConstruct
  nameWithType: YahooMediaTextConstruct
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct
- uid: Argotic.Extensions.Core.YahooMediaTextConstructType.None
  commentId: F:Argotic.Extensions.Core.YahooMediaTextConstructType.None
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaTextConstructType.Plain
  commentId: F:Argotic.Extensions.Core.YahooMediaTextConstructType.Plain
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaText.TextType*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.TextType
  name: TextType
  nameWithType: YahooMediaText.TextType
  fullName: Argotic.Extensions.Core.YahooMediaText.TextType
- uid: Argotic.Extensions.Core.YahooMediaTextConstructType
  commentId: T:Argotic.Extensions.Core.YahooMediaTextConstructType
  parent: Argotic.Extensions.Core
  name: YahooMediaTextConstructType
  nameWithType: YahooMediaTextConstructType
  fullName: Argotic.Extensions.Core.YahooMediaTextConstructType
- uid: Argotic.Extensions.Core.YahooMediaText.op_Equality*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.op_Equality
  name: Equality
  nameWithType: YahooMediaText.Equality
  fullName: Argotic.Extensions.Core.YahooMediaText.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Extensions.Core.YahooMediaText.op_Inequality*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.op_Inequality
  name: Inequality
  nameWithType: YahooMediaText.Inequality
  fullName: Argotic.Extensions.Core.YahooMediaText.Inequality
- uid: Argotic.Extensions.Core.YahooMediaText.op_LessThan*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.op_LessThan
  name: LessThan
  nameWithType: YahooMediaText.LessThan
  fullName: Argotic.Extensions.Core.YahooMediaText.LessThan
- uid: Argotic.Extensions.Core.YahooMediaText.op_GreaterThan*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.op_GreaterThan
  name: GreaterThan
  nameWithType: YahooMediaText.GreaterThan
  fullName: Argotic.Extensions.Core.YahooMediaText.GreaterThan
- uid: Argotic.Extensions.Core.YahooMediaText.TextTypeAsString*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.TextTypeAsString
  name: TextTypeAsString
  nameWithType: YahooMediaText.TextTypeAsString
  fullName: Argotic.Extensions.Core.YahooMediaText.TextTypeAsString
- uid: Argotic.Extensions.Core.YahooMediaText.TextTypeByName*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.TextTypeByName
  name: TextTypeByName
  nameWithType: YahooMediaText.TextTypeByName
  fullName: Argotic.Extensions.Core.YahooMediaText.TextTypeByName
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Extensions.Core.YahooMediaText.Load*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.Load
  name: Load
  nameWithType: YahooMediaText.Load
  fullName: Argotic.Extensions.Core.YahooMediaText.Load
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Extensions.Core.YahooMediaText.WriteTo*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.WriteTo
  name: WriteTo
  nameWithType: YahooMediaText.WriteTo
  fullName: Argotic.Extensions.Core.YahooMediaText.WriteTo
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.Core.YahooMediaText.ToString*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.ToString
  name: ToString
  nameWithType: YahooMediaText.ToString
  fullName: Argotic.Extensions.Core.YahooMediaText.ToString
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaText.CompareTo*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.CompareTo
  name: CompareTo
  nameWithType: YahooMediaText.CompareTo
  fullName: Argotic.Extensions.Core.YahooMediaText.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.Core.YahooMediaText.Equals*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.Equals
  name: Equals
  nameWithType: YahooMediaText.Equals
  fullName: Argotic.Extensions.Core.YahooMediaText.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.Core.YahooMediaText.GetHashCode*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaText.GetHashCode
  name: GetHashCode
  nameWithType: YahooMediaText.GetHashCode
  fullName: Argotic.Extensions.Core.YahooMediaText.GetHashCode
