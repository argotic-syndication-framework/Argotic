### YamlMime:ManagedReference
items:
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct
  commentId: T:Argotic.Extensions.Core.YahooMediaTextConstruct
  id: YahooMediaTextConstruct
  parent: Argotic.Extensions.Core
  children:
  - Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor
  - Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor(System.String)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor(System.String,Argotic.Extensions.Core.YahooMediaTextConstructType)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.CompareTo(System.Object)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.Content
  - Argotic.Extensions.Core.YahooMediaTextConstruct.Equals(System.Object)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.GetHashCode
  - Argotic.Extensions.Core.YahooMediaTextConstruct.Load(System.Xml.XPath.XPathNavigator)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.op_Equality(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.op_GreaterThan(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.op_Inequality(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.op_LessThan(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.TextType
  - Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeByName(System.String)
  - Argotic.Extensions.Core.YahooMediaTextConstruct.ToString
  - Argotic.Extensions.Core.YahooMediaTextConstruct.WriteTo(System.Xml.XmlWriter,System.String)
  langs:
  - csharp
  - vb
  name: YahooMediaTextConstruct
  nameWithType: YahooMediaTextConstruct
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: YahooMediaTextConstruct
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 16
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nRepresents human-readable text.\n"
  remarks: "\n<p>\n    This class is a generic representation for the <em>media:title</em> and <em>media:description</em> elements in the Yahoo media specificaton.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class YahooMediaTextConstruct : IComparable
    content.vb: >-
      <Serializable>

      Public Class YahooMediaTextConstruct

          Implements IComparable
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor
  id: '#ctor'
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: YahooMediaTextConstruct()
  nameWithType: YahooMediaTextConstruct.YahooMediaTextConstruct()
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.YahooMediaTextConstruct()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 32
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstruct\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public YahooMediaTextConstruct()
    content.vb: Public Sub New
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor(System.String)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: YahooMediaTextConstruct(String)
  nameWithType: YahooMediaTextConstruct.YahooMediaTextConstruct(String)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.YahooMediaTextConstruct(System.String)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 42
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstruct\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied text.\n"
  example: []
  syntax:
    content: public YahooMediaTextConstruct(string text)
    parameters:
    - id: text
      type: System.String
      description: The content of this human-readable text.
    content.vb: Public Sub New(text As String)
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">text</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">text</code> is an empty string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor(System.String,Argotic.Extensions.Core.YahooMediaTextConstructType)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor(System.String,Argotic.Extensions.Core.YahooMediaTextConstructType)
  id: '#ctor(System.String,Argotic.Extensions.Core.YahooMediaTextConstructType)'
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: YahooMediaTextConstruct(String, YahooMediaTextConstructType)
  nameWithType: YahooMediaTextConstruct.YahooMediaTextConstruct(String, YahooMediaTextConstructType)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.YahooMediaTextConstruct(System.String, Argotic.Extensions.Core.YahooMediaTextConstructType)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 54
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstruct\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied text.\n"
  example: []
  syntax:
    content: public YahooMediaTextConstruct(string text, YahooMediaTextConstructType type)
    parameters:
    - id: text
      type: System.String
      description: The content of this human-readable text.
    - id: type
      type: Argotic.Extensions.Core.YahooMediaTextConstructType
      description: An <xref href="Argotic.Extensions.Core.YahooMediaTextConstruct" data-throw-if-not-resolved="false"></xref> enumeration value that represents the entity encoding utilized by this human-readable text.
    content.vb: Public Sub New(text As String, type As YahooMediaTextConstructType)
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">text</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">text</code> is an empty string.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.Content
  commentId: P:Argotic.Extensions.Core.YahooMediaTextConstruct.Content
  id: Content
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: YahooMediaTextConstruct.Content
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Content
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Content
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 69
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the content of this human-readable text.\n"
  remarks: "\nAll HTML <strong>must</strong> be entity-encoded.\n"
  example: []
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
      description: The content of this human-readable text.
    content.vb: Public Property Content As String
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.Content*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is an empty string.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.TextType
  commentId: P:Argotic.Extensions.Core.YahooMediaTextConstruct.TextType
  id: TextType
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: TextType
  nameWithType: YahooMediaTextConstruct.TextType
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.TextType
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: TextType
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 93
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nGets or sets the entity encoding utilized by this human-readable text.\n"
  remarks: "\nIf no entity encoding is specified, a default value of <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstructType.Plain\" data-throw-if-not-resolved=\"false\"></xref> can be assumed.\n"
  example: []
  syntax:
    content: public YahooMediaTextConstructType TextType { get; set; }
    parameters: []
    return:
      type: Argotic.Extensions.Core.YahooMediaTextConstructType
      description: "\nAn <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstruct\" data-throw-if-not-resolved=\"false\"></xref> enumeration value that represents the entity encoding utilized by this human-readable text.\nThe default value is <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstructType.None\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property TextType As YahooMediaTextConstructType
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.TextType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.op_Equality(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.op_Equality(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  id: op_Equality(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: Equality(YahooMediaTextConstruct, YahooMediaTextConstruct)
  nameWithType: YahooMediaTextConstruct.Equality(YahooMediaTextConstruct, YahooMediaTextConstruct)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Equality(Argotic.Extensions.Core.YahooMediaTextConstruct, Argotic.Extensions.Core.YahooMediaTextConstruct)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 112
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(YahooMediaTextConstruct first, YahooMediaTextConstruct second)
    parameters:
    - id: first
      type: Argotic.Extensions.Core.YahooMediaTextConstruct
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.Core.YahooMediaTextConstruct
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As YahooMediaTextConstruct, second As YahooMediaTextConstruct) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.op_Inequality(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.op_Inequality(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  id: op_Inequality(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: Inequality(YahooMediaTextConstruct, YahooMediaTextConstruct)
  nameWithType: YahooMediaTextConstruct.Inequality(YahooMediaTextConstruct, YahooMediaTextConstruct)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Inequality(Argotic.Extensions.Core.YahooMediaTextConstruct, Argotic.Extensions.Core.YahooMediaTextConstruct)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 132
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(YahooMediaTextConstruct first, YahooMediaTextConstruct second)
    parameters:
    - id: first
      type: Argotic.Extensions.Core.YahooMediaTextConstruct
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.Core.YahooMediaTextConstruct
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As YahooMediaTextConstruct, second As YahooMediaTextConstruct) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.op_LessThan(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.op_LessThan(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  id: op_LessThan(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: LessThan(YahooMediaTextConstruct, YahooMediaTextConstruct)
  nameWithType: YahooMediaTextConstruct.LessThan(YahooMediaTextConstruct, YahooMediaTextConstruct)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.LessThan(Argotic.Extensions.Core.YahooMediaTextConstruct, Argotic.Extensions.Core.YahooMediaTextConstruct)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 143
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(YahooMediaTextConstruct first, YahooMediaTextConstruct second)
    parameters:
    - id: first
      type: Argotic.Extensions.Core.YahooMediaTextConstruct
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.Core.YahooMediaTextConstruct
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As YahooMediaTextConstruct, second As YahooMediaTextConstruct) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.op_GreaterThan(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.op_GreaterThan(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  id: op_GreaterThan(Argotic.Extensions.Core.YahooMediaTextConstruct,Argotic.Extensions.Core.YahooMediaTextConstruct)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: GreaterThan(YahooMediaTextConstruct, YahooMediaTextConstruct)
  nameWithType: YahooMediaTextConstruct.GreaterThan(YahooMediaTextConstruct, YahooMediaTextConstruct)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.GreaterThan(Argotic.Extensions.Core.YahooMediaTextConstruct, Argotic.Extensions.Core.YahooMediaTextConstruct)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 163
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(YahooMediaTextConstruct first, YahooMediaTextConstruct second)
    parameters:
    - id: first
      type: Argotic.Extensions.Core.YahooMediaTextConstruct
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.Core.YahooMediaTextConstruct
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As YahooMediaTextConstruct, second As YahooMediaTextConstruct) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  id: TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: TextTypeAsString(YahooMediaTextConstructType)
  nameWithType: YahooMediaTextConstruct.TextTypeAsString(YahooMediaTextConstructType)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeAsString(Argotic.Extensions.Core.YahooMediaTextConstructType)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: TextTypeAsString
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 182
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nReturns the entity encoding type identifier for the supplied <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstructType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static string TextTypeAsString(YahooMediaTextConstructType type)
    parameters:
    - id: type
      type: Argotic.Extensions.Core.YahooMediaTextConstructType
      description: The <xref href="Argotic.Extensions.Core.YahooMediaTextConstructType" data-throw-if-not-resolved="false"></xref> to get the entity encoding type identifier for.
    return:
      type: System.String
      description: The entity encoding type identifier for the supplied <code data-dev-comment-type="paramref" class="paramref">type</code>, otherwise returns an empty string.
    content.vb: Public Shared Function TextTypeAsString(type As YahooMediaTextConstructType) As String
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeAsString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeByName(System.String)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeByName(System.String)
  id: TextTypeByName(System.String)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: TextTypeByName(String)
  nameWithType: YahooMediaTextConstruct.TextTypeByName(String)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeByName(System.String)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: TextTypeByName
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 217
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nReturns the <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstructType\" data-throw-if-not-resolved=\"false\"></xref> enumeration value that corresponds to the specified entity encoding type name.\n"
  remarks: This method disregards case of specified entity encoding type name.
  example: []
  syntax:
    content: public static YahooMediaTextConstructType TextTypeByName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the entity encoding type.
    return:
      type: Argotic.Extensions.Core.YahooMediaTextConstructType
      description: A <xref href="Argotic.Extensions.Core.YahooMediaTextConstructType" data-throw-if-not-resolved="false"></xref> enumeration value that corresponds to the specified string, otherwise returns <strong>YahooMediaTextConstructType.None</strong>.
    content.vb: Public Shared Function TextTypeByName(name As String) As YahooMediaTextConstructType
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeByName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">name</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">name</code> is an empty string.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.GetHashCode
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.GetHashCode
  id: GetHashCode
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: YahooMediaTextConstruct.GetHashCode()
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 248
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.Load(System.Xml.XPath.XPathNavigator)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator)
  nameWithType: YahooMediaTextConstruct.Load(XPathNavigator)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Load(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 264
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nLoads this <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstruct\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be positioned on the XML element that represents a <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstruct\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> to extract information from.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.Core.YahooMediaTextConstruct" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator) As Boolean
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.WriteTo(System.Xml.XmlWriter,System.String)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.WriteTo(System.Xml.XmlWriter,System.String)
  id: WriteTo(System.Xml.XmlWriter,System.String)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter, String)
  nameWithType: YahooMediaTextConstruct.WriteTo(XmlWriter, String)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.WriteTo(System.Xml.XmlWriter, System.String)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WriteTo
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 297
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nSaves the current <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstruct\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(XmlWriter writer, string elementName)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> to which you want to save.
    - id: elementName
      type: System.String
      description: The local name of the text construct being written.
    content.vb: Public Sub WriteTo(writer As XmlWriter, elementName As String)
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.ToString
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.ToString
  id: ToString
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: YahooMediaTextConstruct.ToString()
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 323
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Extensions.Core.YahooMediaTextConstruct\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns the XML representation for the current instance. A <em>generic</em> element name is used.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Extensions.Core.YahooMediaTextConstruct" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.CompareTo(System.Object)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: YahooMediaTextConstruct.CompareTo(Object)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 352
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.Equals(System.Object)
  commentId: M:Argotic.Extensions.Core.YahooMediaTextConstruct.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Extensions.Core.YahooMediaTextConstruct
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: YahooMediaTextConstruct.Equals(Object)
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Extensions/Core/YahooMedia/YahooMediaTextConstruct.cs
    startLine: 379
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions.Core
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Extensions.Core.YahooMediaTextConstruct.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Argotic.Extensions.Core
  commentId: N:Argotic.Extensions.Core
  name: Argotic.Extensions.Core
  nameWithType: Argotic.Extensions.Core
  fullName: Argotic.Extensions.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct
  commentId: T:Argotic.Extensions.Core.YahooMediaTextConstruct
  parent: Argotic.Extensions.Core
  name: YahooMediaTextConstruct
  nameWithType: YahooMediaTextConstruct
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.#ctor
  name: YahooMediaTextConstruct
  nameWithType: YahooMediaTextConstruct.YahooMediaTextConstruct
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.YahooMediaTextConstruct
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Argotic.Extensions.Core.YahooMediaTextConstructType
  commentId: T:Argotic.Extensions.Core.YahooMediaTextConstructType
  parent: Argotic.Extensions.Core
  name: YahooMediaTextConstructType
  nameWithType: YahooMediaTextConstructType
  fullName: Argotic.Extensions.Core.YahooMediaTextConstructType
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.Content*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.Content
  name: Content
  nameWithType: YahooMediaTextConstruct.Content
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Content
- uid: Argotic.Extensions.Core.YahooMediaTextConstructType.None
  commentId: F:Argotic.Extensions.Core.YahooMediaTextConstructType.None
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaTextConstructType.Plain
  commentId: F:Argotic.Extensions.Core.YahooMediaTextConstructType.Plain
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.TextType*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.TextType
  name: TextType
  nameWithType: YahooMediaTextConstruct.TextType
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.TextType
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.op_Equality*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.op_Equality
  name: Equality
  nameWithType: YahooMediaTextConstruct.Equality
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.op_Inequality*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.op_Inequality
  name: Inequality
  nameWithType: YahooMediaTextConstruct.Inequality
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Inequality
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.op_LessThan*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.op_LessThan
  name: LessThan
  nameWithType: YahooMediaTextConstruct.LessThan
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.LessThan
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.op_GreaterThan*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.op_GreaterThan
  name: GreaterThan
  nameWithType: YahooMediaTextConstruct.GreaterThan
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.GreaterThan
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeAsString*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeAsString
  name: TextTypeAsString
  nameWithType: YahooMediaTextConstruct.TextTypeAsString
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeAsString
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeByName*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeByName
  name: TextTypeByName
  nameWithType: YahooMediaTextConstruct.TextTypeByName
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.TextTypeByName
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.GetHashCode*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.GetHashCode
  name: GetHashCode
  nameWithType: YahooMediaTextConstruct.GetHashCode
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.Load*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.Load
  name: Load
  nameWithType: YahooMediaTextConstruct.Load
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Load
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.WriteTo*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.WriteTo
  name: WriteTo
  nameWithType: YahooMediaTextConstruct.WriteTo
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.WriteTo
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.ToString*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.ToString
  name: ToString
  nameWithType: YahooMediaTextConstruct.ToString
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.ToString
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.CompareTo*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.CompareTo
  name: CompareTo
  nameWithType: YahooMediaTextConstruct.CompareTo
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.Core.YahooMediaTextConstruct.Equals*
  commentId: Overload:Argotic.Extensions.Core.YahooMediaTextConstruct.Equals
  name: Equals
  nameWithType: YahooMediaTextConstruct.Equals
  fullName: Argotic.Extensions.Core.YahooMediaTextConstruct.Equals
