### YamlMime:ManagedReference
items:
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  commentId: T:Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  id: SyndicationExtensionLoadedEventArgs
  parent: Argotic.Extensions
  children:
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable)
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,Argotic.Extensions.ISyndicationExtension)
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.CompareTo(System.Object)
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Data
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Empty
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equals(System.Object)
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Extension
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GetHashCode
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Equality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_GreaterThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Inequality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_LessThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  - Argotic.Extensions.SyndicationExtensionLoadedEventArgs.ToString
  langs:
  - csharp
  - vb
  name: SyndicationExtensionLoadedEventArgs
  nameWithType: SyndicationExtensionLoadedEventArgs
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: SyndicationExtensionLoadedEventArgs
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 16
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nProvides data for the <xref href=\"Argotic.Extensions.ISyndicationExtension.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  remarks: "\nA <xref href=\"Argotic.Extensions.ISyndicationExtension.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event occurs whenever the <xref href=\"Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)\" data-throw-if-not-resolved=\"false\"></xref>\nor <xref href=\"Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)\" data-throw-if-not-resolved=\"false\"></xref> methods are called.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class SyndicationExtensionLoadedEventArgs : EventArgs, IComparable
    content.vb: >-
      <Serializable>

      Public Class SyndicationExtensionLoadedEventArgs

          Inherits EventArgs

          Implements IComparable
  seealso:
  - linkId: Argotic.Extensions.ISyndicationExtension
    commentId: T:Argotic.Extensions.ISyndicationExtension
  - linkId: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)
    commentId: M:Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)
  - linkId: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)
    commentId: M:Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)
  inheritance:
  - System.Object
  - System.EventArgs
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor
  id: '#ctor'
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: SyndicationExtensionLoadedEventArgs()
  nameWithType: SyndicationExtensionLoadedEventArgs.SyndicationExtensionLoadedEventArgs()
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.SyndicationExtensionLoadedEventArgs()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 38
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.SyndicationExtensionLoadedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public SyndicationExtensionLoadedEventArgs()
    content.vb: Public Sub New
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable)
  id: '#ctor(System.Xml.XPath.IXPathNavigable)'
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: SyndicationExtensionLoadedEventArgs(IXPathNavigable)
  nameWithType: SyndicationExtensionLoadedEventArgs.SyndicationExtensionLoadedEventArgs(IXPathNavigable)
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.SyndicationExtensionLoadedEventArgs(System.Xml.XPath.IXPathNavigable)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 47
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.SyndicationExtensionLoadedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied <xref href=\"System.Xml.XPath.IXPathNavigable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public SyndicationExtensionLoadedEventArgs(IXPathNavigable data)
    parameters:
    - id: data
      type: System.Xml.XPath.IXPathNavigable
      description: A <xref href="System.Xml.XPath.IXPathNavigable" data-throw-if-not-resolved="false"></xref> object that represents the XML data that was used to load the syndication extension.
    content.vb: Public Sub New(data As IXPathNavigable)
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">data</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,Argotic.Extensions.ISyndicationExtension)
  id: '#ctor(System.Xml.XPath.IXPathNavigable,Argotic.Extensions.ISyndicationExtension)'
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: SyndicationExtensionLoadedEventArgs(IXPathNavigable, ISyndicationExtension)
  nameWithType: SyndicationExtensionLoadedEventArgs.SyndicationExtensionLoadedEventArgs(IXPathNavigable, ISyndicationExtension)
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.SyndicationExtensionLoadedEventArgs(System.Xml.XPath.IXPathNavigable, Argotic.Extensions.ISyndicationExtension)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 64
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Extensions.SyndicationExtensionLoadedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied <xref href=\"System.Xml.XPath.IXPathNavigable\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public SyndicationExtensionLoadedEventArgs(IXPathNavigable data, ISyndicationExtension extension)
    parameters:
    - id: data
      type: System.Xml.XPath.IXPathNavigable
      description: A <xref href="System.Xml.XPath.IXPathNavigable" data-throw-if-not-resolved="false"></xref> object that represents the XML data that was used to load the syndication extension.
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: "\nA <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> that represents the syndication extension after the load operation completed.\n"
    content.vb: Public Sub New(data As IXPathNavigable, extension As ISyndicationExtension)
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">data</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Empty
  commentId: P:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Empty
  id: Empty
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: SyndicationExtensionLoadedEventArgs.Empty
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Empty
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Empty
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 77
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nGets represents an syndication extension loaded event with no event data.\n"
  remarks: The value of Empty is a read-only instance of <xref href="Argotic.Extensions.SyndicationExtensionLoadedEventArgs" data-throw-if-not-resolved="false"></xref> equivalent to the result of calling the <xref href="Argotic.Extensions.SyndicationExtensionLoadedEventArgs.%23ctor" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public static SyndicationExtensionLoadedEventArgs Empty { get; }
    parameters: []
    return:
      type: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
      description: An uninitialized instance of the <xref href="Argotic.Extensions.SyndicationExtensionLoadedEventArgs" data-throw-if-not-resolved="false"></xref> class.
    content.vb: Public Shared ReadOnly Property Empty As SyndicationExtensionLoadedEventArgs
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Empty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Data
  commentId: P:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Data
  id: Data
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: SyndicationExtensionLoadedEventArgs.Data
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Data
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Data
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 91
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nGets a read-only <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object for navigating the XML data that was used to load the syndication extension.\n"
  example: []
  syntax:
    content: public XPathNavigator Data { get; }
    parameters: []
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "\nA read-only <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object for navigating the XML data that was used to load the syndication extension.\n"
    content.vb: Public ReadOnly Property Data As XPathNavigator
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Data*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Extension
  commentId: P:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Extension
  id: Extension
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: SyndicationExtensionLoadedEventArgs.Extension
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Extension
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Extension
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 105
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nGets the <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> that resulted from the load operation.\n"
  example: []
  syntax:
    content: public ISyndicationExtension Extension { get; }
    parameters: []
    return:
      type: Argotic.Extensions.ISyndicationExtension
      description: "\nThe <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> that resulted from the load operation.\n"
    content.vb: Public ReadOnly Property Extension As ISyndicationExtension
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Extension*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Equality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Equality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  id: op_Equality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: Equality(SyndicationExtensionLoadedEventArgs, SyndicationExtensionLoadedEventArgs)
  nameWithType: SyndicationExtensionLoadedEventArgs.Equality(SyndicationExtensionLoadedEventArgs, SyndicationExtensionLoadedEventArgs)
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs, Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 119
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(SyndicationExtensionLoadedEventArgs first, SyndicationExtensionLoadedEventArgs second)
    parameters:
    - id: first
      type: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As SyndicationExtensionLoadedEventArgs, second As SyndicationExtensionLoadedEventArgs) As Boolean
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Inequality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Inequality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  id: op_Inequality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: Inequality(SyndicationExtensionLoadedEventArgs, SyndicationExtensionLoadedEventArgs)
  nameWithType: SyndicationExtensionLoadedEventArgs.Inequality(SyndicationExtensionLoadedEventArgs, SyndicationExtensionLoadedEventArgs)
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Inequality(Argotic.Extensions.SyndicationExtensionLoadedEventArgs, Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 139
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(SyndicationExtensionLoadedEventArgs first, SyndicationExtensionLoadedEventArgs second)
    parameters:
    - id: first
      type: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As SyndicationExtensionLoadedEventArgs, second As SyndicationExtensionLoadedEventArgs) As Boolean
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_LessThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_LessThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  id: op_LessThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: LessThan(SyndicationExtensionLoadedEventArgs, SyndicationExtensionLoadedEventArgs)
  nameWithType: SyndicationExtensionLoadedEventArgs.LessThan(SyndicationExtensionLoadedEventArgs, SyndicationExtensionLoadedEventArgs)
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.LessThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs, Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 150
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(SyndicationExtensionLoadedEventArgs first, SyndicationExtensionLoadedEventArgs second)
    parameters:
    - id: first
      type: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As SyndicationExtensionLoadedEventArgs, second As SyndicationExtensionLoadedEventArgs) As Boolean
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_GreaterThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_GreaterThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  id: op_GreaterThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs,Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: GreaterThan(SyndicationExtensionLoadedEventArgs, SyndicationExtensionLoadedEventArgs)
  nameWithType: SyndicationExtensionLoadedEventArgs.GreaterThan(SyndicationExtensionLoadedEventArgs, SyndicationExtensionLoadedEventArgs)
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GreaterThan(Argotic.Extensions.SyndicationExtensionLoadedEventArgs, Argotic.Extensions.SyndicationExtensionLoadedEventArgs)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 170
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(SyndicationExtensionLoadedEventArgs first, SyndicationExtensionLoadedEventArgs second)
    parameters:
    - id: first
      type: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
      description: Operand to be compared.
    - id: second
      type: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As SyndicationExtensionLoadedEventArgs, second As SyndicationExtensionLoadedEventArgs) As Boolean
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equals(System.Object)
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SyndicationExtensionLoadedEventArgs.Equals(Object)
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 189
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.ToString
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.ToString
  id: ToString
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SyndicationExtensionLoadedEventArgs.ToString()
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 206
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Extensions.SyndicationExtensionLoadedEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns a human-readable string for the current instance. Hash code values are displayed for applicable properties.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Extensions.SyndicationExtensionLoadedEventArgs" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.CompareTo(System.Object)
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: SyndicationExtensionLoadedEventArgs.CompareTo(Object)
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 223
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GetHashCode
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GetHashCode
  id: GetHashCode
  parent: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SyndicationExtensionLoadedEventArgs.GetHashCode()
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Extensions/SyndicationExtensionLoadedEventArgs.cs
    startLine: 280
  assemblies:
  - Argotic.Extensions
  namespace: Argotic.Extensions
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Argotic.Extensions.ISyndicationExtension.Loaded
  commentId: E:Argotic.Extensions.ISyndicationExtension.Loaded
  parent: Argotic.Extensions.ISyndicationExtension
  name: Loaded
  nameWithType: ISyndicationExtension.Loaded
  fullName: Argotic.Extensions.ISyndicationExtension.Loaded
- uid: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)
  parent: Argotic.Extensions.ISyndicationExtension
  isExternal: true
  name: Load(XmlReader)
  nameWithType: ISyndicationExtension.Load(XmlReader)
  fullName: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)
  spec.csharp:
  - uid: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)
    name: Load
    nameWithType: ISyndicationExtension.Load
    fullName: Argotic.Extensions.ISyndicationExtension.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XmlReader)
    name: Load
    nameWithType: ISyndicationExtension.Load
    fullName: Argotic.Extensions.ISyndicationExtension.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)
  parent: Argotic.Extensions.ISyndicationExtension
  isExternal: true
  name: Load(IXPathNavigable)
  nameWithType: ISyndicationExtension.Load(IXPathNavigable)
  fullName: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)
    name: Load
    nameWithType: ISyndicationExtension.Load
    fullName: Argotic.Extensions.ISyndicationExtension.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.ISyndicationExtension.Load(System.Xml.XPath.IXPathNavigable)
    name: Load
    nameWithType: ISyndicationExtension.Load
    fullName: Argotic.Extensions.ISyndicationExtension.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.ISyndicationExtension
  commentId: T:Argotic.Extensions.ISyndicationExtension
  parent: Argotic.Extensions
  name: ISyndicationExtension
  nameWithType: ISyndicationExtension
  fullName: Argotic.Extensions.ISyndicationExtension
- uid: Argotic.Extensions
  commentId: N:Argotic.Extensions
  name: Argotic.Extensions
  nameWithType: Argotic.Extensions
  fullName: Argotic.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  commentId: T:Argotic.Extensions.SyndicationExtensionLoadedEventArgs
  parent: Argotic.Extensions
  name: SyndicationExtensionLoadedEventArgs
  nameWithType: SyndicationExtensionLoadedEventArgs
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor
  name: SyndicationExtensionLoadedEventArgs
  nameWithType: SyndicationExtensionLoadedEventArgs.SyndicationExtensionLoadedEventArgs
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.SyndicationExtensionLoadedEventArgs
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor
  commentId: M:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.#ctor
  isExternal: true
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Empty*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Empty
  name: Empty
  nameWithType: SyndicationExtensionLoadedEventArgs.Empty
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Empty
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Data*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Data
  name: Data
  nameWithType: SyndicationExtensionLoadedEventArgs.Data
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Data
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Extension*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Extension
  name: Extension
  nameWithType: SyndicationExtensionLoadedEventArgs.Extension
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Extension
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Equality*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Equality
  name: Equality
  nameWithType: SyndicationExtensionLoadedEventArgs.Equality
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Inequality*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_Inequality
  name: Inequality
  nameWithType: SyndicationExtensionLoadedEventArgs.Inequality
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Inequality
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_LessThan*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_LessThan
  name: LessThan
  nameWithType: SyndicationExtensionLoadedEventArgs.LessThan
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.LessThan
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_GreaterThan*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.op_GreaterThan
  name: GreaterThan
  nameWithType: SyndicationExtensionLoadedEventArgs.GreaterThan
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GreaterThan
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equals*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equals
  name: Equals
  nameWithType: SyndicationExtensionLoadedEventArgs.Equals
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.Equals
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.ToString*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.ToString
  name: ToString
  nameWithType: SyndicationExtensionLoadedEventArgs.ToString
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.ToString
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.CompareTo*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.CompareTo
  name: CompareTo
  nameWithType: SyndicationExtensionLoadedEventArgs.CompareTo
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GetHashCode*
  commentId: Overload:Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GetHashCode
  name: GetHashCode
  nameWithType: SyndicationExtensionLoadedEventArgs.GetHashCode
  fullName: Argotic.Extensions.SyndicationExtensionLoadedEventArgs.GetHashCode
