### YamlMime:ManagedReference
items:
- uid: Argotic.Net.TrackbackMessage
  commentId: T:Argotic.Net.TrackbackMessage
  id: TrackbackMessage
  parent: Argotic.Net
  children:
  - Argotic.Net.TrackbackMessage.#ctor
  - Argotic.Net.TrackbackMessage.#ctor(System.Uri)
  - Argotic.Net.TrackbackMessage.CompareTo(System.Object)
  - Argotic.Net.TrackbackMessage.Encoding
  - Argotic.Net.TrackbackMessage.Equals(System.Object)
  - Argotic.Net.TrackbackMessage.Excerpt
  - Argotic.Net.TrackbackMessage.GetHashCode
  - Argotic.Net.TrackbackMessage.Load(System.Collections.Specialized.NameValueCollection)
  - Argotic.Net.TrackbackMessage.op_Equality(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  - Argotic.Net.TrackbackMessage.op_GreaterThan(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  - Argotic.Net.TrackbackMessage.op_Inequality(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  - Argotic.Net.TrackbackMessage.op_LessThan(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  - Argotic.Net.TrackbackMessage.Permalink
  - Argotic.Net.TrackbackMessage.Title
  - Argotic.Net.TrackbackMessage.ToString
  - Argotic.Net.TrackbackMessage.WeblogName
  - Argotic.Net.TrackbackMessage.WriteTo(System.IO.StreamWriter)
  langs:
  - csharp
  - vb
  name: TrackbackMessage
  nameWithType: TrackbackMessage
  fullName: Argotic.Net.TrackbackMessage
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: TrackbackMessage
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 18
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nRepresents a Trackback ping request that can be sent using the <xref href=\"Argotic.Net.TrackbackClient\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Net\\TrackbackClientExample.cs\" region=\"TrackbackClient\"></code></pre>\n</code></pre>\n"
  syntax:
    content: >-
      [Serializable]

      public class TrackbackMessage : IComparable
    content.vb: >-
      <Serializable>

      Public Class TrackbackMessage

          Implements IComparable
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Net.TrackbackMessage.#ctor
  commentId: M:Argotic.Net.TrackbackMessage.#ctor
  id: '#ctor'
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: TrackbackMessage()
  nameWithType: TrackbackMessage.TrackbackMessage()
  fullName: Argotic.Net.TrackbackMessage.TrackbackMessage()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 53
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Net.TrackbackMessage\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TrackbackMessage()
    content.vb: Public Sub New
  overload: Argotic.Net.TrackbackMessage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.TrackbackMessage.#ctor(System.Uri)
  commentId: M:Argotic.Net.TrackbackMessage.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: TrackbackMessage(Uri)
  nameWithType: TrackbackMessage.TrackbackMessage(Uri)
  fullName: Argotic.Net.TrackbackMessage.TrackbackMessage(System.Uri)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 65
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Net.TrackbackMessage\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <code data-dev-comment-type=\"paramref\" class=\"paramref\">permalink</code> should point as closely as possible to the actual entry on the HTML page, as it will be used when linking to the entry in question.\n"
  example: []
  syntax:
    content: public TrackbackMessage(Uri permalink)
    parameters:
    - id: permalink
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the permalink for the entry.
    content.vb: Public Sub New(permalink As Uri)
  overload: Argotic.Net.TrackbackMessage.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">permalink</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.TrackbackMessage.Encoding
  commentId: P:Argotic.Net.TrackbackMessage.Encoding
  id: Encoding
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: TrackbackMessage.Encoding
  fullName: Argotic.Net.TrackbackMessage.Encoding
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Encoding
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 79
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nGets or sets the <xref href=\"Argotic.Net.TrackbackMessage.Encoding\" data-throw-if-not-resolved=\"false\"></xref> of this message.\n"
  example: []
  syntax:
    content: public Encoding Encoding { get; set; }
    parameters: []
    return:
      type: System.Text.Encoding
      description: A <xref href="Argotic.Net.TrackbackMessage.Encoding" data-throw-if-not-resolved="false"></xref> that specifies the character encoding of this message. The default value is <xref href="System.Text.UTF8Encoding" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Property Encoding As Encoding
  overload: Argotic.Net.TrackbackMessage.Encoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Net.TrackbackMessage.Excerpt
  commentId: P:Argotic.Net.TrackbackMessage.Excerpt
  id: Excerpt
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: Excerpt
  nameWithType: TrackbackMessage.Excerpt
  fullName: Argotic.Net.TrackbackMessage.Excerpt
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Excerpt
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 100
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nGets or sets an excerpt for the entry.\n"
  remarks: "\nThe excerpt <strong>must</strong> be in the character encoding specified by the <xref href=\"Argotic.Net.TrackbackMessage.Encoding\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: public string Excerpt { get; set; }
    parameters: []
    return:
      type: System.String
      description: An excerpt of the entry.
    content.vb: Public Property Excerpt As String
  overload: Argotic.Net.TrackbackMessage.Excerpt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Net.TrackbackMessage.Permalink
  commentId: P:Argotic.Net.TrackbackMessage.Permalink
  id: Permalink
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: Permalink
  nameWithType: TrackbackMessage.Permalink
  fullName: Argotic.Net.TrackbackMessage.Permalink
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Permalink
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 128
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nGets or sets the permalink for the entry.\n"
  remarks: "\nThe permalink should point as closely as possible to the actual entry on the HTML page, as it will be used when linking to the entry in question.\n"
  example: []
  syntax:
    content: public Uri Permalink { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the permalink for the entry.
    content.vb: Public Property Permalink As Uri
  overload: Argotic.Net.TrackbackMessage.Permalink*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Net.TrackbackMessage.Title
  commentId: P:Argotic.Net.TrackbackMessage.Title
  id: Title
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: TrackbackMessage.Title
  fullName: Argotic.Net.TrackbackMessage.Title
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Title
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 153
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nGets or sets the title of the entry.\n"
  remarks: "\nThe title <strong>must</strong> be in the character encoding specified by the <xref href=\"Argotic.Net.TrackbackMessage.Encoding\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
      description: The title of the entry.
    content.vb: Public Property Title As String
  overload: Argotic.Net.TrackbackMessage.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Net.TrackbackMessage.WeblogName
  commentId: P:Argotic.Net.TrackbackMessage.WeblogName
  id: WeblogName
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: WeblogName
  nameWithType: TrackbackMessage.WeblogName
  fullName: Argotic.Net.TrackbackMessage.WeblogName
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WeblogName
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 180
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nGets or sets the name of the weblog to which the entry was posted.\n"
  remarks: "\nThe blog name <strong>must</strong> be in the character encoding specified by the <xref href=\"Argotic.Net.TrackbackMessage.Encoding\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: public string WeblogName { get; set; }
    parameters: []
    return:
      type: System.String
      description: The name of the weblog to which the entry was posted.
    content.vb: Public Property WeblogName As String
  overload: Argotic.Net.TrackbackMessage.WeblogName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Net.TrackbackMessage.op_Equality(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  commentId: M:Argotic.Net.TrackbackMessage.op_Equality(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  id: op_Equality(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: Equality(TrackbackMessage, TrackbackMessage)
  nameWithType: TrackbackMessage.Equality(TrackbackMessage, TrackbackMessage)
  fullName: Argotic.Net.TrackbackMessage.Equality(Argotic.Net.TrackbackMessage, Argotic.Net.TrackbackMessage)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 206
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(TrackbackMessage first, TrackbackMessage second)
    parameters:
    - id: first
      type: Argotic.Net.TrackbackMessage
      description: Operand to be compared.
    - id: second
      type: Argotic.Net.TrackbackMessage
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As TrackbackMessage, second As TrackbackMessage) As Boolean
  overload: Argotic.Net.TrackbackMessage.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Net.TrackbackMessage.op_GreaterThan(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  commentId: M:Argotic.Net.TrackbackMessage.op_GreaterThan(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  id: op_GreaterThan(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: GreaterThan(TrackbackMessage, TrackbackMessage)
  nameWithType: TrackbackMessage.GreaterThan(TrackbackMessage, TrackbackMessage)
  fullName: Argotic.Net.TrackbackMessage.GreaterThan(Argotic.Net.TrackbackMessage, Argotic.Net.TrackbackMessage)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 227
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(TrackbackMessage first, TrackbackMessage second)
    parameters:
    - id: first
      type: Argotic.Net.TrackbackMessage
      description: Operand to be compared.
    - id: second
      type: Argotic.Net.TrackbackMessage
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As TrackbackMessage, second As TrackbackMessage) As Boolean
  overload: Argotic.Net.TrackbackMessage.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Net.TrackbackMessage.op_Inequality(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  commentId: M:Argotic.Net.TrackbackMessage.op_Inequality(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  id: op_Inequality(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: Inequality(TrackbackMessage, TrackbackMessage)
  nameWithType: TrackbackMessage.Inequality(TrackbackMessage, TrackbackMessage)
  fullName: Argotic.Net.TrackbackMessage.Inequality(Argotic.Net.TrackbackMessage, Argotic.Net.TrackbackMessage)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 248
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(TrackbackMessage first, TrackbackMessage second)
    parameters:
    - id: first
      type: Argotic.Net.TrackbackMessage
      description: Operand to be compared.
    - id: second
      type: Argotic.Net.TrackbackMessage
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As TrackbackMessage, second As TrackbackMessage) As Boolean
  overload: Argotic.Net.TrackbackMessage.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Net.TrackbackMessage.op_LessThan(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  commentId: M:Argotic.Net.TrackbackMessage.op_LessThan(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  id: op_LessThan(Argotic.Net.TrackbackMessage,Argotic.Net.TrackbackMessage)
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: LessThan(TrackbackMessage, TrackbackMessage)
  nameWithType: TrackbackMessage.LessThan(TrackbackMessage, TrackbackMessage)
  fullName: Argotic.Net.TrackbackMessage.LessThan(Argotic.Net.TrackbackMessage, Argotic.Net.TrackbackMessage)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 259
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(TrackbackMessage first, TrackbackMessage second)
    parameters:
    - id: first
      type: Argotic.Net.TrackbackMessage
      description: Operand to be compared.
    - id: second
      type: Argotic.Net.TrackbackMessage
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As TrackbackMessage, second As TrackbackMessage) As Boolean
  overload: Argotic.Net.TrackbackMessage.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Net.TrackbackMessage.CompareTo(System.Object)
  commentId: M:Argotic.Net.TrackbackMessage.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: TrackbackMessage.CompareTo(Object)
  fullName: Argotic.Net.TrackbackMessage.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 280
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Net.TrackbackMessage.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.TrackbackMessage.Equals(System.Object)
  commentId: M:Argotic.Net.TrackbackMessage.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: TrackbackMessage.Equals(Object)
  fullName: Argotic.Net.TrackbackMessage.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 322
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Net.TrackbackMessage.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Net.TrackbackMessage.GetHashCode
  commentId: M:Argotic.Net.TrackbackMessage.GetHashCode
  id: GetHashCode
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TrackbackMessage.GetHashCode()
  fullName: Argotic.Net.TrackbackMessage.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 336
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Net.TrackbackMessage.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Net.TrackbackMessage.Load(System.Collections.Specialized.NameValueCollection)
  commentId: M:Argotic.Net.TrackbackMessage.Load(System.Collections.Specialized.NameValueCollection)
  id: Load(System.Collections.Specialized.NameValueCollection)
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: Load(NameValueCollection)
  nameWithType: TrackbackMessage.Load(NameValueCollection)
  fullName: Argotic.Net.TrackbackMessage.Load(System.Collections.Specialized.NameValueCollection)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 352
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nLoads this <xref href=\"Argotic.Net.TrackbackMessage\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>This method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be the HTTP Request Parameters or a similar subset.</p>\n"
  example: []
  syntax:
    content: public bool Load(NameValueCollection source)
    parameters:
    - id: source
      type: System.Collections.Specialized.NameValueCollection
      description: The <xref href="System.Collections.Specialized.NameValueCollection" data-throw-if-not-resolved="false"></xref> to extract information from.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Net.TrackbackMessage" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As NameValueCollection) As Boolean
  overload: Argotic.Net.TrackbackMessage.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.TrackbackMessage.ToString
  commentId: M:Argotic.Net.TrackbackMessage.ToString
  id: ToString
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TrackbackMessage.ToString()
  fullName: Argotic.Net.TrackbackMessage.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 408
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Net.TrackbackMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns the URL-encoded representation for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Net.TrackbackMessage" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Net.TrackbackMessage.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Net.TrackbackMessage.WriteTo(System.IO.StreamWriter)
  commentId: M:Argotic.Net.TrackbackMessage.WriteTo(System.IO.StreamWriter)
  id: WriteTo(System.IO.StreamWriter)
  parent: Argotic.Net.TrackbackMessage
  langs:
  - csharp
  - vb
  name: WriteTo(StreamWriter)
  nameWithType: TrackbackMessage.WriteTo(StreamWriter)
  fullName: Argotic.Net.TrackbackMessage.WriteTo(System.IO.StreamWriter)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WriteTo
    path: ../Solutions/Argotic.Core/Net/Trackback/TrackbackMessage.cs
    startLine: 431
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nSaves the current <xref href=\"Argotic.Net.TrackbackMessage\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(StreamWriter writer)
    parameters:
    - id: writer
      type: System.IO.StreamWriter
      description: The <xref href="System.IO.StreamWriter" data-throw-if-not-resolved="false"></xref> to which you want to save.
    content.vb: Public Sub WriteTo(writer As StreamWriter)
  overload: Argotic.Net.TrackbackMessage.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Argotic.Net.TrackbackClient
  commentId: T:Argotic.Net.TrackbackClient
  name: TrackbackClient
  nameWithType: TrackbackClient
  fullName: Argotic.Net.TrackbackClient
- uid: Argotic.Net
  commentId: N:Argotic.Net
  name: Argotic.Net
  nameWithType: Argotic.Net
  fullName: Argotic.Net
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Net.TrackbackMessage
  commentId: T:Argotic.Net.TrackbackMessage
  parent: Argotic.Net
  name: TrackbackMessage
  nameWithType: TrackbackMessage
  fullName: Argotic.Net.TrackbackMessage
- uid: Argotic.Net.TrackbackMessage.#ctor*
  commentId: Overload:Argotic.Net.TrackbackMessage.#ctor
  name: TrackbackMessage
  nameWithType: TrackbackMessage.TrackbackMessage
  fullName: Argotic.Net.TrackbackMessage.TrackbackMessage
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Argotic.Net.TrackbackMessage.Encoding
  commentId: P:Argotic.Net.TrackbackMessage.Encoding
  isExternal: true
- uid: System.Text.UTF8Encoding
  commentId: T:System.Text.UTF8Encoding
  isExternal: true
- uid: Argotic.Net.TrackbackMessage.Encoding*
  commentId: Overload:Argotic.Net.TrackbackMessage.Encoding
  name: Encoding
  nameWithType: TrackbackMessage.Encoding
  fullName: Argotic.Net.TrackbackMessage.Encoding
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Argotic.Net.TrackbackMessage.Excerpt*
  commentId: Overload:Argotic.Net.TrackbackMessage.Excerpt
  name: Excerpt
  nameWithType: TrackbackMessage.Excerpt
  fullName: Argotic.Net.TrackbackMessage.Excerpt
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Argotic.Net.TrackbackMessage.Permalink*
  commentId: Overload:Argotic.Net.TrackbackMessage.Permalink
  name: Permalink
  nameWithType: TrackbackMessage.Permalink
  fullName: Argotic.Net.TrackbackMessage.Permalink
- uid: Argotic.Net.TrackbackMessage.Title*
  commentId: Overload:Argotic.Net.TrackbackMessage.Title
  name: Title
  nameWithType: TrackbackMessage.Title
  fullName: Argotic.Net.TrackbackMessage.Title
- uid: Argotic.Net.TrackbackMessage.WeblogName*
  commentId: Overload:Argotic.Net.TrackbackMessage.WeblogName
  name: WeblogName
  nameWithType: TrackbackMessage.WeblogName
  fullName: Argotic.Net.TrackbackMessage.WeblogName
- uid: Argotic.Net.TrackbackMessage.op_Equality*
  commentId: Overload:Argotic.Net.TrackbackMessage.op_Equality
  name: Equality
  nameWithType: TrackbackMessage.Equality
  fullName: Argotic.Net.TrackbackMessage.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Net.TrackbackMessage.op_GreaterThan*
  commentId: Overload:Argotic.Net.TrackbackMessage.op_GreaterThan
  name: GreaterThan
  nameWithType: TrackbackMessage.GreaterThan
  fullName: Argotic.Net.TrackbackMessage.GreaterThan
- uid: Argotic.Net.TrackbackMessage.op_Inequality*
  commentId: Overload:Argotic.Net.TrackbackMessage.op_Inequality
  name: Inequality
  nameWithType: TrackbackMessage.Inequality
  fullName: Argotic.Net.TrackbackMessage.Inequality
- uid: Argotic.Net.TrackbackMessage.op_LessThan*
  commentId: Overload:Argotic.Net.TrackbackMessage.op_LessThan
  name: LessThan
  nameWithType: TrackbackMessage.LessThan
  fullName: Argotic.Net.TrackbackMessage.LessThan
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Net.TrackbackMessage.CompareTo*
  commentId: Overload:Argotic.Net.TrackbackMessage.CompareTo
  name: CompareTo
  nameWithType: TrackbackMessage.CompareTo
  fullName: Argotic.Net.TrackbackMessage.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Net.TrackbackMessage.Equals*
  commentId: Overload:Argotic.Net.TrackbackMessage.Equals
  name: Equals
  nameWithType: TrackbackMessage.Equals
  fullName: Argotic.Net.TrackbackMessage.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Net.TrackbackMessage.GetHashCode*
  commentId: Overload:Argotic.Net.TrackbackMessage.GetHashCode
  name: GetHashCode
  nameWithType: TrackbackMessage.GetHashCode
  fullName: Argotic.Net.TrackbackMessage.GetHashCode
- uid: System.Collections.Specialized.NameValueCollection
  commentId: T:System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: true
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: Argotic.Net.TrackbackMessage.Load*
  commentId: Overload:Argotic.Net.TrackbackMessage.Load
  name: Load
  nameWithType: TrackbackMessage.Load
  fullName: Argotic.Net.TrackbackMessage.Load
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Net.TrackbackMessage.ToString*
  commentId: Overload:Argotic.Net.TrackbackMessage.ToString
  name: ToString
  nameWithType: TrackbackMessage.ToString
  fullName: Argotic.Net.TrackbackMessage.ToString
- uid: System.IO.StreamWriter
  commentId: T:System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: Argotic.Net.TrackbackMessage.WriteTo*
  commentId: Overload:Argotic.Net.TrackbackMessage.WriteTo
  name: WriteTo
  nameWithType: TrackbackMessage.WriteTo
  fullName: Argotic.Net.TrackbackMessage.WriteTo
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
