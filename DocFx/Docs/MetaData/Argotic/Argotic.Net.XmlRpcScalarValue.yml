### YamlMime:ManagedReference
items:
- uid: Argotic.Net.XmlRpcScalarValue
  commentId: T:Argotic.Net.XmlRpcScalarValue
  id: XmlRpcScalarValue
  parent: Argotic.Net
  children:
  - Argotic.Net.XmlRpcScalarValue.#ctor
  - Argotic.Net.XmlRpcScalarValue.#ctor(System.Boolean)
  - Argotic.Net.XmlRpcScalarValue.#ctor(System.Byte[])
  - Argotic.Net.XmlRpcScalarValue.#ctor(System.DateTime)
  - Argotic.Net.XmlRpcScalarValue.#ctor(System.Double)
  - Argotic.Net.XmlRpcScalarValue.#ctor(System.Int32)
  - Argotic.Net.XmlRpcScalarValue.#ctor(System.String)
  - Argotic.Net.XmlRpcScalarValue.CompareTo(System.Object)
  - Argotic.Net.XmlRpcScalarValue.Equals(System.Object)
  - Argotic.Net.XmlRpcScalarValue.GetHashCode
  - Argotic.Net.XmlRpcScalarValue.Load(System.Xml.XPath.XPathNavigator)
  - Argotic.Net.XmlRpcScalarValue.op_Equality(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  - Argotic.Net.XmlRpcScalarValue.op_GreaterThan(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  - Argotic.Net.XmlRpcScalarValue.op_Inequality(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  - Argotic.Net.XmlRpcScalarValue.op_LessThan(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  - Argotic.Net.XmlRpcScalarValue.ToString
  - Argotic.Net.XmlRpcScalarValue.Value
  - Argotic.Net.XmlRpcScalarValue.ValueType
  - Argotic.Net.XmlRpcScalarValue.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: XmlRpcScalarValue
  nameWithType: XmlRpcScalarValue
  fullName: Argotic.Net.XmlRpcScalarValue
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: XmlRpcScalarValue
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 15
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nRepresents a scalar remote procedure parameter value.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class XmlRpcScalarValue : IXmlRpcValue, IComparable
    content.vb: >-
      <Serializable>

      Public Class XmlRpcScalarValue

          Implements IXmlRpcValue, IComparable
  seealso:
  - linkId: Argotic.Net.XmlRpcMessage.Parameters
    commentId: P:Argotic.Net.XmlRpcMessage.Parameters
  - linkId: Argotic.Net.IXmlRpcValue
    commentId: T:Argotic.Net.IXmlRpcValue
  inheritance:
  - System.Object
  implements:
  - Argotic.Net.IXmlRpcValue
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Net.XmlRpcScalarValue.#ctor
  commentId: M:Argotic.Net.XmlRpcScalarValue.#ctor
  id: '#ctor'
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: XmlRpcScalarValue()
  nameWithType: XmlRpcScalarValue.XmlRpcScalarValue()
  fullName: Argotic.Net.XmlRpcScalarValue.XmlRpcScalarValue()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 26
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public XmlRpcScalarValue()
    content.vb: Public Sub New
  overload: Argotic.Net.XmlRpcScalarValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.#ctor(System.Byte[])
  commentId: M:Argotic.Net.XmlRpcScalarValue.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: XmlRpcScalarValue(Byte[])
  nameWithType: XmlRpcScalarValue.XmlRpcScalarValue(Byte[])
  fullName: Argotic.Net.XmlRpcScalarValue.XmlRpcScalarValue(System.Byte[])
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 39
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref> class using the specified array of bytes.\n"
  remarks: "\nThis constructor sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.ValueType\" data-throw-if-not-resolved=\"false\"></xref> property to be <xref href=\"Argotic.Net.XmlRpcScalarValueType.Base64\" data-throw-if-not-resolved=\"false\"></xref>,\nand sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.Value\" data-throw-if-not-resolved=\"false\"></xref> property using the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
  example: []
  syntax:
    content: public XmlRpcScalarValue(byte[] value)
    parameters:
    - id: value
      type: System.Byte[]
      description: An array of 8-bit unsigned integers.
    content.vb: Public Sub New(value As Byte())
  overload: Argotic.Net.XmlRpcScalarValue.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: XmlRpcScalarValue.XmlRpcScalarValue(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Net.XmlRpcScalarValue.XmlRpcScalarValue(System.Byte())
  name.vb: XmlRpcScalarValue(Byte())
- uid: Argotic.Net.XmlRpcScalarValue.#ctor(System.Boolean)
  commentId: M:Argotic.Net.XmlRpcScalarValue.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: XmlRpcScalarValue(Boolean)
  nameWithType: XmlRpcScalarValue.XmlRpcScalarValue(Boolean)
  fullName: Argotic.Net.XmlRpcScalarValue.XmlRpcScalarValue(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 55
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref> class using the specified boolean value.\n"
  remarks: "\nThis constructor sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.ValueType\" data-throw-if-not-resolved=\"false\"></xref> property to be <xref href=\"Argotic.Net.XmlRpcScalarValueType.Boolean\" data-throw-if-not-resolved=\"false\"></xref>,\nand sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.Value\" data-throw-if-not-resolved=\"false\"></xref> property using the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
  example: []
  syntax:
    content: public XmlRpcScalarValue(bool value)
    parameters:
    - id: value
      type: System.Boolean
      description: A boolean value.
    content.vb: Public Sub New(value As Boolean)
  overload: Argotic.Net.XmlRpcScalarValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.#ctor(System.DateTime)
  commentId: M:Argotic.Net.XmlRpcScalarValue.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: XmlRpcScalarValue(DateTime)
  nameWithType: XmlRpcScalarValue.XmlRpcScalarValue(DateTime)
  fullName: Argotic.Net.XmlRpcScalarValue.XmlRpcScalarValue(System.DateTime)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 69
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref> class using the specified instance in time.\n"
  remarks: "\nThis constructor sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.ValueType\" data-throw-if-not-resolved=\"false\"></xref> property to be <xref href=\"Argotic.Net.XmlRpcScalarValueType.DateTime\" data-throw-if-not-resolved=\"false\"></xref>,\nand sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.Value\" data-throw-if-not-resolved=\"false\"></xref> property using the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
  example: []
  syntax:
    content: public XmlRpcScalarValue(DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>, provided in Coordinated Universal Time (UTC).
    content.vb: Public Sub New(value As Date)
  overload: Argotic.Net.XmlRpcScalarValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.#ctor(System.Double)
  commentId: M:Argotic.Net.XmlRpcScalarValue.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: XmlRpcScalarValue(Double)
  nameWithType: XmlRpcScalarValue.XmlRpcScalarValue(Double)
  fullName: Argotic.Net.XmlRpcScalarValue.XmlRpcScalarValue(System.Double)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 83
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref> class using the specified double-precision signed floating-point number.\n"
  remarks: "\nThis constructor sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.ValueType\" data-throw-if-not-resolved=\"false\"></xref> property to be <xref href=\"Argotic.Net.XmlRpcScalarValueType.Double\" data-throw-if-not-resolved=\"false\"></xref>,\nand sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.Value\" data-throw-if-not-resolved=\"false\"></xref> property using the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
  example: []
  syntax:
    content: public XmlRpcScalarValue(double value)
    parameters:
    - id: value
      type: System.Double
      description: A double-precision signed floating-point number.
    content.vb: Public Sub New(value As Double)
  overload: Argotic.Net.XmlRpcScalarValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.#ctor(System.Int32)
  commentId: M:Argotic.Net.XmlRpcScalarValue.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: XmlRpcScalarValue(Int32)
  nameWithType: XmlRpcScalarValue.XmlRpcScalarValue(Int32)
  fullName: Argotic.Net.XmlRpcScalarValue.XmlRpcScalarValue(System.Int32)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 97
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref> class using the specified 32-bit signed integer.\n"
  remarks: "\nThis constructor sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.ValueType\" data-throw-if-not-resolved=\"false\"></xref> property to be <xref href=\"Argotic.Net.XmlRpcScalarValueType.Integer\" data-throw-if-not-resolved=\"false\"></xref>,\nand sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.Value\" data-throw-if-not-resolved=\"false\"></xref> property using the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
  example: []
  syntax:
    content: public XmlRpcScalarValue(int value)
    parameters:
    - id: value
      type: System.Int32
      description: A 32-bit signed integer.
    content.vb: Public Sub New(value As Integer)
  overload: Argotic.Net.XmlRpcScalarValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.#ctor(System.String)
  commentId: M:Argotic.Net.XmlRpcScalarValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: XmlRpcScalarValue(String)
  nameWithType: XmlRpcScalarValue.XmlRpcScalarValue(String)
  fullName: Argotic.Net.XmlRpcScalarValue.XmlRpcScalarValue(System.String)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 111
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref> class using the specified series of characters.\n"
  remarks: "\nThis constructor sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.ValueType\" data-throw-if-not-resolved=\"false\"></xref> property to be <xref href=\"Argotic.Net.XmlRpcScalarValueType.String\" data-throw-if-not-resolved=\"false\"></xref>,\nand sets the <xref href=\"Argotic.Net.XmlRpcScalarValue.Value\" data-throw-if-not-resolved=\"false\"></xref> property using the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
  example: []
  syntax:
    content: public XmlRpcScalarValue(string value)
    parameters:
    - id: value
      type: System.String
      description: A series of characters.
    content.vb: Public Sub New(value As String)
  overload: Argotic.Net.XmlRpcScalarValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.Value
  commentId: P:Argotic.Net.XmlRpcScalarValue.Value
  id: Value
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: XmlRpcScalarValue.Value
  fullName: Argotic.Net.XmlRpcScalarValue.Value
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Value
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 125
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nGets or sets the value of this parameter.\n"
  remarks: "\n<p>The <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code> should represent a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is appropriate for this parameter&apos;s <xref href=\"Argotic.Net.XmlRpcScalarValue.ValueType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public object Value { get; set; }
    parameters: []
    return:
      type: System.Object
      description: A <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the value of this parameter.
    content.vb: Public Property Value As Object
  overload: Argotic.Net.XmlRpcScalarValue.Value*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.ValueType
  commentId: P:Argotic.Net.XmlRpcScalarValue.ValueType
  id: ValueType
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: XmlRpcScalarValue.ValueType
  fullName: Argotic.Net.XmlRpcScalarValue.ValueType
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ValueType
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 151
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nGets or sets the type of scalar value this parameter represents.\n"
  remarks: "\n<p>If no type is indicated, the type is assumed to be <xref href=\"Argotic.Net.XmlRpcScalarValueType.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public XmlRpcScalarValueType ValueType { get; set; }
    parameters: []
    return:
      type: Argotic.Net.XmlRpcScalarValueType
      description: "\nA <xref href=\"Argotic.Net.XmlRpcScalarValueType\" data-throw-if-not-resolved=\"false\"></xref> enumeration value that indicates the type of scalar value this parameter represents.\nThe default value is <xref href=\"Argotic.Net.XmlRpcScalarValueType.None\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no type was specified.\n"
    content.vb: Public Property ValueType As XmlRpcScalarValueType
  overload: Argotic.Net.XmlRpcScalarValue.ValueType*
  seealso:
  - linkId: Argotic.Net.XmlRpcClient.ScalarTypeAsString(Argotic.Net.XmlRpcScalarValueType)
    commentId: M:Argotic.Net.XmlRpcClient.ScalarTypeAsString(Argotic.Net.XmlRpcScalarValueType)
  - linkId: Argotic.Net.XmlRpcClient.ScalarTypeByName(System.String)
    commentId: M:Argotic.Net.XmlRpcClient.ScalarTypeByName(System.String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.op_Equality(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  commentId: M:Argotic.Net.XmlRpcScalarValue.op_Equality(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  id: op_Equality(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: Equality(XmlRpcScalarValue, XmlRpcScalarValue)
  nameWithType: XmlRpcScalarValue.Equality(XmlRpcScalarValue, XmlRpcScalarValue)
  fullName: Argotic.Net.XmlRpcScalarValue.Equality(Argotic.Net.XmlRpcScalarValue, Argotic.Net.XmlRpcScalarValue)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 159
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(XmlRpcScalarValue first, XmlRpcScalarValue second)
    parameters:
    - id: first
      type: Argotic.Net.XmlRpcScalarValue
      description: Operand to be compared.
    - id: second
      type: Argotic.Net.XmlRpcScalarValue
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As XmlRpcScalarValue, second As XmlRpcScalarValue) As Boolean
  overload: Argotic.Net.XmlRpcScalarValue.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Net.XmlRpcScalarValue.op_GreaterThan(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  commentId: M:Argotic.Net.XmlRpcScalarValue.op_GreaterThan(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  id: op_GreaterThan(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: GreaterThan(XmlRpcScalarValue, XmlRpcScalarValue)
  nameWithType: XmlRpcScalarValue.GreaterThan(XmlRpcScalarValue, XmlRpcScalarValue)
  fullName: Argotic.Net.XmlRpcScalarValue.GreaterThan(Argotic.Net.XmlRpcScalarValue, Argotic.Net.XmlRpcScalarValue)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 180
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(XmlRpcScalarValue first, XmlRpcScalarValue second)
    parameters:
    - id: first
      type: Argotic.Net.XmlRpcScalarValue
      description: Operand to be compared.
    - id: second
      type: Argotic.Net.XmlRpcScalarValue
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As XmlRpcScalarValue, second As XmlRpcScalarValue) As Boolean
  overload: Argotic.Net.XmlRpcScalarValue.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Net.XmlRpcScalarValue.op_Inequality(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  commentId: M:Argotic.Net.XmlRpcScalarValue.op_Inequality(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  id: op_Inequality(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: Inequality(XmlRpcScalarValue, XmlRpcScalarValue)
  nameWithType: XmlRpcScalarValue.Inequality(XmlRpcScalarValue, XmlRpcScalarValue)
  fullName: Argotic.Net.XmlRpcScalarValue.Inequality(Argotic.Net.XmlRpcScalarValue, Argotic.Net.XmlRpcScalarValue)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 201
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(XmlRpcScalarValue first, XmlRpcScalarValue second)
    parameters:
    - id: first
      type: Argotic.Net.XmlRpcScalarValue
      description: Operand to be compared.
    - id: second
      type: Argotic.Net.XmlRpcScalarValue
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As XmlRpcScalarValue, second As XmlRpcScalarValue) As Boolean
  overload: Argotic.Net.XmlRpcScalarValue.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Net.XmlRpcScalarValue.op_LessThan(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  commentId: M:Argotic.Net.XmlRpcScalarValue.op_LessThan(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  id: op_LessThan(Argotic.Net.XmlRpcScalarValue,Argotic.Net.XmlRpcScalarValue)
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: LessThan(XmlRpcScalarValue, XmlRpcScalarValue)
  nameWithType: XmlRpcScalarValue.LessThan(XmlRpcScalarValue, XmlRpcScalarValue)
  fullName: Argotic.Net.XmlRpcScalarValue.LessThan(Argotic.Net.XmlRpcScalarValue, Argotic.Net.XmlRpcScalarValue)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 212
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(XmlRpcScalarValue first, XmlRpcScalarValue second)
    parameters:
    - id: first
      type: Argotic.Net.XmlRpcScalarValue
      description: Operand to be compared.
    - id: second
      type: Argotic.Net.XmlRpcScalarValue
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As XmlRpcScalarValue, second As XmlRpcScalarValue) As Boolean
  overload: Argotic.Net.XmlRpcScalarValue.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Net.XmlRpcScalarValue.CompareTo(System.Object)
  commentId: M:Argotic.Net.XmlRpcScalarValue.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: XmlRpcScalarValue.CompareTo(Object)
  fullName: Argotic.Net.XmlRpcScalarValue.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 233
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Net.XmlRpcScalarValue.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.Equals(System.Object)
  commentId: M:Argotic.Net.XmlRpcScalarValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: XmlRpcScalarValue.Equals(Object)
  fullName: Argotic.Net.XmlRpcScalarValue.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 263
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Net.XmlRpcScalarValue.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Net.XmlRpcScalarValue.GetHashCode
  commentId: M:Argotic.Net.XmlRpcScalarValue.GetHashCode
  id: GetHashCode
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: XmlRpcScalarValue.GetHashCode()
  fullName: Argotic.Net.XmlRpcScalarValue.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 277
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Net.XmlRpcScalarValue.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Net.XmlRpcScalarValue.Load(System.Xml.XPath.XPathNavigator)
  commentId: M:Argotic.Net.XmlRpcScalarValue.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator)
  nameWithType: XmlRpcScalarValue.Load(XPathNavigator)
  fullName: Argotic.Net.XmlRpcScalarValue.Load(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 293
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nLoads this <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>This method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be positioned on the XML element that represents a <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> to extract information from.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Net.XmlRpcScalarValue" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator) As Boolean
  overload: Argotic.Net.XmlRpcScalarValue.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Net.IXmlRpcValue.Load(System.Xml.XPath.XPathNavigator)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Net.XmlRpcScalarValue.ToString
  commentId: M:Argotic.Net.XmlRpcScalarValue.ToString
  id: ToString
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: XmlRpcScalarValue.ToString()
  fullName: Argotic.Net.XmlRpcScalarValue.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 345
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns the XML representation for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Net.XmlRpcScalarValue" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Net.XmlRpcScalarValue.ToString*
  implements:
  - Argotic.Net.IXmlRpcValue.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Net.XmlRpcScalarValue.WriteTo(System.Xml.XmlWriter)
  commentId: M:Argotic.Net.XmlRpcScalarValue.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: Argotic.Net.XmlRpcScalarValue
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  nameWithType: XmlRpcScalarValue.WriteTo(XmlWriter)
  fullName: Argotic.Net.XmlRpcScalarValue.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WriteTo
    path: ../Solutions/Argotic.Core/Net/XmlRpc/XmlRpcScalarValue.cs
    startLine: 373
  assemblies:
  - Argotic.Core
  namespace: Argotic.Net
  summary: "\nSaves the current <xref href=\"Argotic.Net.XmlRpcScalarValue\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> to which you want to save.
    content.vb: Public Sub WriteTo(writer As XmlWriter)
  overload: Argotic.Net.XmlRpcScalarValue.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Net.IXmlRpcValue.WriteTo(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Argotic.Net.XmlRpcMessage.Parameters
  commentId: P:Argotic.Net.XmlRpcMessage.Parameters
  isExternal: true
- uid: Argotic.Net.IXmlRpcValue
  commentId: T:Argotic.Net.IXmlRpcValue
  parent: Argotic.Net
  name: IXmlRpcValue
  nameWithType: IXmlRpcValue
  fullName: Argotic.Net.IXmlRpcValue
- uid: Argotic.Net
  commentId: N:Argotic.Net
  name: Argotic.Net
  nameWithType: Argotic.Net
  fullName: Argotic.Net
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Net.XmlRpcScalarValue
  commentId: T:Argotic.Net.XmlRpcScalarValue
  parent: Argotic.Net
  name: XmlRpcScalarValue
  nameWithType: XmlRpcScalarValue
  fullName: Argotic.Net.XmlRpcScalarValue
- uid: Argotic.Net.XmlRpcScalarValue.#ctor*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.#ctor
  name: XmlRpcScalarValue
  nameWithType: XmlRpcScalarValue.XmlRpcScalarValue
  fullName: Argotic.Net.XmlRpcScalarValue.XmlRpcScalarValue
- uid: Argotic.Net.XmlRpcScalarValue.ValueType
  commentId: P:Argotic.Net.XmlRpcScalarValue.ValueType
  isExternal: true
- uid: Argotic.Net.XmlRpcScalarValueType.Base64
  commentId: F:Argotic.Net.XmlRpcScalarValueType.Base64
  isExternal: true
- uid: Argotic.Net.XmlRpcScalarValue.Value
  commentId: P:Argotic.Net.XmlRpcScalarValue.Value
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Argotic.Net.XmlRpcScalarValueType.Boolean
  commentId: F:Argotic.Net.XmlRpcScalarValueType.Boolean
  isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Argotic.Net.XmlRpcScalarValueType.DateTime
  commentId: F:Argotic.Net.XmlRpcScalarValueType.DateTime
  isExternal: true
- uid: Argotic.Net.XmlRpcScalarValueType.Double
  commentId: F:Argotic.Net.XmlRpcScalarValueType.Double
  isExternal: true
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Argotic.Net.XmlRpcScalarValueType.Integer
  commentId: F:Argotic.Net.XmlRpcScalarValueType.Integer
  isExternal: true
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Argotic.Net.XmlRpcScalarValueType.String
  commentId: F:Argotic.Net.XmlRpcScalarValueType.String
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Argotic.Net.XmlRpcScalarValue.Value*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.Value
  name: Value
  nameWithType: XmlRpcScalarValue.Value
  fullName: Argotic.Net.XmlRpcScalarValue.Value
- uid: Argotic.Net.XmlRpcScalarValueType
  commentId: T:Argotic.Net.XmlRpcScalarValueType
  parent: Argotic.Net
  name: XmlRpcScalarValueType
  nameWithType: XmlRpcScalarValueType
  fullName: Argotic.Net.XmlRpcScalarValueType
- uid: Argotic.Net.XmlRpcScalarValueType.None
  commentId: F:Argotic.Net.XmlRpcScalarValueType.None
  isExternal: true
- uid: Argotic.Net.XmlRpcClient.ScalarTypeAsString(Argotic.Net.XmlRpcScalarValueType)
  commentId: M:Argotic.Net.XmlRpcClient.ScalarTypeAsString(Argotic.Net.XmlRpcScalarValueType)
  isExternal: true
- uid: Argotic.Net.XmlRpcClient.ScalarTypeByName(System.String)
  commentId: M:Argotic.Net.XmlRpcClient.ScalarTypeByName(System.String)
  isExternal: true
- uid: Argotic.Net.XmlRpcScalarValue.ValueType*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.ValueType
  name: ValueType
  nameWithType: XmlRpcScalarValue.ValueType
  fullName: Argotic.Net.XmlRpcScalarValue.ValueType
- uid: Argotic.Net.XmlRpcScalarValue.op_Equality*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.op_Equality
  name: Equality
  nameWithType: XmlRpcScalarValue.Equality
  fullName: Argotic.Net.XmlRpcScalarValue.Equality
- uid: Argotic.Net.XmlRpcScalarValue.op_GreaterThan*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.op_GreaterThan
  name: GreaterThan
  nameWithType: XmlRpcScalarValue.GreaterThan
  fullName: Argotic.Net.XmlRpcScalarValue.GreaterThan
- uid: Argotic.Net.XmlRpcScalarValue.op_Inequality*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.op_Inequality
  name: Inequality
  nameWithType: XmlRpcScalarValue.Inequality
  fullName: Argotic.Net.XmlRpcScalarValue.Inequality
- uid: Argotic.Net.XmlRpcScalarValue.op_LessThan*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.op_LessThan
  name: LessThan
  nameWithType: XmlRpcScalarValue.LessThan
  fullName: Argotic.Net.XmlRpcScalarValue.LessThan
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Net.XmlRpcScalarValue.CompareTo*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.CompareTo
  name: CompareTo
  nameWithType: XmlRpcScalarValue.CompareTo
  fullName: Argotic.Net.XmlRpcScalarValue.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Net.XmlRpcScalarValue.Equals*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.Equals
  name: Equals
  nameWithType: XmlRpcScalarValue.Equals
  fullName: Argotic.Net.XmlRpcScalarValue.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Net.XmlRpcScalarValue.GetHashCode*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.GetHashCode
  name: GetHashCode
  nameWithType: XmlRpcScalarValue.GetHashCode
  fullName: Argotic.Net.XmlRpcScalarValue.GetHashCode
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Net.XmlRpcScalarValue.Load*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.Load
  name: Load
  nameWithType: XmlRpcScalarValue.Load
  fullName: Argotic.Net.XmlRpcScalarValue.Load
- uid: Argotic.Net.IXmlRpcValue.Load(System.Xml.XPath.XPathNavigator)
  commentId: M:Argotic.Net.IXmlRpcValue.Load(System.Xml.XPath.XPathNavigator)
  parent: Argotic.Net.IXmlRpcValue
  isExternal: true
  name: Load(XPathNavigator)
  nameWithType: IXmlRpcValue.Load(XPathNavigator)
  fullName: Argotic.Net.IXmlRpcValue.Load(System.Xml.XPath.XPathNavigator)
  spec.csharp:
  - uid: Argotic.Net.IXmlRpcValue.Load(System.Xml.XPath.XPathNavigator)
    name: Load
    nameWithType: IXmlRpcValue.Load
    fullName: Argotic.Net.IXmlRpcValue.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Net.IXmlRpcValue.Load(System.Xml.XPath.XPathNavigator)
    name: Load
    nameWithType: IXmlRpcValue.Load
    fullName: Argotic.Net.IXmlRpcValue.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.XPathNavigator
    name: XPathNavigator
    nameWithType: XPathNavigator
    fullName: System.Xml.XPath.XPathNavigator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Net.XmlRpcScalarValue.ToString*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.ToString
  name: ToString
  nameWithType: XmlRpcScalarValue.ToString
  fullName: Argotic.Net.XmlRpcScalarValue.ToString
- uid: Argotic.Net.IXmlRpcValue.ToString
  commentId: M:Argotic.Net.IXmlRpcValue.ToString
  parent: Argotic.Net.IXmlRpcValue
  name: ToString()
  nameWithType: IXmlRpcValue.ToString()
  fullName: Argotic.Net.IXmlRpcValue.ToString()
  spec.csharp:
  - uid: Argotic.Net.IXmlRpcValue.ToString
    name: ToString
    nameWithType: IXmlRpcValue.ToString
    fullName: Argotic.Net.IXmlRpcValue.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Net.IXmlRpcValue.ToString
    name: ToString
    nameWithType: IXmlRpcValue.ToString
    fullName: Argotic.Net.IXmlRpcValue.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Net.XmlRpcScalarValue.WriteTo*
  commentId: Overload:Argotic.Net.XmlRpcScalarValue.WriteTo
  name: WriteTo
  nameWithType: XmlRpcScalarValue.WriteTo
  fullName: Argotic.Net.XmlRpcScalarValue.WriteTo
- uid: Argotic.Net.IXmlRpcValue.WriteTo(System.Xml.XmlWriter)
  commentId: M:Argotic.Net.IXmlRpcValue.WriteTo(System.Xml.XmlWriter)
  parent: Argotic.Net.IXmlRpcValue
  isExternal: true
  name: WriteTo(XmlWriter)
  nameWithType: IXmlRpcValue.WriteTo(XmlWriter)
  fullName: Argotic.Net.IXmlRpcValue.WriteTo(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Argotic.Net.IXmlRpcValue.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    nameWithType: IXmlRpcValue.WriteTo
    fullName: Argotic.Net.IXmlRpcValue.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Net.IXmlRpcValue.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    nameWithType: IXmlRpcValue.WriteTo
    fullName: Argotic.Net.IXmlRpcValue.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
