### YamlMime:ManagedReference
items:
- uid: Argotic.Publishing.AtomCategoryDocument
  commentId: T:Argotic.Publishing.AtomCategoryDocument
  id: AtomCategoryDocument
  parent: Argotic.Publishing
  children:
  - Argotic.Publishing.AtomCategoryDocument.#ctor
  - Argotic.Publishing.AtomCategoryDocument.#ctor(System.Boolean,System.Uri)
  - Argotic.Publishing.AtomCategoryDocument.#ctor(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory})
  - Argotic.Publishing.AtomCategoryDocument.#ctor(System.Uri)
  - Argotic.Publishing.AtomCategoryDocument.AddCategory(Argotic.Syndication.AtomCategory)
  - Argotic.Publishing.AtomCategoryDocument.AddExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Publishing.AtomCategoryDocument.BaseUri
  - Argotic.Publishing.AtomCategoryDocument.Categories
  - Argotic.Publishing.AtomCategoryDocument.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument},System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument})
  - Argotic.Publishing.AtomCategoryDocument.CompareTo(System.Object)
  - Argotic.Publishing.AtomCategoryDocument.Create(System.Uri)
  - Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,Argotic.Common.WebRequestOptions)
  - Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  - Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomCategoryDocument.CreateNavigator
  - Argotic.Publishing.AtomCategoryDocument.Equals(System.Object)
  - Argotic.Publishing.AtomCategoryDocument.Extensions
  - Argotic.Publishing.AtomCategoryDocument.FindCategory(System.Predicate{Argotic.Syndication.AtomCategory})
  - Argotic.Publishing.AtomCategoryDocument.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  - Argotic.Publishing.AtomCategoryDocument.Format
  - Argotic.Publishing.AtomCategoryDocument.GetHashCode
  - Argotic.Publishing.AtomCategoryDocument.HasExtensions
  - Argotic.Publishing.AtomCategoryDocument.IsFixed
  - Argotic.Publishing.AtomCategoryDocument.Item(System.Int32)
  - Argotic.Publishing.AtomCategoryDocument.Language
  - Argotic.Publishing.AtomCategoryDocument.Load(System.IO.Stream)
  - Argotic.Publishing.AtomCategoryDocument.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,Argotic.Common.WebRequestOptions)
  - Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  - Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader)
  - Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable)
  - Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  - Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  - Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  - Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,System.Object)
  - Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel
  - Argotic.Publishing.AtomCategoryDocument.Loaded
  - Argotic.Publishing.AtomCategoryDocument.MediaType
  - Argotic.Publishing.AtomCategoryDocument.OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  - Argotic.Publishing.AtomCategoryDocument.op_Equality(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  - Argotic.Publishing.AtomCategoryDocument.op_GreaterThan(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  - Argotic.Publishing.AtomCategoryDocument.op_Inequality(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  - Argotic.Publishing.AtomCategoryDocument.op_LessThan(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  - Argotic.Publishing.AtomCategoryDocument.RemoveCategory(Argotic.Syndication.AtomCategory)
  - Argotic.Publishing.AtomCategoryDocument.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Publishing.AtomCategoryDocument.Save(System.IO.Stream)
  - Argotic.Publishing.AtomCategoryDocument.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Publishing.AtomCategoryDocument.Save(System.Xml.XmlWriter)
  - Argotic.Publishing.AtomCategoryDocument.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Publishing.AtomCategoryDocument.Scheme
  - Argotic.Publishing.AtomCategoryDocument.ToString
  - Argotic.Publishing.AtomCategoryDocument.Uri
  - Argotic.Publishing.AtomCategoryDocument.Version
  langs:
  - csharp
  - vb
  name: AtomCategoryDocument
  nameWithType: AtomCategoryDocument
  fullName: Argotic.Publishing.AtomCategoryDocument
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AtomCategoryDocument
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 34
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nRepresents a list of categories available to be used when categorizing web resources.\n"
  remarks: "\n<p>\n    The <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> class implements the <em>app:categories</em> element of the <a href=\"http://bitworking.org/projects/atom/rfc5023.html\">Atom Publishing Protocol</a>.\n</p>\n<p>\n    Category documents contain lists of categories described using the <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref> entity. Categories can also appear\n    in <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref>, where they indicate the categories allowed in a <xref href=\"Argotic.Publishing.AtomMemberResources\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\n    An <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> can contain zero or more <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref> entities. Category documents are identified with the <em>application/atomcat+xml</em> media type.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class AtomCategoryDocument : ISyndicationResource, IExtensibleSyndicationObject, IAtomCommonObjectAttributes, IComparable
    content.vb: >-
      <Serializable>

      Public Class AtomCategoryDocument

          Implements ISyndicationResource, IExtensibleSyndicationObject, IAtomCommonObjectAttributes, IComparable
  seealso:
  - linkId: Argotic.Publishing.AtomServiceDocument
    commentId: T:Argotic.Publishing.AtomServiceDocument
  - linkId: Argotic.Publishing.AtomMemberResources.Categories
    commentId: P:Argotic.Publishing.AtomMemberResources.Categories
  inheritance:
  - System.Object
  implements:
  - Argotic.Common.ISyndicationResource
  - Argotic.Extensions.IExtensibleSyndicationObject
  - Argotic.Syndication.IAtomCommonObjectAttributes
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Publishing.AtomCategoryDocument.#ctor
  commentId: M:Argotic.Publishing.AtomCategoryDocument.#ctor
  id: '#ctor'
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: AtomCategoryDocument()
  nameWithType: AtomCategoryDocument.AtomCategoryDocument()
  fullName: Argotic.Publishing.AtomCategoryDocument.AtomCategoryDocument()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 72
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AtomCategoryDocument()
    content.vb: Public Sub New
  overload: Argotic.Publishing.AtomCategoryDocument.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.#ctor(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory})
  commentId: M:Argotic.Publishing.AtomCategoryDocument.#ctor(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory})
  id: '#ctor(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory})'
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: AtomCategoryDocument(Collection<AtomCategory>)
  nameWithType: AtomCategoryDocument.AtomCategoryDocument(Collection<AtomCategory>)
  fullName: Argotic.Publishing.AtomCategoryDocument.AtomCategoryDocument(System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomCategory>)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 81
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public AtomCategoryDocument(Collection<AtomCategory> categories)
    parameters:
    - id: categories
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.AtomCategory" data-throw-if-not-resolved="false"></xref> objects that represent the categories to associate with the document.
    content.vb: Public Sub New(categories As Collection(Of AtomCategory))
  overload: Argotic.Publishing.AtomCategoryDocument.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">categories</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomCategoryDocument.AtomCategoryDocument(Collection(Of AtomCategory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Publishing.AtomCategoryDocument.AtomCategoryDocument(System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomCategory))
  name.vb: AtomCategoryDocument(Collection(Of AtomCategory))
- uid: Argotic.Publishing.AtomCategoryDocument.#ctor(System.Uri)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: AtomCategoryDocument(Uri)
  nameWithType: AtomCategoryDocument.AtomCategoryDocument(Uri)
  fullName: Argotic.Publishing.AtomCategoryDocument.AtomCategoryDocument(System.Uri)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 95
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> class using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AtomCategoryDocument(Uri href)
    parameters:
    - id: href
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents a Internationalized Resource Identifier (IRI) that identifies the location of the document.
    content.vb: Public Sub New(href As Uri)
  overload: Argotic.Publishing.AtomCategoryDocument.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.#ctor(System.Boolean,System.Uri)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.#ctor(System.Boolean,System.Uri)
  id: '#ctor(System.Boolean,System.Uri)'
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: AtomCategoryDocument(Boolean, Uri)
  nameWithType: AtomCategoryDocument.AtomCategoryDocument(Boolean, Uri)
  fullName: Argotic.Publishing.AtomCategoryDocument.AtomCategoryDocument(System.Boolean, System.Uri)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 105
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied parameters.\n"
  example: []
  syntax:
    content: public AtomCategoryDocument(bool isFixed, Uri scheme)
    parameters:
    - id: isFixed
      type: System.Boolean
      description: A value indicating whether the document represents a fixed or open set of categories.
    - id: scheme
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents a Internationalized Resource Identifier (IRI) that identifies the categorization scheme used by the document.
    content.vb: Public Sub New(isFixed As Boolean, scheme As Uri)
  overload: Argotic.Publishing.AtomCategoryDocument.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Loaded
  commentId: E:Argotic.Publishing.AtomCategoryDocument.Loaded
  id: Loaded
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: AtomCategoryDocument.Loaded
  fullName: Argotic.Publishing.AtomCategoryDocument.Loaded
  type: Event
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Loaded
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 116
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nOccurs when the syndication resource state has been changed by a load operation.\n"
  example: []
  syntax:
    content: public event EventHandler<SyndicationResourceLoadedEventArgs> Loaded
    return:
      type: System.EventHandler{Argotic.Common.SyndicationResourceLoadedEventArgs}
    content.vb: Public Event Loaded As EventHandler(Of SyndicationResourceLoadedEventArgs)
  seealso:
  - linkId: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable)
    commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable)
  - linkId: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader)
    commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader)
  implements:
  - Argotic.Common.ISyndicationResource.Loaded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.MediaType
  commentId: P:Argotic.Publishing.AtomCategoryDocument.MediaType
  id: MediaType
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: MediaType
  nameWithType: AtomCategoryDocument.MediaType
  fullName: Argotic.Publishing.AtomCategoryDocument.MediaType
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: MediaType
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 125
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets the IANA MIME media type identifier assigned to Atom category documents.\n"
  remarks: "\nSee <a href=\"http://www.iana.org/assignments/media-types\">http://www.iana.org/assignments/media-types</a> for a listing of the registered IANA MIME media types and sub-types.\n"
  example: []
  syntax:
    content: public static string MediaType { get; }
    parameters: []
    return:
      type: System.String
      description: A string that identifies the IANA MIME media type for Atom category documents.
    content.vb: Public Shared ReadOnly Property MediaType As String
  overload: Argotic.Publishing.AtomCategoryDocument.MediaType*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Argotic.Publishing.AtomCategoryDocument.BaseUri
  commentId: P:Argotic.Publishing.AtomCategoryDocument.BaseUri
  id: BaseUri
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: AtomCategoryDocument.BaseUri
  fullName: Argotic.Publishing.AtomCategoryDocument.BaseUri
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: BaseUri
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 142
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the base URI other than the base URI of the document or external entity.\n"
  remarks: "\n<p>\n    The value of this property is interpreted as a URI Reference as defined in <a href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC 2396: Uniform Resource Identifiers</a>,\n    after processing according to <a href=\"http://www.w3.org/TR/xmlbase/#escaping\">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</p>\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents a base URI other than the base URI of the document or external entity. The default value is a <strong>null</strong> reference.
    content.vb: Public Property BaseUri As Uri
  overload: Argotic.Publishing.AtomCategoryDocument.BaseUri*
  implements:
  - Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Categories
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Categories
  id: Categories
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: AtomCategoryDocument.Categories
  fullName: Argotic.Publishing.AtomCategoryDocument.Categories
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Categories
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 157
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the categories associated with this document.\n"
  remarks: "\n<p>This <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n<p>The <xref href=\"Argotic.Publishing.AtomCategoryDocument.Categories\" data-throw-if-not-resolved=\"false\"></xref> collection of a <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> can contain zero or more <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n<p>\n    A <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref> object that has no <xref href=\"Argotic.Syndication.AtomCategory.Scheme\" data-throw-if-not-resolved=\"false\"></xref> specified inherits the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Scheme\" data-throw-if-not-resolved=\"false\"></xref> of its <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> parent.\n    A <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref> object with an existing <xref href=\"Argotic.Syndication.AtomCategory.Scheme\" data-throw-if-not-resolved=\"false\"></xref> specified does not inherit the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Scheme\" data-throw-if-not-resolved=\"false\"></xref> of its <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> parent.\n</p>\n"
  example: []
  syntax:
    content: public IEnumerable<AtomCategory> Categories { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Syndication.AtomCategory}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.AtomCategory" data-throw-if-not-resolved="false"></xref> objects that represent categories associated with this document.
    content.vb: Public Property Categories As IEnumerable(Of AtomCategory)
  overload: Argotic.Publishing.AtomCategoryDocument.Categories*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Extensions
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Extensions
  id: Extensions
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: AtomCategoryDocument.Extensions
  fullName: Argotic.Publishing.AtomCategoryDocument.Extensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Extensions
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 184
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the syndication extensions applied to this syndication entity.\n"
  remarks: "\nThis <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public IEnumerable<ISyndicationExtension> Extensions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects that represent syndication extensions applied to this syndication entity.
    content.vb: Public Property Extensions As IEnumerable(Of ISyndicationExtension)
  overload: Argotic.Publishing.AtomCategoryDocument.Extensions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Format
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Format
  id: Format
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: AtomCategoryDocument.Format
  fullName: Argotic.Publishing.AtomCategoryDocument.Format
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Format
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 207
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets the <xref href=\"Argotic.Common.SyndicationContentFormat\" data-throw-if-not-resolved=\"false\"></xref> that this syndication resource implements.\n"
  example: []
  syntax:
    content: public SyndicationContentFormat Format { get; }
    parameters: []
    return:
      type: Argotic.Common.SyndicationContentFormat
      description: The <xref href="Argotic.Common.SyndicationContentFormat" data-throw-if-not-resolved="false"></xref> enumeration value that indicates the type of syndication format that this syndication resource implements.
    content.vb: Public ReadOnly Property Format As SyndicationContentFormat
  overload: Argotic.Publishing.AtomCategoryDocument.Format*
  implements:
  - Argotic.Common.ISyndicationResource.Format
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Publishing.AtomCategoryDocument.HasExtensions
  commentId: P:Argotic.Publishing.AtomCategoryDocument.HasExtensions
  id: HasExtensions
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: HasExtensions
  nameWithType: AtomCategoryDocument.HasExtensions
  fullName: Argotic.Publishing.AtomCategoryDocument.HasExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: HasExtensions
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 213
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets a value indicating whether this syndication entity has one or more syndication extensions applied to it.\n"
  example: []
  syntax:
    content: public bool HasExtensions { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Publishing.AtomCategoryDocument.Extensions" data-throw-if-not-resolved="false"></xref> collection for this entity contains one or more <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects, otherwise returns <strong>false</strong>.
    content.vb: Public ReadOnly Property HasExtensions As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.HasExtensions*
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Publishing.AtomCategoryDocument.IsFixed
  commentId: P:Argotic.Publishing.AtomCategoryDocument.IsFixed
  id: IsFixed
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: IsFixed
  nameWithType: AtomCategoryDocument.IsFixed
  fullName: Argotic.Publishing.AtomCategoryDocument.IsFixed
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: IsFixed
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 219
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets a value indicating whether this document represents a fixed or open set of categories.\n"
  example: []
  syntax:
    content: public bool IsFixed { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if this document represents a fixed set of categories; otherwise <strong>false</strong>.
    content.vb: Public Property IsFixed As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.IsFixed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Language
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Language
  id: Language
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: AtomCategoryDocument.Language
  fullName: Argotic.Publishing.AtomCategoryDocument.Language
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Language
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 230
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the natural or formal language in which the content is written.\n"
  remarks: "\n<p>\n    The value of this property is a language identifier as defined by <a href=\"http://www.ietf.org/rfc/rfc3066.txt\">RFC 3066: Tags for the Identification of Languages</a>, or its successor.\n</p>\n"
  example: []
  syntax:
    content: public CultureInfo Language { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> that represents the natural or formal language in which the content is written. The default value is a <strong>null</strong> reference.
    content.vb: Public Property Language As CultureInfo
  overload: Argotic.Publishing.AtomCategoryDocument.Language*
  implements:
  - Argotic.Syndication.IAtomCommonObjectAttributes.Language
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Scheme
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Scheme
  id: Scheme
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: AtomCategoryDocument.Scheme
  fullName: Argotic.Publishing.AtomCategoryDocument.Scheme
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Scheme
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 243
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets an IRI that identifies the categorization scheme used by this document.\n"
  remarks: "\n<p>See <a href=\"http://www.ietf.org/rfc/rfc3987.txt\">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</p>\n<p>See <a href=\"http://msdn2.microsoft.com/en-us/library/system.uri.aspx\">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</p>\n"
  example: []
  syntax:
    content: public Uri Scheme { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: "\nA <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref> that represents a Internationalized Resource Identifier (IRI) that identifies the categorization scheme used by this document.\nThe default value is a <strong>null</strong> reference, which indicates that no inheritable categorization scheme was specifed.\n"
    content.vb: Public Property Scheme As Uri
  overload: Argotic.Publishing.AtomCategoryDocument.Scheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Uri
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Uri
  id: Uri
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: AtomCategoryDocument.Uri
  fullName: Argotic.Publishing.AtomCategoryDocument.Uri
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Uri
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 257
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets an IRI that identifies the location of this <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    If a <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref> is specified, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Categories\" data-throw-if-not-resolved=\"false\"></xref> collection <strong>must</strong> be empty and <strong>must not</strong> specify a <xref href=\"Argotic.Publishing.AtomCategoryDocument.Scheme\" data-throw-if-not-resolved=\"false\"></xref>\n    or indicate that it represents a <xref href=\"Argotic.Publishing.AtomCategoryDocument.IsFixed\" data-throw-if-not-resolved=\"false\"></xref> set of categories.\n</p>\n<p>See <a href=\"http://www.ietf.org/rfc/rfc3987.txt\">RFC 3987: Internationalized Resource Identifiers</a> for the IRI technical specification.</p>\n<p>See <a href=\"http://msdn2.microsoft.com/en-us/library/system.uri.aspx\">System.Uri</a> for enabling support for IRIs within Microsoft .NET framework applications.</p>\n"
  example: []
  syntax:
    content: public Uri Uri { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents a Internationalized Resource Identifier (IRI) that identifies the location of this <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Property Uri As Uri
  overload: Argotic.Publishing.AtomCategoryDocument.Uri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Version
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Version
  id: Version
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: AtomCategoryDocument.Version
  fullName: Argotic.Publishing.AtomCategoryDocument.Version
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Version
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 263
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Version\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"Argotic.Common.SyndicationContentFormat\" data-throw-if-not-resolved=\"false\"></xref> that this syndication resource conforms to.\n"
  example: []
  syntax:
    content: public Version Version { get; }
    parameters: []
    return:
      type: System.Version
      description: The <xref href="Argotic.Publishing.AtomCategoryDocument.Version" data-throw-if-not-resolved="false"></xref> of the <xref href="Argotic.Common.SyndicationContentFormat" data-throw-if-not-resolved="false"></xref> that this syndication resource conforms to. The default value is <strong>2.0</strong>.
    content.vb: Public ReadOnly Property Version As Version
  overload: Argotic.Publishing.AtomCategoryDocument.Version*
  implements:
  - Argotic.Common.ISyndicationResource.Version
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Publishing.AtomCategoryDocument.Item(System.Int32)
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Item(System.Int32)
  id: Item(System.Int32)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: AtomCategoryDocument.Item[Int32]
  fullName: Argotic.Publishing.AtomCategoryDocument.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: this[]
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 285
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.\n"
  example: []
  syntax:
    content: public AtomCategory this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the category to get or set.
    return:
      type: Argotic.Syndication.AtomCategory
      description: The <xref href="Argotic.Syndication.AtomCategory" data-throw-if-not-resolved="false"></xref> at the specified index.
    content.vb: Public Property Item(index As Integer) As AtomCategory
  overload: Argotic.Publishing.AtomCategoryDocument.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">index</code> is less than zero.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">index</code> is equal to or greater than the count for <xref href="Argotic.Publishing.AtomCategoryDocument.Categories" data-throw-if-not-resolved="false"></xref>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomCategoryDocument.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Publishing.AtomCategoryDocument.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Argotic.Publishing.AtomCategoryDocument.op_Equality(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.op_Equality(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  id: op_Equality(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Equality(AtomCategoryDocument, AtomCategoryDocument)
  nameWithType: AtomCategoryDocument.Equality(AtomCategoryDocument, AtomCategoryDocument)
  fullName: Argotic.Publishing.AtomCategoryDocument.Equality(Argotic.Publishing.AtomCategoryDocument, Argotic.Publishing.AtomCategoryDocument)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 305
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(AtomCategoryDocument first, AtomCategoryDocument second)
    parameters:
    - id: first
      type: Argotic.Publishing.AtomCategoryDocument
      description: Operand to be compared.
    - id: second
      type: Argotic.Publishing.AtomCategoryDocument
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As AtomCategoryDocument, second As AtomCategoryDocument) As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.op_GreaterThan(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.op_GreaterThan(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  id: op_GreaterThan(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: GreaterThan(AtomCategoryDocument, AtomCategoryDocument)
  nameWithType: AtomCategoryDocument.GreaterThan(AtomCategoryDocument, AtomCategoryDocument)
  fullName: Argotic.Publishing.AtomCategoryDocument.GreaterThan(Argotic.Publishing.AtomCategoryDocument, Argotic.Publishing.AtomCategoryDocument)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 326
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(AtomCategoryDocument first, AtomCategoryDocument second)
    parameters:
    - id: first
      type: Argotic.Publishing.AtomCategoryDocument
      description: Operand to be compared.
    - id: second
      type: Argotic.Publishing.AtomCategoryDocument
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As AtomCategoryDocument, second As AtomCategoryDocument) As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.op_Inequality(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.op_Inequality(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  id: op_Inequality(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Inequality(AtomCategoryDocument, AtomCategoryDocument)
  nameWithType: AtomCategoryDocument.Inequality(AtomCategoryDocument, AtomCategoryDocument)
  fullName: Argotic.Publishing.AtomCategoryDocument.Inequality(Argotic.Publishing.AtomCategoryDocument, Argotic.Publishing.AtomCategoryDocument)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 347
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(AtomCategoryDocument first, AtomCategoryDocument second)
    parameters:
    - id: first
      type: Argotic.Publishing.AtomCategoryDocument
      description: Operand to be compared.
    - id: second
      type: Argotic.Publishing.AtomCategoryDocument
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As AtomCategoryDocument, second As AtomCategoryDocument) As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.op_LessThan(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.op_LessThan(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  id: op_LessThan(Argotic.Publishing.AtomCategoryDocument,Argotic.Publishing.AtomCategoryDocument)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: LessThan(AtomCategoryDocument, AtomCategoryDocument)
  nameWithType: AtomCategoryDocument.LessThan(AtomCategoryDocument, AtomCategoryDocument)
  fullName: Argotic.Publishing.AtomCategoryDocument.LessThan(Argotic.Publishing.AtomCategoryDocument, Argotic.Publishing.AtomCategoryDocument)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 358
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(AtomCategoryDocument first, AtomCategoryDocument second)
    parameters:
    - id: first
      type: Argotic.Publishing.AtomCategoryDocument
      description: Operand to be compared.
    - id: second
      type: Argotic.Publishing.AtomCategoryDocument
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As AtomCategoryDocument, second As AtomCategoryDocument) As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument},System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument})
  commentId: M:Argotic.Publishing.AtomCategoryDocument.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument},System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument},System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument})
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<AtomCategoryDocument>, Collection<AtomCategoryDocument>)
  nameWithType: AtomCategoryDocument.CompareSequence(Collection<AtomCategoryDocument>, Collection<AtomCategoryDocument>)
  fullName: Argotic.Publishing.AtomCategoryDocument.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Publishing.AtomCategoryDocument>, System.Collections.ObjectModel.Collection<Argotic.Publishing.AtomCategoryDocument>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 392
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<AtomCategoryDocument> source, Collection<AtomCategoryDocument> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of AtomCategoryDocument), target As Collection(Of AtomCategoryDocument)) As Integer
  overload: Argotic.Publishing.AtomCategoryDocument.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomCategoryDocument.CompareSequence(Collection(Of AtomCategoryDocument), Collection(Of AtomCategoryDocument))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Publishing.AtomCategoryDocument.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Publishing.AtomCategoryDocument), System.Collections.ObjectModel.Collection(Of Argotic.Publishing.AtomCategoryDocument))
  name.vb: CompareSequence(Collection(Of AtomCategoryDocument), Collection(Of AtomCategoryDocument))
- uid: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Create(System.Uri)
  id: Create(System.Uri)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Create(Uri)
  nameWithType: AtomCategoryDocument.Create(Uri)
  fullName: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 430
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> is created using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static AtomCategoryDocument Create(Uri source)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    return:
      type: Argotic.Publishing.AtomCategoryDocument
      description: An <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri) As AtomCategoryDocument
  overload: Argotic.Publishing.AtomCategoryDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  id: Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, ICredentials, IWebProxy)
  nameWithType: AtomCategoryDocument.Create(Uri, ICredentials, IWebProxy)
  fullName: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri, System.Net.ICredentials, System.Net.IWebProxy)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 451
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> is created using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static AtomCategoryDocument Create(Uri source, ICredentials credentials, IWebProxy proxy)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    return:
      type: Argotic.Publishing.AtomCategoryDocument
      description: An <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, credentials As ICredentials, proxy As IWebProxy) As AtomCategoryDocument
  overload: Argotic.Publishing.AtomCategoryDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,Argotic.Common.WebRequestOptions)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,Argotic.Common.WebRequestOptions)
  id: Create(System.Uri,Argotic.Common.WebRequestOptions)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, WebRequestOptions)
  nameWithType: AtomCategoryDocument.Create(Uri, WebRequestOptions)
  fullName: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri, Argotic.Common.WebRequestOptions)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 467
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> is created using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static AtomCategoryDocument Create(Uri source, WebRequestOptions options)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    return:
      type: Argotic.Publishing.AtomCategoryDocument
      description: An <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, options As WebRequestOptions) As AtomCategoryDocument
  overload: Argotic.Publishing.AtomCategoryDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  id: Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  nameWithType: AtomCategoryDocument.Create(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri, System.Net.ICredentials, System.Net.IWebProxy, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 486
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AtomCategoryDocument Create(Uri source, ICredentials credentials, IWebProxy proxy, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    return:
      type: Argotic.Publishing.AtomCategoryDocument
      description: An <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, credentials As ICredentials, proxy As IWebProxy, settings As SyndicationResourceLoadSettings) As AtomCategoryDocument
  overload: Argotic.Publishing.AtomCategoryDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  id: Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  nameWithType: AtomCategoryDocument.Create(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri, Argotic.Common.WebRequestOptions, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 504
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AtomCategoryDocument Create(Uri source, WebRequestOptions options, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    return:
      type: Argotic.Publishing.AtomCategoryDocument
      description: An <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, options As WebRequestOptions, settings As SyndicationResourceLoadSettings) As AtomCategoryDocument
  overload: Argotic.Publishing.AtomCategoryDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  id: Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, SyndicationResourceLoadSettings)
  nameWithType: AtomCategoryDocument.Create(Uri, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Create(System.Uri, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 526
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AtomCategoryDocument Create(Uri source, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    return:
      type: Argotic.Publishing.AtomCategoryDocument
      description: An <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, settings As SyndicationResourceLoadSettings) As AtomCategoryDocument
  overload: Argotic.Publishing.AtomCategoryDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomCategoryDocument.AddCategory(Argotic.Syndication.AtomCategory)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.AddCategory(Argotic.Syndication.AtomCategory)
  id: AddCategory(Argotic.Syndication.AtomCategory)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: AddCategory(AtomCategory)
  nameWithType: AtomCategoryDocument.AddCategory(AtomCategory)
  fullName: Argotic.Publishing.AtomCategoryDocument.AddCategory(Argotic.Syndication.AtomCategory)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddCategory
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 537
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nAdds the supplied <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref> to the document&apos;s <xref href=\"Argotic.Publishing.AtomCategoryDocument.Categories\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddCategory(AtomCategory category)
    parameters:
    - id: category
      type: Argotic.Syndication.AtomCategory
      description: The <xref href="Argotic.Syndication.AtomCategory" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.AtomCategory" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Publishing.AtomCategoryDocument.Categories" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddCategory(category As AtomCategory) As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.AddCategory*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">category</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.AddExtension(Argotic.Extensions.ISyndicationExtension)
  id: AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: AddExtension(ISyndicationExtension)
  nameWithType: AtomCategoryDocument.AddExtension(ISyndicationExtension)
  fullName: Argotic.Publishing.AtomCategoryDocument.AddExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddExtension
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 555
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nAdds the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> to the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.AddExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.CompareTo(System.Object)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: AtomCategoryDocument.CompareTo(Object)
  fullName: Argotic.Publishing.AtomCategoryDocument.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 573
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Publishing.AtomCategoryDocument.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.CreateNavigator
  commentId: M:Argotic.Publishing.AtomCategoryDocument.CreateNavigator
  id: CreateNavigator
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: CreateNavigator()
  nameWithType: AtomCategoryDocument.CreateNavigator()
  fullName: Argotic.Publishing.AtomCategoryDocument.CreateNavigator()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CreateNavigator
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 622
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nInitializes a read-only <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object for navigating through nodes in this <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> is positioned on the root element of the <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref>.\nIf there is no root element, the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> is positioned on the first element in the XML representation of the <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public XPathNavigator CreateNavigator()
    return:
      type: System.Xml.XPath.XPathNavigator
      description: A read-only <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Function CreateNavigator As XPathNavigator
  overload: Argotic.Publishing.AtomCategoryDocument.CreateNavigator*
  implements:
  - Argotic.Common.ISyndicationResource.CreateNavigator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Equals(System.Object)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: AtomCategoryDocument.Equals(Object)
  fullName: Argotic.Publishing.AtomCategoryDocument.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 649
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Publishing.AtomCategoryDocument.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Publishing.AtomCategoryDocument.FindCategory(System.Predicate{Argotic.Syndication.AtomCategory})
  commentId: M:Argotic.Publishing.AtomCategoryDocument.FindCategory(System.Predicate{Argotic.Syndication.AtomCategory})
  id: FindCategory(System.Predicate{Argotic.Syndication.AtomCategory})
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: FindCategory(Predicate<AtomCategory>)
  nameWithType: AtomCategoryDocument.FindCategory(Predicate<AtomCategory>)
  fullName: Argotic.Publishing.AtomCategoryDocument.FindCategory(System.Predicate<Argotic.Syndication.AtomCategory>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: FindCategory
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 672
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSearches for a category that matches the conditions defined by the specified predicate, and returns the first occurrence within the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Categories\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nThe <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> is a delegate to a method that returns <strong>true</strong> if the object passed to it matches the conditions defined in the delegate.\nThe elements of the current <xref href=\"Argotic.Publishing.AtomCategoryDocument.Categories\" data-throw-if-not-resolved=\"false\"></xref> are individually passed to the <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> delegate, moving forward in\nthe <xref href=\"Argotic.Publishing.AtomCategoryDocument.Categories\" data-throw-if-not-resolved=\"false\"></xref>, starting with the first element and ending with the last element. Processing is stopped when a match is found.\n"
  example: []
  syntax:
    content: public AtomCategory FindCategory(Predicate<AtomCategory> match)
    parameters:
    - id: match
      type: System.Predicate{Argotic.Syndication.AtomCategory}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the <xref href="Argotic.Syndication.AtomCategory" data-throw-if-not-resolved="false"></xref> to search for.
    return:
      type: Argotic.Syndication.AtomCategory
      description: "\nThe first category that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function FindCategory(match As Predicate(Of AtomCategory)) As AtomCategory
  overload: Argotic.Publishing.AtomCategoryDocument.FindCategory*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">match</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomCategoryDocument.FindCategory(Predicate(Of AtomCategory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Publishing.AtomCategoryDocument.FindCategory(System.Predicate(Of Argotic.Syndication.AtomCategory))
  name.vb: FindCategory(Predicate(Of AtomCategory))
- uid: Argotic.Publishing.AtomCategoryDocument.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Publishing.AtomCategoryDocument.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  id: FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: AtomCategoryDocument.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Publishing.AtomCategoryDocument.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: FindExtension
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 693
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSearches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nThe <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> is a delegate to a method that returns <strong>true</strong> if the object passed to it matches the conditions defined in the delegate.\nThe elements of the current <xref href=\"Argotic.Publishing.AtomCategoryDocument.Extensions\" data-throw-if-not-resolved=\"false\"></xref> are individually passed to the <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> delegate, moving forward in\nthe <xref href=\"Argotic.Publishing.AtomCategoryDocument.Extensions\" data-throw-if-not-resolved=\"false\"></xref>, starting with the first element and ending with the last element. Processing is stopped when a match is found.\n"
  example: []
  syntax:
    content: public ISyndicationExtension FindExtension(Predicate<ISyndicationExtension> match)
    parameters:
    - id: match
      type: System.Predicate{Argotic.Extensions.ISyndicationExtension}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to search for.
    return:
      type: Argotic.Extensions.ISyndicationExtension
      description: "\nThe first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function FindExtension(match As Predicate(Of ISyndicationExtension)) As ISyndicationExtension
  overload: Argotic.Publishing.AtomCategoryDocument.FindExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">match</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  nameWithType.vb: AtomCategoryDocument.FindExtension(Predicate(Of ISyndicationExtension))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Publishing.AtomCategoryDocument.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
- uid: Argotic.Publishing.AtomCategoryDocument.GetHashCode
  commentId: M:Argotic.Publishing.AtomCategoryDocument.GetHashCode
  id: GetHashCode
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: AtomCategoryDocument.GetHashCode()
  fullName: Argotic.Publishing.AtomCategoryDocument.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 705
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Publishing.AtomCategoryDocument.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(IXPathNavigable)
  nameWithType: AtomCategoryDocument.Load(IXPathNavigable)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 722
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XPath.IXPathNavigable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(IXPathNavigable source)
    parameters:
    - id: source
      type: System.Xml.XPath.IXPathNavigable
      description: The <strong>IXPathNavigable</strong> used to load the syndication resource.
    content.vb: Public Sub Load(source As IXPathNavigable)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(IXPathNavigable, SyndicationResourceLoadSettings)
  nameWithType: AtomCategoryDocument.Load(IXPathNavigable, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 738
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XPath.IXPathNavigable\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(IXPathNavigable source, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Xml.XPath.IXPathNavigable
      description: The <strong>IXPathNavigable</strong> used to load the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(source As IXPathNavigable, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.IO.Stream)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(Stream)
  nameWithType: AtomCategoryDocument.Load(Stream)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 761
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> used to load the syndication resource.
    content.vb: Public Sub Load(stream As Stream)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(Stream, SyndicationResourceLoadSettings)
  nameWithType: AtomCategoryDocument.Load(Stream, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.IO.Stream, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 777
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(Stream stream, SyndicationResourceLoadSettings settings)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> used to load the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(stream As Stream, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(XmlReader)
  nameWithType: AtomCategoryDocument.Load(XmlReader)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 801
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <strong>XmlReader</strong> used to load the syndication resource.
    content.vb: Public Sub Load(reader As XmlReader)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(XmlReader, SyndicationResourceLoadSettings)
  nameWithType: AtomCategoryDocument.Load(XmlReader, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 817
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(XmlReader reader, SyndicationResourceLoadSettings settings)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <strong>XmlReader</strong> used to load the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(reader As XmlReader, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  id: Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(Uri, ICredentials, IWebProxy)
  nameWithType: AtomCategoryDocument.Load(Uri, ICredentials, IWebProxy)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 858
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the supplied <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n             If <code data-dev-comment-type=\"paramref\" class=\"paramref\">credentials</code> is <strong>null</strong>, request is made using the default application credentials.\n</li><li>\n    If <code data-dev-comment-type=\"paramref\" class=\"paramref\">proxy</code> is <strong>null</strong>, request is made using the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> default proxy settings.\n</li><li>\n    After the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, ICredentials credentials, IWebProxy proxy)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    content.vb: Public Sub Load(source As Uri, credentials As ICredentials, proxy As IWebProxy)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,Argotic.Common.WebRequestOptions)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,Argotic.Common.WebRequestOptions)
  id: Load(System.Uri,Argotic.Common.WebRequestOptions)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(Uri, WebRequestOptions)
  nameWithType: AtomCategoryDocument.Load(Uri, WebRequestOptions)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.Uri, Argotic.Common.WebRequestOptions)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 882
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the supplied <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n            After the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, WebRequestOptions options)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    content.vb: Public Sub Load(source As Uri, options As WebRequestOptions)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  nameWithType: AtomCategoryDocument.Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 929
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the supplied <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n             If <code data-dev-comment-type=\"paramref\" class=\"paramref\">credentials</code> is <strong>null</strong>, request is made using the default application credentials.\n</li><li>\n    If <code data-dev-comment-type=\"paramref\" class=\"paramref\">proxy</code> is <strong>null</strong>, request is made using the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> default proxy settings.\n</li><li>\n    If <code data-dev-comment-type=\"paramref\" class=\"paramref\">settings</code> has a <xref href=\"Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref>\n    the character encoding of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> will be attempt to be determined automatically, otherwise the specified character encoding will be used.\n    If automatic detection fails, a character encoding of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref> is used by default.\n</li><li>\n    After the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, ICredentials credentials, IWebProxy proxy, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(source As Uri, credentials As ICredentials, proxy As IWebProxy, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  nameWithType: AtomCategoryDocument.Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Load(System.Uri, Argotic.Common.WebRequestOptions, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 965
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the supplied <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n            If <code data-dev-comment-type=\"paramref\" class=\"paramref\">settings</code> has a <xref href=\"Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref>\n            the character encoding of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> will be attempt to be determined automatically, otherwise the specified character encoding will be used.\n            If automatic detection fails, a character encoding of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref> is used by default.\n</li><li>\n    After the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, WebRequestOptions options, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(source As Uri, options As WebRequestOptions, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomCategoryDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,System.Object)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,System.Object)
  id: LoadAsync(System.Uri,System.Object)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, Object)
  nameWithType: AtomCategoryDocument.LoadAsync(Uri, Object)
  fullName: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1007
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads this <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>The <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> is loaded using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>, you must wait for the load operation to complete before\n    attempting to load the syndication resource using the <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, userToken As Object)
  overload: Argotic.Publishing.AtomCategoryDocument.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  id: LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  nameWithType: AtomCategoryDocument.LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  fullName: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1031
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads this <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>, you must wait for the load operation to complete before\n    attempting to load the syndication resource using the <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, SyndicationResourceLoadSettings settings, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, settings As SyndicationResourceLoadSettings, userToken As Object)
  overload: Argotic.Publishing.AtomCategoryDocument.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  id: LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  nameWithType: AtomCategoryDocument.LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  fullName: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Net.ICredentials, System.Net.IWebProxy, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1061
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads this <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>,\n    you must wait for the load operation to complete before attempting to load the syndication resource using the <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, SyndicationResourceLoadSettings settings, ICredentials credentials, IWebProxy proxy, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, settings As SyndicationResourceLoadSettings, credentials As ICredentials, proxy As IWebProxy, userToken As Object)
  overload: Argotic.Publishing.AtomCategoryDocument.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  id: LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  nameWithType: AtomCategoryDocument.LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  fullName: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.WebRequestOptions, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1091
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads this <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"Argotic.Publishing.AtomCategoryDocument.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>,\n    you must wait for the load operation to complete before attempting to load the syndication resource using the <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, SyndicationResourceLoadSettings settings, WebRequestOptions options, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="Argotic.Publishing.AtomCategoryDocument.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, settings As SyndicationResourceLoadSettings, options As WebRequestOptions, userToken As Object)
  overload: Argotic.Publishing.AtomCategoryDocument.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel
  commentId: M:Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel
  id: LoadAsyncCancel
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: LoadAsyncCancel()
  nameWithType: AtomCategoryDocument.LoadAsyncCancel()
  fullName: Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsyncCancel
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1137
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCancels an asynchronous operation to load this syndication resource.\n"
  remarks: "\nUse the LoadAsyncCancel method to cancel a pending <xref href=\"Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation.\nIf there is a load operation in progress, this method releases resources used to execute the load operation.\nIf there is no load operation pending, this method does nothing.\n"
  example: []
  syntax:
    content: public void LoadAsyncCancel()
    content.vb: Public Sub LoadAsyncCancel
  overload: Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel*
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsyncCancel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.RemoveCategory(Argotic.Syndication.AtomCategory)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.RemoveCategory(Argotic.Syndication.AtomCategory)
  id: RemoveCategory(Argotic.Syndication.AtomCategory)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: RemoveCategory(AtomCategory)
  nameWithType: AtomCategoryDocument.RemoveCategory(AtomCategory)
  fullName: Argotic.Publishing.AtomCategoryDocument.RemoveCategory(Argotic.Syndication.AtomCategory)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveCategory
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1156
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nRemoves the supplied <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref> from the document&apos;s <xref href=\"Argotic.Publishing.AtomCategoryDocument.Categories\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Categories\" data-throw-if-not-resolved=\"false\"></xref> collection of the document does not contain the specified <xref href=\"Argotic.Syndication.AtomCategory\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveCategory(AtomCategory category)
    parameters:
    - id: category
      type: Argotic.Syndication.AtomCategory
      description: The <xref href="Argotic.Syndication.AtomCategory" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.AtomCategory" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Publishing.AtomCategoryDocument.Categories" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveCategory(category As AtomCategory) As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.RemoveCategory*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">category</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  id: RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: AtomCategoryDocument.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Publishing.AtomCategoryDocument.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveExtension
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1180
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nRemoves the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> from the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection of the current instance does not contain the specified <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Publishing.AtomCategoryDocument.RemoveExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Save(System.IO.Stream)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Save(Stream)
  nameWithType: AtomCategoryDocument.Save(Stream)
  fullName: Argotic.Publishing.AtomCategoryDocument.Save(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1201
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> to which you want to save the syndication resource.
    content.vb: Public Sub Save(stream As Stream)
  overload: Argotic.Publishing.AtomCategoryDocument.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  id: Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Save(Stream, SyndicationResourceSaveSettings)
  nameWithType: AtomCategoryDocument.Save(Stream, SyndicationResourceSaveSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Save(System.IO.Stream, Argotic.Common.SyndicationResourceSaveSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1213
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(Stream stream, SyndicationResourceSaveSettings settings)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> to which you want to save the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: The <xref href="Argotic.Common.SyndicationResourceSaveSettings" data-throw-if-not-resolved="false"></xref> object used to configure the persistence of the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Save(stream As Stream, settings As SyndicationResourceSaveSettings)
  overload: Argotic.Publishing.AtomCategoryDocument.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Save(System.Xml.XmlWriter)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Save(System.Xml.XmlWriter)
  id: Save(System.Xml.XmlWriter)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Save(XmlWriter)
  nameWithType: AtomCategoryDocument.Save(XmlWriter)
  fullName: Argotic.Publishing.AtomCategoryDocument.Save(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1239
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <strong>XmlWriter</strong> to which you want to save the syndication resource.
    content.vb: Public Sub Save(writer As XmlWriter)
  overload: Argotic.Publishing.AtomCategoryDocument.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  id: Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: Save(XmlWriter, SyndicationResourceSaveSettings)
  nameWithType: AtomCategoryDocument.Save(XmlWriter, SyndicationResourceSaveSettings)
  fullName: Argotic.Publishing.AtomCategoryDocument.Save(System.Xml.XmlWriter, Argotic.Common.SyndicationResourceSaveSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1254
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceSaveSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(XmlWriter writer, SyndicationResourceSaveSettings settings)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <strong>XmlWriter</strong> to which you want to save the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: The <xref href="Argotic.Common.SyndicationResourceSaveSettings" data-throw-if-not-resolved="false"></xref> object used to configure the persistence of the <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Sub Save(writer As XmlWriter, settings As SyndicationResourceSaveSettings)
  overload: Argotic.Publishing.AtomCategoryDocument.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">settings</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomCategoryDocument.ToString
  commentId: M:Argotic.Publishing.AtomCategoryDocument.ToString
  id: ToString
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AtomCategoryDocument.ToString()
  fullName: Argotic.Publishing.AtomCategoryDocument.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1307
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns the XML representation for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Publishing.AtomCategoryDocument" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Publishing.AtomCategoryDocument.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Publishing.AtomCategoryDocument.OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  id: OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  parent: Argotic.Publishing.AtomCategoryDocument
  langs:
  - csharp
  - vb
  name: OnDocumentLoaded(SyndicationResourceLoadedEventArgs)
  nameWithType: AtomCategoryDocument.OnDocumentLoaded(SyndicationResourceLoadedEventArgs)
  fullName: Argotic.Publishing.AtomCategoryDocument.OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: OnDocumentLoaded
    path: ../Solutions/Argotic.Core/Publishing/AtomCategoryDocument.cs
    startLine: 1334
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nRaises the <xref href=\"Argotic.Publishing.AtomCategoryDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnDocumentLoaded(SyndicationResourceLoadedEventArgs e)
    parameters:
    - id: e
      type: Argotic.Common.SyndicationResourceLoadedEventArgs
      description: A <xref href="Argotic.Common.SyndicationResourceLoadedEventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data.
    content.vb: Protected Overridable Sub OnDocumentLoaded(e As SyndicationResourceLoadedEventArgs)
  overload: Argotic.Publishing.AtomCategoryDocument.OnDocumentLoaded*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Argotic.Publishing.AtomCategoryDocument
  commentId: T:Argotic.Publishing.AtomCategoryDocument
  parent: Argotic.Publishing
  name: AtomCategoryDocument
  nameWithType: AtomCategoryDocument
  fullName: Argotic.Publishing.AtomCategoryDocument
- uid: Argotic.Syndication.AtomCategory
  commentId: T:Argotic.Syndication.AtomCategory
  parent: Argotic.Syndication
  name: AtomCategory
  nameWithType: AtomCategory
  fullName: Argotic.Syndication.AtomCategory
- uid: Argotic.Publishing.AtomServiceDocument
  commentId: T:Argotic.Publishing.AtomServiceDocument
  parent: Argotic.Publishing
  name: AtomServiceDocument
  nameWithType: AtomServiceDocument
  fullName: Argotic.Publishing.AtomServiceDocument
- uid: Argotic.Publishing.AtomMemberResources
  commentId: T:Argotic.Publishing.AtomMemberResources
  parent: Argotic.Publishing
  name: AtomMemberResources
  nameWithType: AtomMemberResources
  fullName: Argotic.Publishing.AtomMemberResources
- uid: Argotic.Publishing.AtomMemberResources.Categories
  commentId: P:Argotic.Publishing.AtomMemberResources.Categories
  isExternal: true
- uid: Argotic.Publishing
  commentId: N:Argotic.Publishing
  name: Argotic.Publishing
  nameWithType: Argotic.Publishing
  fullName: Argotic.Publishing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Argotic.Common.ISyndicationResource
  commentId: T:Argotic.Common.ISyndicationResource
  parent: Argotic.Common
  name: ISyndicationResource
  nameWithType: ISyndicationResource
  fullName: Argotic.Common.ISyndicationResource
- uid: Argotic.Extensions.IExtensibleSyndicationObject
  commentId: T:Argotic.Extensions.IExtensibleSyndicationObject
  parent: Argotic.Extensions
  name: IExtensibleSyndicationObject
  nameWithType: IExtensibleSyndicationObject
  fullName: Argotic.Extensions.IExtensibleSyndicationObject
- uid: Argotic.Syndication.IAtomCommonObjectAttributes
  commentId: T:Argotic.Syndication.IAtomCommonObjectAttributes
  parent: Argotic.Syndication
  name: IAtomCommonObjectAttributes
  nameWithType: IAtomCommonObjectAttributes
  fullName: Argotic.Syndication.IAtomCommonObjectAttributes
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication
  commentId: N:Argotic.Syndication
  name: Argotic.Syndication
  nameWithType: Argotic.Syndication
  fullName: Argotic.Syndication
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Common
  commentId: N:Argotic.Common
  name: Argotic.Common
  nameWithType: Argotic.Common
  fullName: Argotic.Common
- uid: Argotic.Extensions
  commentId: N:Argotic.Extensions
  name: Argotic.Extensions
  nameWithType: Argotic.Extensions
  fullName: Argotic.Extensions
- uid: Argotic.Publishing.AtomCategoryDocument.#ctor*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.#ctor
  name: AtomCategoryDocument
  nameWithType: AtomCategoryDocument.AtomCategoryDocument
  fullName: Argotic.Publishing.AtomCategoryDocument.AtomCategoryDocument
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<AtomCategory>
  nameWithType: Collection<AtomCategory>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomCategory>
  nameWithType.vb: Collection(Of AtomCategory)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomCategory)
  name.vb: Collection(Of AtomCategory)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.AtomCategory
    name: AtomCategory
    nameWithType: AtomCategory
    fullName: Argotic.Syndication.AtomCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.AtomCategory
    name: AtomCategory
    nameWithType: AtomCategory
    fullName: Argotic.Syndication.AtomCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Argotic.Publishing.AtomCategoryDocument.Uri
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Uri
  isExternal: true
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XPath.IXPathNavigable)
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.Load(System.Xml.XmlReader)
  isExternal: true
- uid: Argotic.Common.ISyndicationResource.Loaded
  commentId: E:Argotic.Common.ISyndicationResource.Loaded
  parent: Argotic.Common.ISyndicationResource
  name: Loaded
  nameWithType: ISyndicationResource.Loaded
  fullName: Argotic.Common.ISyndicationResource.Loaded
- uid: System.EventHandler{Argotic.Common.SyndicationResourceLoadedEventArgs}
  commentId: T:System.EventHandler{Argotic.Common.SyndicationResourceLoadedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SyndicationResourceLoadedEventArgs>
  nameWithType: EventHandler<SyndicationResourceLoadedEventArgs>
  fullName: System.EventHandler<Argotic.Common.SyndicationResourceLoadedEventArgs>
  nameWithType.vb: EventHandler(Of SyndicationResourceLoadedEventArgs)
  fullName.vb: System.EventHandler(Of Argotic.Common.SyndicationResourceLoadedEventArgs)
  name.vb: EventHandler(Of SyndicationResourceLoadedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Common.SyndicationResourceLoadedEventArgs
    name: SyndicationResourceLoadedEventArgs
    nameWithType: SyndicationResourceLoadedEventArgs
    fullName: Argotic.Common.SyndicationResourceLoadedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Common.SyndicationResourceLoadedEventArgs
    name: SyndicationResourceLoadedEventArgs
    nameWithType: SyndicationResourceLoadedEventArgs
    fullName: Argotic.Common.SyndicationResourceLoadedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.MediaType*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.MediaType
  name: MediaType
  nameWithType: AtomCategoryDocument.MediaType
  fullName: Argotic.Publishing.AtomCategoryDocument.MediaType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Argotic.Publishing.AtomCategoryDocument.BaseUri*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.BaseUri
  name: BaseUri
  nameWithType: AtomCategoryDocument.BaseUri
  fullName: Argotic.Publishing.AtomCategoryDocument.BaseUri
- uid: Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
  commentId: P:Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
  parent: Argotic.Syndication.IAtomCommonObjectAttributes
  name: BaseUri
  nameWithType: IAtomCommonObjectAttributes.BaseUri
  fullName: Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.Categories
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Categories
  isExternal: true
- uid: Argotic.Syndication.AtomCategory.Scheme
  commentId: P:Argotic.Syndication.AtomCategory.Scheme
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.Scheme
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Scheme
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.Categories*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Categories
  name: Categories
  nameWithType: AtomCategoryDocument.Categories
  fullName: Argotic.Publishing.AtomCategoryDocument.Categories
- uid: System.Collections.Generic.IEnumerable{Argotic.Syndication.AtomCategory}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Syndication.AtomCategory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AtomCategory>
  nameWithType: IEnumerable<AtomCategory>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Syndication.AtomCategory>
  nameWithType.vb: IEnumerable(Of AtomCategory)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Syndication.AtomCategory)
  name.vb: IEnumerable(Of AtomCategory)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.AtomCategory
    name: AtomCategory
    nameWithType: AtomCategory
    fullName: Argotic.Syndication.AtomCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.AtomCategory
    name: AtomCategory
    nameWithType: AtomCategory
    fullName: Argotic.Syndication.AtomCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Argotic.Extensions.ISyndicationExtension
  commentId: T:Argotic.Extensions.ISyndicationExtension
  parent: Argotic.Extensions
  name: ISyndicationExtension
  nameWithType: ISyndicationExtension
  fullName: Argotic.Extensions.ISyndicationExtension
- uid: Argotic.Publishing.AtomCategoryDocument.Extensions*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Extensions
  name: Extensions
  nameWithType: AtomCategoryDocument.Extensions
  fullName: Argotic.Publishing.AtomCategoryDocument.Extensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: Extensions
  nameWithType: IExtensibleSyndicationObject.Extensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
- uid: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISyndicationExtension>
  nameWithType: IEnumerable<ISyndicationExtension>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: IEnumerable(Of ISyndicationExtension)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: IEnumerable(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationContentFormat
  commentId: T:Argotic.Common.SyndicationContentFormat
  parent: Argotic.Common
  name: SyndicationContentFormat
  nameWithType: SyndicationContentFormat
  fullName: Argotic.Common.SyndicationContentFormat
- uid: Argotic.Publishing.AtomCategoryDocument.Format*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Format
  name: Format
  nameWithType: AtomCategoryDocument.Format
  fullName: Argotic.Publishing.AtomCategoryDocument.Format
- uid: Argotic.Common.ISyndicationResource.Format
  commentId: P:Argotic.Common.ISyndicationResource.Format
  parent: Argotic.Common.ISyndicationResource
  name: Format
  nameWithType: ISyndicationResource.Format
  fullName: Argotic.Common.ISyndicationResource.Format
- uid: Argotic.Publishing.AtomCategoryDocument.Extensions
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Extensions
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.HasExtensions*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.HasExtensions
  name: HasExtensions
  nameWithType: AtomCategoryDocument.HasExtensions
  fullName: Argotic.Publishing.AtomCategoryDocument.HasExtensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: HasExtensions
  nameWithType: IExtensibleSyndicationObject.HasExtensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
- uid: Argotic.Publishing.AtomCategoryDocument.IsFixed*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.IsFixed
  name: IsFixed
  nameWithType: AtomCategoryDocument.IsFixed
  fullName: Argotic.Publishing.AtomCategoryDocument.IsFixed
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Argotic.Publishing.AtomCategoryDocument.Language*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Language
  name: Language
  nameWithType: AtomCategoryDocument.Language
  fullName: Argotic.Publishing.AtomCategoryDocument.Language
- uid: Argotic.Syndication.IAtomCommonObjectAttributes.Language
  commentId: P:Argotic.Syndication.IAtomCommonObjectAttributes.Language
  parent: Argotic.Syndication.IAtomCommonObjectAttributes
  name: Language
  nameWithType: IAtomCommonObjectAttributes.Language
  fullName: Argotic.Syndication.IAtomCommonObjectAttributes.Language
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Argotic.Publishing.AtomCategoryDocument.Scheme*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Scheme
  name: Scheme
  nameWithType: AtomCategoryDocument.Scheme
  fullName: Argotic.Publishing.AtomCategoryDocument.Scheme
- uid: Argotic.Publishing.AtomCategoryDocument.IsFixed
  commentId: P:Argotic.Publishing.AtomCategoryDocument.IsFixed
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.Uri*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Uri
  name: Uri
  nameWithType: AtomCategoryDocument.Uri
  fullName: Argotic.Publishing.AtomCategoryDocument.Uri
- uid: Argotic.Publishing.AtomCategoryDocument.Version
  commentId: P:Argotic.Publishing.AtomCategoryDocument.Version
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.Version*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Version
  name: Version
  nameWithType: AtomCategoryDocument.Version
  fullName: Argotic.Publishing.AtomCategoryDocument.Version
- uid: Argotic.Common.ISyndicationResource.Version
  commentId: P:Argotic.Common.ISyndicationResource.Version
  parent: Argotic.Common.ISyndicationResource
  name: Version
  nameWithType: ISyndicationResource.Version
  fullName: Argotic.Common.ISyndicationResource.Version
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.Item*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Item
  name: Item
  nameWithType: AtomCategoryDocument.Item
  fullName: Argotic.Publishing.AtomCategoryDocument.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Argotic.Publishing.AtomCategoryDocument.op_Equality*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.op_Equality
  name: Equality
  nameWithType: AtomCategoryDocument.Equality
  fullName: Argotic.Publishing.AtomCategoryDocument.Equality
- uid: Argotic.Publishing.AtomCategoryDocument.op_GreaterThan*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.op_GreaterThan
  name: GreaterThan
  nameWithType: AtomCategoryDocument.GreaterThan
  fullName: Argotic.Publishing.AtomCategoryDocument.GreaterThan
- uid: Argotic.Publishing.AtomCategoryDocument.op_Inequality*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.op_Inequality
  name: Inequality
  nameWithType: AtomCategoryDocument.Inequality
  fullName: Argotic.Publishing.AtomCategoryDocument.Inequality
- uid: Argotic.Publishing.AtomCategoryDocument.op_LessThan*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.op_LessThan
  name: LessThan
  nameWithType: AtomCategoryDocument.LessThan
  fullName: Argotic.Publishing.AtomCategoryDocument.LessThan
- uid: Argotic.Publishing.AtomCategoryDocument.CompareSequence*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.CompareSequence
  name: CompareSequence
  nameWithType: AtomCategoryDocument.CompareSequence
  fullName: Argotic.Publishing.AtomCategoryDocument.CompareSequence
- uid: System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomCategoryDocument}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<AtomCategoryDocument>
  nameWithType: Collection<AtomCategoryDocument>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Publishing.AtomCategoryDocument>
  nameWithType.vb: Collection(Of AtomCategoryDocument)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Publishing.AtomCategoryDocument)
  name.vb: Collection(Of AtomCategoryDocument)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Publishing.AtomCategoryDocument
    name: AtomCategoryDocument
    nameWithType: AtomCategoryDocument
    fullName: Argotic.Publishing.AtomCategoryDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Publishing.AtomCategoryDocument
    name: AtomCategoryDocument
    nameWithType: AtomCategoryDocument
    fullName: Argotic.Publishing.AtomCategoryDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadSettings
  commentId: T:Argotic.Common.SyndicationResourceLoadSettings
  parent: Argotic.Common
  name: SyndicationResourceLoadSettings
  nameWithType: SyndicationResourceLoadSettings
  fullName: Argotic.Common.SyndicationResourceLoadSettings
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.Create*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Create
  name: Create
  nameWithType: AtomCategoryDocument.Create
  fullName: Argotic.Publishing.AtomCategoryDocument.Create
- uid: System.Net.ICredentials
  commentId: T:System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.IWebProxy
  commentId: T:System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Argotic.Common.WebRequestOptions
  commentId: T:Argotic.Common.WebRequestOptions
  parent: Argotic.Common
  name: WebRequestOptions
  nameWithType: WebRequestOptions
  fullName: Argotic.Common.WebRequestOptions
- uid: Argotic.Publishing.AtomCategoryDocument.AddCategory*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.AddCategory
  name: AddCategory
  nameWithType: AtomCategoryDocument.AddCategory
  fullName: Argotic.Publishing.AtomCategoryDocument.AddCategory
- uid: Argotic.Publishing.AtomCategoryDocument.AddExtension*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.AddExtension
  name: AddExtension
  nameWithType: AtomCategoryDocument.AddExtension
  fullName: Argotic.Publishing.AtomCategoryDocument.AddExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: AddExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.AddExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.CompareTo*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.CompareTo
  name: CompareTo
  nameWithType: AtomCategoryDocument.CompareTo
  fullName: Argotic.Publishing.AtomCategoryDocument.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Publishing.AtomCategoryDocument.CreateNavigator*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.CreateNavigator
  name: CreateNavigator
  nameWithType: AtomCategoryDocument.CreateNavigator
  fullName: Argotic.Publishing.AtomCategoryDocument.CreateNavigator
- uid: Argotic.Common.ISyndicationResource.CreateNavigator
  commentId: M:Argotic.Common.ISyndicationResource.CreateNavigator
  parent: Argotic.Common.ISyndicationResource
  name: CreateNavigator()
  nameWithType: ISyndicationResource.CreateNavigator()
  fullName: Argotic.Common.ISyndicationResource.CreateNavigator()
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.CreateNavigator
    name: CreateNavigator
    nameWithType: ISyndicationResource.CreateNavigator
    fullName: Argotic.Common.ISyndicationResource.CreateNavigator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.CreateNavigator
    name: CreateNavigator
    nameWithType: ISyndicationResource.CreateNavigator
    fullName: Argotic.Common.ISyndicationResource.CreateNavigator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.Equals*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Equals
  name: Equals
  nameWithType: AtomCategoryDocument.Equals
  fullName: Argotic.Publishing.AtomCategoryDocument.Equals
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.FindCategory*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.FindCategory
  name: FindCategory
  nameWithType: AtomCategoryDocument.FindCategory
  fullName: Argotic.Publishing.AtomCategoryDocument.FindCategory
- uid: System.Predicate{Argotic.Syndication.AtomCategory}
  commentId: T:System.Predicate{Argotic.Syndication.AtomCategory}
  parent: System
  definition: System.Predicate`1
  name: Predicate<AtomCategory>
  nameWithType: Predicate<AtomCategory>
  fullName: System.Predicate<Argotic.Syndication.AtomCategory>
  nameWithType.vb: Predicate(Of AtomCategory)
  fullName.vb: System.Predicate(Of Argotic.Syndication.AtomCategory)
  name.vb: Predicate(Of AtomCategory)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.AtomCategory
    name: AtomCategory
    nameWithType: AtomCategory
    fullName: Argotic.Syndication.AtomCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.AtomCategory
    name: AtomCategory
    nameWithType: AtomCategory
    fullName: Argotic.Syndication.AtomCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.FindExtension*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.FindExtension
  name: FindExtension
  nameWithType: AtomCategoryDocument.FindExtension
  fullName: Argotic.Publishing.AtomCategoryDocument.FindExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  isExternal: true
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: IExtensibleSyndicationObject.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  nameWithType.vb: IExtensibleSyndicationObject.FindExtension(Predicate(Of ISyndicationExtension))
  fullName.vb: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Predicate{Argotic.Extensions.ISyndicationExtension}
  parent: System
  definition: System.Predicate`1
  name: Predicate<ISyndicationExtension>
  nameWithType: Predicate<ISyndicationExtension>
  fullName: System.Predicate<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: Predicate(Of ISyndicationExtension)
  fullName.vb: System.Predicate(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: Predicate(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.GetHashCode*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.GetHashCode
  name: GetHashCode
  nameWithType: AtomCategoryDocument.GetHashCode
  fullName: Argotic.Publishing.AtomCategoryDocument.GetHashCode
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: Argotic.Publishing.AtomCategoryDocument.Loaded
  commentId: E:Argotic.Publishing.AtomCategoryDocument.Loaded
  isExternal: true
- uid: System.Xml.XmlException
  commentId: T:System.Xml.XmlException
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.Load*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Load
  name: Load
  nameWithType: AtomCategoryDocument.Load
  fullName: Argotic.Publishing.AtomCategoryDocument.Load
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(IXPathNavigable)
  nameWithType: ISyndicationResource.Load(IXPathNavigable)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(IXPathNavigable, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(IXPathNavigable, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Stream)
  nameWithType: ISyndicationResource.Load(Stream)
  fullName: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Stream, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(Stream, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.IO.Stream, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(XmlReader)
  nameWithType: ISyndicationResource.Load(XmlReader)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(XmlReader, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(XmlReader, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebRequest
  commentId: T:System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, ICredentials, IWebProxy)
  nameWithType: ISyndicationResource.Load(Uri, ICredentials, IWebProxy)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, WebRequestOptions)
  nameWithType: ISyndicationResource.Load(Uri, WebRequestOptions)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, Argotic.Common.WebRequestOptions)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  isExternal: true
- uid: System.Text.Encoding.UTF8
  commentId: P:System.Text.Encoding.UTF8
  isExternal: true
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, Argotic.Common.WebRequestOptions, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel
  commentId: M:Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,System.Object)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,System.Object)
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsync*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.LoadAsync
  name: LoadAsync
  nameWithType: AtomCategoryDocument.LoadAsync
  fullName: Argotic.Publishing.AtomCategoryDocument.LoadAsync
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  commentId: M:Argotic.Publishing.AtomCategoryDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  isExternal: true
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Net.ICredentials, System.Net.IWebProxy, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.WebRequestOptions, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel
  name: LoadAsyncCancel
  nameWithType: AtomCategoryDocument.LoadAsyncCancel
  fullName: Argotic.Publishing.AtomCategoryDocument.LoadAsyncCancel
- uid: Argotic.Common.ISyndicationResource.LoadAsyncCancel
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsyncCancel
  parent: Argotic.Common.ISyndicationResource
  name: LoadAsyncCancel()
  nameWithType: ISyndicationResource.LoadAsyncCancel()
  fullName: Argotic.Common.ISyndicationResource.LoadAsyncCancel()
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsyncCancel
    name: LoadAsyncCancel
    nameWithType: ISyndicationResource.LoadAsyncCancel
    fullName: Argotic.Common.ISyndicationResource.LoadAsyncCancel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsyncCancel
    name: LoadAsyncCancel
    nameWithType: ISyndicationResource.LoadAsyncCancel
    fullName: Argotic.Common.ISyndicationResource.LoadAsyncCancel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.RemoveCategory*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.RemoveCategory
  name: RemoveCategory
  nameWithType: AtomCategoryDocument.RemoveCategory
  fullName: Argotic.Publishing.AtomCategoryDocument.RemoveCategory
- uid: Argotic.Publishing.AtomCategoryDocument.RemoveExtension*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.RemoveExtension
  name: RemoveExtension
  nameWithType: AtomCategoryDocument.RemoveExtension
  fullName: Argotic.Publishing.AtomCategoryDocument.RemoveExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.Save*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.Save
  name: Save
  nameWithType: AtomCategoryDocument.Save
  fullName: Argotic.Publishing.AtomCategoryDocument.Save
- uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(Stream)
  nameWithType: ISyndicationResource.Save(Stream)
  fullName: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceSaveSettings
  commentId: T:Argotic.Common.SyndicationResourceSaveSettings
  parent: Argotic.Common
  name: SyndicationResourceSaveSettings
  nameWithType: SyndicationResourceSaveSettings
  fullName: Argotic.Common.SyndicationResourceSaveSettings
- uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(Stream, SyndicationResourceSaveSettings)
  nameWithType: ISyndicationResource.Save(Stream, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.ISyndicationResource.Save(System.IO.Stream, Argotic.Common.SyndicationResourceSaveSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(XmlWriter)
  nameWithType: ISyndicationResource.Save(XmlWriter)
  fullName: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(XmlWriter, SyndicationResourceSaveSettings)
  nameWithType: ISyndicationResource.Save(XmlWriter, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter, Argotic.Common.SyndicationResourceSaveSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomCategoryDocument.ToString*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.ToString
  name: ToString
  nameWithType: AtomCategoryDocument.ToString
  fullName: Argotic.Publishing.AtomCategoryDocument.ToString
- uid: Argotic.Common.SyndicationResourceLoadedEventArgs
  commentId: T:Argotic.Common.SyndicationResourceLoadedEventArgs
  parent: Argotic.Common
  name: SyndicationResourceLoadedEventArgs
  nameWithType: SyndicationResourceLoadedEventArgs
  fullName: Argotic.Common.SyndicationResourceLoadedEventArgs
- uid: Argotic.Publishing.AtomCategoryDocument.OnDocumentLoaded*
  commentId: Overload:Argotic.Publishing.AtomCategoryDocument.OnDocumentLoaded
  name: OnDocumentLoaded
  nameWithType: AtomCategoryDocument.OnDocumentLoaded
  fullName: Argotic.Publishing.AtomCategoryDocument.OnDocumentLoaded
