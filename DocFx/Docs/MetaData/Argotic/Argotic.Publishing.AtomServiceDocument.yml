### YamlMime:ManagedReference
items:
- uid: Argotic.Publishing.AtomServiceDocument
  commentId: T:Argotic.Publishing.AtomServiceDocument
  id: AtomServiceDocument
  parent: Argotic.Publishing
  children:
  - Argotic.Publishing.AtomServiceDocument.#ctor
  - Argotic.Publishing.AtomServiceDocument.#ctor(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace})
  - Argotic.Publishing.AtomServiceDocument.AddExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Publishing.AtomServiceDocument.AddWorkspace(Argotic.Publishing.AtomWorkspace)
  - Argotic.Publishing.AtomServiceDocument.BaseUri
  - Argotic.Publishing.AtomServiceDocument.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace},System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace})
  - Argotic.Publishing.AtomServiceDocument.Create(System.Uri)
  - Argotic.Publishing.AtomServiceDocument.Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomServiceDocument.Create(System.Uri,Argotic.Common.WebRequestOptions)
  - Argotic.Publishing.AtomServiceDocument.Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomServiceDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  - Argotic.Publishing.AtomServiceDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomServiceDocument.CreateNavigator
  - Argotic.Publishing.AtomServiceDocument.Extensions
  - Argotic.Publishing.AtomServiceDocument.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  - Argotic.Publishing.AtomServiceDocument.FindWorkspace(System.Predicate{Argotic.Publishing.AtomWorkspace})
  - Argotic.Publishing.AtomServiceDocument.Format
  - Argotic.Publishing.AtomServiceDocument.HasExtensions
  - Argotic.Publishing.AtomServiceDocument.Item(System.Int32)
  - Argotic.Publishing.AtomServiceDocument.Language
  - Argotic.Publishing.AtomServiceDocument.Load(System.IO.Stream)
  - Argotic.Publishing.AtomServiceDocument.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomServiceDocument.Load(System.Uri,Argotic.Common.WebRequestOptions)
  - Argotic.Publishing.AtomServiceDocument.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomServiceDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  - Argotic.Publishing.AtomServiceDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader)
  - Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable)
  - Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  - Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  - Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  - Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,System.Object)
  - Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel
  - Argotic.Publishing.AtomServiceDocument.Loaded
  - Argotic.Publishing.AtomServiceDocument.MediaType
  - Argotic.Publishing.AtomServiceDocument.OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  - Argotic.Publishing.AtomServiceDocument.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Publishing.AtomServiceDocument.RemoveWorkspace(Argotic.Publishing.AtomWorkspace)
  - Argotic.Publishing.AtomServiceDocument.Save(System.IO.Stream)
  - Argotic.Publishing.AtomServiceDocument.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Publishing.AtomServiceDocument.Save(System.Xml.XmlWriter)
  - Argotic.Publishing.AtomServiceDocument.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Publishing.AtomServiceDocument.Version
  - Argotic.Publishing.AtomServiceDocument.Workspaces
  langs:
  - csharp
  - vb
  name: AtomServiceDocument
  nameWithType: AtomServiceDocument
  fullName: Argotic.Publishing.AtomServiceDocument
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AtomServiceDocument
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 36
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSupports the discovery of the capabilities and locations of available <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref> organized using one or more <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    The <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> class implements the <em>app:service</em> element of the <a href=\"http://bitworking.org/projects/atom/rfc5023.html\">Atom Publishing Protocol</a>.\n</p>\n<p>\n    Service documents represent server-defined groups of <xref href=\"Argotic.Publishing.AtomMemberResources\" data-throw-if-not-resolved=\"false\"></xref>, and are used to initialize the process of creating and editing resources.\n    These groups of <xref href=\"Argotic.Publishing.AtomMemberResources\" data-throw-if-not-resolved=\"false\"></xref> are called <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref>. <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref> have names,\n    but no IRIs, and no specified processing model. The service document can indicate which <xref href=\"Argotic.Publishing.AtomAcceptedMediaRange\" data-throw-if-not-resolved=\"false\"></xref>, and which\n<xref href=\"Argotic.Publishing.AtomCategoryDocument\" data-throw-if-not-resolved=\"false\"></xref>, a <xref href=\"Argotic.Publishing.AtomMemberResources\" data-throw-if-not-resolved=\"false\"></xref> will accept.\n</p>\n<p>\n    For authoring to commence, a client needs to discover the capabilities and locations of the available <xref href=\"Argotic.Publishing.AtomMemberResources\" data-throw-if-not-resolved=\"false\"></xref>.\n    Service documents are designed to support this discovery process. Service documents are identified with the <em>application/atomsvc+xml</em> media type.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class AtomServiceDocument : ISyndicationResource, IExtensibleSyndicationObject, IAtomCommonObjectAttributes
    content.vb: >-
      <Serializable>

      Public Class AtomServiceDocument

          Implements ISyndicationResource, IExtensibleSyndicationObject, IAtomCommonObjectAttributes
  seealso:
  - linkId: Argotic.Publishing.AtomCategoryDocument
    commentId: T:Argotic.Publishing.AtomCategoryDocument
  inheritance:
  - System.Object
  implements:
  - Argotic.Common.ISyndicationResource
  - Argotic.Extensions.IExtensibleSyndicationObject
  - Argotic.Syndication.IAtomCommonObjectAttributes
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Publishing.AtomServiceDocument.#ctor
  commentId: M:Argotic.Publishing.AtomServiceDocument.#ctor
  id: '#ctor'
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: AtomServiceDocument()
  nameWithType: AtomServiceDocument.AtomServiceDocument()
  fullName: Argotic.Publishing.AtomServiceDocument.AtomServiceDocument()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 81
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AtomServiceDocument()
    content.vb: Public Sub New
  overload: Argotic.Publishing.AtomServiceDocument.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.#ctor(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace})
  commentId: M:Argotic.Publishing.AtomServiceDocument.#ctor(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace})
  id: '#ctor(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace})'
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: AtomServiceDocument(Collection<AtomWorkspace>)
  nameWithType: AtomServiceDocument.AtomServiceDocument(Collection<AtomWorkspace>)
  fullName: Argotic.Publishing.AtomServiceDocument.AtomServiceDocument(System.Collections.ObjectModel.Collection<Argotic.Publishing.AtomWorkspace>)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 93
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public AtomServiceDocument(Collection<AtomWorkspace> workspaces)
    parameters:
    - id: workspaces
      type: System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace}
      description: "\nA <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref> objects that represent server-defined groups of <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref> objects associate with the document.\n"
    content.vb: Public Sub New(workspaces As Collection(Of AtomWorkspace))
  overload: Argotic.Publishing.AtomServiceDocument.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">workspaces</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">workspaces</code> collection does not contain at least one <xref href="Argotic.Publishing.AtomWorkspace" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: AtomServiceDocument.AtomServiceDocument(Collection(Of AtomWorkspace))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Publishing.AtomServiceDocument.AtomServiceDocument(System.Collections.ObjectModel.Collection(Of Argotic.Publishing.AtomWorkspace))
  name.vb: AtomServiceDocument(Collection(Of AtomWorkspace))
- uid: Argotic.Publishing.AtomServiceDocument.Loaded
  commentId: E:Argotic.Publishing.AtomServiceDocument.Loaded
  id: Loaded
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: AtomServiceDocument.Loaded
  fullName: Argotic.Publishing.AtomServiceDocument.Loaded
  type: Event
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Loaded
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 109
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nOccurs when the syndication resource state has been changed by a load operation.\n"
  example: []
  syntax:
    content: public event EventHandler<SyndicationResourceLoadedEventArgs> Loaded
    return:
      type: System.EventHandler{Argotic.Common.SyndicationResourceLoadedEventArgs}
    content.vb: Public Event Loaded As EventHandler(Of SyndicationResourceLoadedEventArgs)
  seealso:
  - linkId: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable)
    commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable)
  - linkId: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader)
    commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader)
  implements:
  - Argotic.Common.ISyndicationResource.Loaded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.MediaType
  commentId: P:Argotic.Publishing.AtomServiceDocument.MediaType
  id: MediaType
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: MediaType
  nameWithType: AtomServiceDocument.MediaType
  fullName: Argotic.Publishing.AtomServiceDocument.MediaType
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: MediaType
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 118
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets the IANA MIME media type identifier assigned to Atom service documents.\n"
  remarks: "\nSee <a href=\"http://www.iana.org/assignments/media-types\">http://www.iana.org/assignments/media-types</a> for a listing of the registered IANA MIME media types and sub-types.\n"
  example: []
  syntax:
    content: public static string MediaType { get; }
    parameters: []
    return:
      type: System.String
      description: A string that identifies the IANA MIME media type for Atom service documents.
    content.vb: Public Shared ReadOnly Property MediaType As String
  overload: Argotic.Publishing.AtomServiceDocument.MediaType*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Argotic.Publishing.AtomServiceDocument.BaseUri
  commentId: P:Argotic.Publishing.AtomServiceDocument.BaseUri
  id: BaseUri
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: AtomServiceDocument.BaseUri
  fullName: Argotic.Publishing.AtomServiceDocument.BaseUri
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: BaseUri
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 135
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the base URI other than the base URI of the document or external entity.\n"
  remarks: "\n<p>\n    The value of this property is interpreted as a URI Reference as defined in <a href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC 2396: Uniform Resource Identifiers</a>,\n    after processing according to <a href=\"http://www.w3.org/TR/xmlbase/#escaping\">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</p>\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents a base URI other than the base URI of the document or external entity. The default value is a <strong>null</strong> reference.
    content.vb: Public Property BaseUri As Uri
  overload: Argotic.Publishing.AtomServiceDocument.BaseUri*
  implements:
  - Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Extensions
  commentId: P:Argotic.Publishing.AtomServiceDocument.Extensions
  id: Extensions
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: AtomServiceDocument.Extensions
  fullName: Argotic.Publishing.AtomServiceDocument.Extensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Extensions
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 145
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the syndication extensions applied to this syndication entity.\n"
  remarks: "\nThis <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public IEnumerable<ISyndicationExtension> Extensions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects that represent syndication extensions applied to this syndication entity.
    content.vb: Public Property Extensions As IEnumerable(Of ISyndicationExtension)
  overload: Argotic.Publishing.AtomServiceDocument.Extensions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Format
  commentId: P:Argotic.Publishing.AtomServiceDocument.Format
  id: Format
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: AtomServiceDocument.Format
  fullName: Argotic.Publishing.AtomServiceDocument.Format
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Format
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 168
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets the <xref href=\"Argotic.Common.SyndicationContentFormat\" data-throw-if-not-resolved=\"false\"></xref> that this syndication resource implements.\n"
  example: []
  syntax:
    content: public SyndicationContentFormat Format { get; }
    parameters: []
    return:
      type: Argotic.Common.SyndicationContentFormat
      description: The <xref href="Argotic.Common.SyndicationContentFormat" data-throw-if-not-resolved="false"></xref> enumeration value that indicates the type of syndication format that this syndication resource implements.
    content.vb: Public ReadOnly Property Format As SyndicationContentFormat
  overload: Argotic.Publishing.AtomServiceDocument.Format*
  implements:
  - Argotic.Common.ISyndicationResource.Format
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Publishing.AtomServiceDocument.HasExtensions
  commentId: P:Argotic.Publishing.AtomServiceDocument.HasExtensions
  id: HasExtensions
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: HasExtensions
  nameWithType: AtomServiceDocument.HasExtensions
  fullName: Argotic.Publishing.AtomServiceDocument.HasExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: HasExtensions
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 174
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets a value indicating whether gets a value indicating if this syndication entity has one or more syndication extensions applied to it.\n"
  example: []
  syntax:
    content: public bool HasExtensions { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Publishing.AtomServiceDocument.Extensions" data-throw-if-not-resolved="false"></xref> collection for this entity contains one or more <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects, otherwise returns <strong>false</strong>.
    content.vb: Public ReadOnly Property HasExtensions As Boolean
  overload: Argotic.Publishing.AtomServiceDocument.HasExtensions*
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Publishing.AtomServiceDocument.Language
  commentId: P:Argotic.Publishing.AtomServiceDocument.Language
  id: Language
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: AtomServiceDocument.Language
  fullName: Argotic.Publishing.AtomServiceDocument.Language
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Language
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 191
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the natural or formal language in which the content is written.\n"
  remarks: "\n<p>\n    The value of this property is a language identifier as defined by <a href=\"http://www.ietf.org/rfc/rfc3066.txt\">RFC 3066: Tags for the Identification of Languages</a>, or its successor.\n</p>\n"
  example: []
  syntax:
    content: public CultureInfo Language { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> that represents the natural or formal language in which the content is written. The default value is a <strong>null</strong> reference.
    content.vb: Public Property Language As CultureInfo
  overload: Argotic.Publishing.AtomServiceDocument.Language*
  implements:
  - Argotic.Syndication.IAtomCommonObjectAttributes.Language
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Version
  commentId: P:Argotic.Publishing.AtomServiceDocument.Version
  id: Version
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: AtomServiceDocument.Version
  fullName: Argotic.Publishing.AtomServiceDocument.Version
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Version
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 197
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets the <xref href=\"Argotic.Publishing.AtomServiceDocument.Version\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"Argotic.Common.SyndicationContentFormat\" data-throw-if-not-resolved=\"false\"></xref> that this syndication resource conforms to.\n"
  example: []
  syntax:
    content: public Version Version { get; }
    parameters: []
    return:
      type: System.Version
      description: The <xref href="Argotic.Publishing.AtomServiceDocument.Version" data-throw-if-not-resolved="false"></xref> of the <xref href="Argotic.Common.SyndicationContentFormat" data-throw-if-not-resolved="false"></xref> that this syndication resource conforms to. The default value is <strong>2.0</strong>.
    content.vb: Public ReadOnly Property Version As Version
  overload: Argotic.Publishing.AtomServiceDocument.Version*
  implements:
  - Argotic.Common.ISyndicationResource.Version
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Publishing.AtomServiceDocument.Workspaces
  commentId: P:Argotic.Publishing.AtomServiceDocument.Workspaces
  id: Workspaces
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Workspaces
  nameWithType: AtomServiceDocument.Workspaces
  fullName: Argotic.Publishing.AtomServiceDocument.Workspaces
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Workspaces
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 208
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the workspaces associated with this document.\n"
  remarks: "\n<p>This <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n<p>The <xref href=\"Argotic.Publishing.AtomServiceDocument.Workspaces\" data-throw-if-not-resolved=\"false\"></xref> collection of a <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> <strong>must</strong> contain at least one <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public IEnumerable<AtomWorkspace> Workspaces { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Publishing.AtomWorkspace}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Publishing.AtomWorkspace" data-throw-if-not-resolved="false"></xref> objects that represent workspaces associated with this document.
    content.vb: Public Property Workspaces As IEnumerable(Of AtomWorkspace)
  overload: Argotic.Publishing.AtomServiceDocument.Workspaces*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Item(System.Int32)
  commentId: P:Argotic.Publishing.AtomServiceDocument.Item(System.Int32)
  id: Item(System.Int32)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: AtomServiceDocument.Item[Int32]
  fullName: Argotic.Publishing.AtomServiceDocument.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: this[]
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 269
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nGets or sets the <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.\n"
  example: []
  syntax:
    content: public AtomWorkspace this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the workspace to get or set.
    return:
      type: Argotic.Publishing.AtomWorkspace
      description: The <xref href="Argotic.Publishing.AtomWorkspace" data-throw-if-not-resolved="false"></xref> at the specified index.
    content.vb: Public Property Item(index As Integer) As AtomWorkspace
  overload: Argotic.Publishing.AtomServiceDocument.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">index</code> is less than zero.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">index</code> is equal to or greater than the count for <xref href="Argotic.Publishing.AtomServiceDocument.Workspaces" data-throw-if-not-resolved="false"></xref>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomServiceDocument.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Publishing.AtomServiceDocument.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Argotic.Publishing.AtomServiceDocument.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace},System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace})
  commentId: M:Argotic.Publishing.AtomServiceDocument.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace},System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace},System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace})
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<AtomWorkspace>, Collection<AtomWorkspace>)
  nameWithType: AtomServiceDocument.CompareSequence(Collection<AtomWorkspace>, Collection<AtomWorkspace>)
  fullName: Argotic.Publishing.AtomServiceDocument.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Publishing.AtomWorkspace>, System.Collections.ObjectModel.Collection<Argotic.Publishing.AtomWorkspace>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 302
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<AtomWorkspace> source, Collection<AtomWorkspace> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of AtomWorkspace), target As Collection(Of AtomWorkspace)) As Integer
  overload: Argotic.Publishing.AtomServiceDocument.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomServiceDocument.CompareSequence(Collection(Of AtomWorkspace), Collection(Of AtomWorkspace))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Publishing.AtomServiceDocument.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Publishing.AtomWorkspace), System.Collections.ObjectModel.Collection(Of Argotic.Publishing.AtomWorkspace))
  name.vb: CompareSequence(Collection(Of AtomWorkspace), Collection(Of AtomWorkspace))
- uid: Argotic.Publishing.AtomServiceDocument.Create(System.Uri)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Create(System.Uri)
  id: Create(System.Uri)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Create(Uri)
  nameWithType: AtomServiceDocument.Create(Uri)
  fullName: Argotic.Publishing.AtomServiceDocument.Create(System.Uri)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 338
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> is created using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static AtomServiceDocument Create(Uri source)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    return:
      type: Argotic.Publishing.AtomServiceDocument
      description: An <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri) As AtomServiceDocument
  overload: Argotic.Publishing.AtomServiceDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomServiceDocument.Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  id: Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, SyndicationResourceLoadSettings)
  nameWithType: AtomServiceDocument.Create(Uri, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Create(System.Uri, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 351
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AtomServiceDocument Create(Uri source, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    return:
      type: Argotic.Publishing.AtomServiceDocument
      description: An <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, settings As SyndicationResourceLoadSettings) As AtomServiceDocument
  overload: Argotic.Publishing.AtomServiceDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomServiceDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  id: Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, ICredentials, IWebProxy)
  nameWithType: AtomServiceDocument.Create(Uri, ICredentials, IWebProxy)
  fullName: Argotic.Publishing.AtomServiceDocument.Create(System.Uri, System.Net.ICredentials, System.Net.IWebProxy)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 372
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> is created using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static AtomServiceDocument Create(Uri source, ICredentials credentials, IWebProxy proxy)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    return:
      type: Argotic.Publishing.AtomServiceDocument
      description: An <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, credentials As ICredentials, proxy As IWebProxy) As AtomServiceDocument
  overload: Argotic.Publishing.AtomServiceDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomServiceDocument.Create(System.Uri,Argotic.Common.WebRequestOptions)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Create(System.Uri,Argotic.Common.WebRequestOptions)
  id: Create(System.Uri,Argotic.Common.WebRequestOptions)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, WebRequestOptions)
  nameWithType: AtomServiceDocument.Create(Uri, WebRequestOptions)
  fullName: Argotic.Publishing.AtomServiceDocument.Create(System.Uri, Argotic.Common.WebRequestOptions)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 388
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> is created using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static AtomServiceDocument Create(Uri source, WebRequestOptions options)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    return:
      type: Argotic.Publishing.AtomServiceDocument
      description: An <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, options As WebRequestOptions) As AtomServiceDocument
  overload: Argotic.Publishing.AtomServiceDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomServiceDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  id: Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  nameWithType: AtomServiceDocument.Create(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Create(System.Uri, System.Net.ICredentials, System.Net.IWebProxy, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 407
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AtomServiceDocument Create(Uri source, ICredentials credentials, IWebProxy proxy, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    return:
      type: Argotic.Publishing.AtomServiceDocument
      description: An <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, credentials As ICredentials, proxy As IWebProxy, settings As SyndicationResourceLoadSettings) As AtomServiceDocument
  overload: Argotic.Publishing.AtomServiceDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomServiceDocument.Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  id: Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Create(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  nameWithType: AtomServiceDocument.Create(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Create(System.Uri, Argotic.Common.WebRequestOptions, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 425
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCreates a new <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AtomServiceDocument Create(Uri source, WebRequestOptions options, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    return:
      type: Argotic.Publishing.AtomServiceDocument
      description: An <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, options As WebRequestOptions, settings As SyndicationResourceLoadSettings) As AtomServiceDocument
  overload: Argotic.Publishing.AtomServiceDocument.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Publishing.AtomServiceDocument.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Publishing.AtomServiceDocument.AddExtension(Argotic.Extensions.ISyndicationExtension)
  id: AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: AddExtension(ISyndicationExtension)
  nameWithType: AtomServiceDocument.AddExtension(ISyndicationExtension)
  fullName: Argotic.Publishing.AtomServiceDocument.AddExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddExtension
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 445
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nAdds the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> to the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Publishing.AtomServiceDocument.AddExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.AddWorkspace(Argotic.Publishing.AtomWorkspace)
  commentId: M:Argotic.Publishing.AtomServiceDocument.AddWorkspace(Argotic.Publishing.AtomWorkspace)
  id: AddWorkspace(Argotic.Publishing.AtomWorkspace)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: AddWorkspace(AtomWorkspace)
  nameWithType: AtomServiceDocument.AddWorkspace(AtomWorkspace)
  fullName: Argotic.Publishing.AtomServiceDocument.AddWorkspace(Argotic.Publishing.AtomWorkspace)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddWorkspace
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 463
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nAdds the supplied <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref> to the document&apos;s <xref href=\"Argotic.Publishing.AtomServiceDocument.Workspaces\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddWorkspace(AtomWorkspace workspace)
    parameters:
    - id: workspace
      type: Argotic.Publishing.AtomWorkspace
      description: The <xref href="Argotic.Publishing.AtomWorkspace" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Publishing.AtomWorkspace" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Publishing.AtomServiceDocument.Workspaces" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddWorkspace(workspace As AtomWorkspace) As Boolean
  overload: Argotic.Publishing.AtomServiceDocument.AddWorkspace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">workspace</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.CreateNavigator
  commentId: M:Argotic.Publishing.AtomServiceDocument.CreateNavigator
  id: CreateNavigator
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: CreateNavigator()
  nameWithType: AtomServiceDocument.CreateNavigator()
  fullName: Argotic.Publishing.AtomServiceDocument.CreateNavigator()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CreateNavigator
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 483
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nInitializes a read-only <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object for navigating through nodes in this <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> is positioned on the root element of the <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref>.\nIf there is no root element, the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> is positioned on the first element in the XML representation of the <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public XPathNavigator CreateNavigator()
    return:
      type: System.Xml.XPath.XPathNavigator
      description: A read-only <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Function CreateNavigator As XPathNavigator
  overload: Argotic.Publishing.AtomServiceDocument.CreateNavigator*
  implements:
  - Argotic.Common.ISyndicationResource.CreateNavigator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Publishing.AtomServiceDocument.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  id: FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: AtomServiceDocument.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Publishing.AtomServiceDocument.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: FindExtension
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 518
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSearches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <xref href=\"Argotic.Publishing.AtomServiceDocument.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nThe <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> is a delegate to a method that returns <strong>true</strong> if the object passed to it matches the conditions defined in the delegate.\nThe elements of the current <xref href=\"Argotic.Publishing.AtomServiceDocument.Extensions\" data-throw-if-not-resolved=\"false\"></xref> are individually passed to the <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> delegate, moving forward in\nthe <xref href=\"Argotic.Publishing.AtomServiceDocument.Extensions\" data-throw-if-not-resolved=\"false\"></xref>, starting with the first element and ending with the last element. Processing is stopped when a match is found.\n"
  example: []
  syntax:
    content: public ISyndicationExtension FindExtension(Predicate<ISyndicationExtension> match)
    parameters:
    - id: match
      type: System.Predicate{Argotic.Extensions.ISyndicationExtension}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to search for.
    return:
      type: Argotic.Extensions.ISyndicationExtension
      description: "\nThe first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function FindExtension(match As Predicate(Of ISyndicationExtension)) As ISyndicationExtension
  overload: Argotic.Publishing.AtomServiceDocument.FindExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">match</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  nameWithType.vb: AtomServiceDocument.FindExtension(Predicate(Of ISyndicationExtension))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Publishing.AtomServiceDocument.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
- uid: Argotic.Publishing.AtomServiceDocument.FindWorkspace(System.Predicate{Argotic.Publishing.AtomWorkspace})
  commentId: M:Argotic.Publishing.AtomServiceDocument.FindWorkspace(System.Predicate{Argotic.Publishing.AtomWorkspace})
  id: FindWorkspace(System.Predicate{Argotic.Publishing.AtomWorkspace})
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: FindWorkspace(Predicate<AtomWorkspace>)
  nameWithType: AtomServiceDocument.FindWorkspace(Predicate<AtomWorkspace>)
  fullName: Argotic.Publishing.AtomServiceDocument.FindWorkspace(System.Predicate<Argotic.Publishing.AtomWorkspace>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: FindWorkspace
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 539
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSearches for a workspace that matches the conditions defined by the specified predicate, and returns the first occurrence within the <xref href=\"Argotic.Publishing.AtomServiceDocument.Workspaces\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nThe <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> is a delegate to a method that returns <strong>true</strong> if the object passed to it matches the conditions defined in the delegate.\nThe elements of the current <xref href=\"Argotic.Publishing.AtomServiceDocument.Workspaces\" data-throw-if-not-resolved=\"false\"></xref> are individually passed to the <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> delegate, moving forward in\nthe <xref href=\"Argotic.Publishing.AtomServiceDocument.Workspaces\" data-throw-if-not-resolved=\"false\"></xref>, starting with the first element and ending with the last element. Processing is stopped when a match is found.\n"
  example: []
  syntax:
    content: public AtomWorkspace FindWorkspace(Predicate<AtomWorkspace> match)
    parameters:
    - id: match
      type: System.Predicate{Argotic.Publishing.AtomWorkspace}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the <xref href="Argotic.Publishing.AtomWorkspace" data-throw-if-not-resolved="false"></xref> to search for.
    return:
      type: Argotic.Publishing.AtomWorkspace
      description: "\nThe first workspace that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function FindWorkspace(match As Predicate(Of AtomWorkspace)) As AtomWorkspace
  overload: Argotic.Publishing.AtomServiceDocument.FindWorkspace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">match</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomServiceDocument.FindWorkspace(Predicate(Of AtomWorkspace))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Publishing.AtomServiceDocument.FindWorkspace(System.Predicate(Of Argotic.Publishing.AtomWorkspace))
  name.vb: FindWorkspace(Predicate(Of AtomWorkspace))
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(IXPathNavigable)
  nameWithType: AtomServiceDocument.Load(IXPathNavigable)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 557
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XPath.IXPathNavigable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(IXPathNavigable source)
    parameters:
    - id: source
      type: System.Xml.XPath.IXPathNavigable
      description: The <strong>IXPathNavigable</strong> used to load the syndication resource.
    content.vb: Public Sub Load(source As IXPathNavigable)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(IXPathNavigable, SyndicationResourceLoadSettings)
  nameWithType: AtomServiceDocument.Load(IXPathNavigable, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 573
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XPath.IXPathNavigable\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(IXPathNavigable source, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Xml.XPath.IXPathNavigable
      description: The <strong>IXPathNavigable</strong> used to load the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(source As IXPathNavigable, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.IO.Stream)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(Stream)
  nameWithType: AtomServiceDocument.Load(Stream)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 596
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> used to load the syndication resource.
    content.vb: Public Sub Load(stream As Stream)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(Stream, SyndicationResourceLoadSettings)
  nameWithType: AtomServiceDocument.Load(Stream, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.IO.Stream, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 612
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(Stream stream, SyndicationResourceLoadSettings settings)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> used to load the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(stream As Stream, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(XmlReader)
  nameWithType: AtomServiceDocument.Load(XmlReader)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 636
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <strong>XmlReader</strong> used to load the syndication resource.
    content.vb: Public Sub Load(reader As XmlReader)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(XmlReader, SyndicationResourceLoadSettings)
  nameWithType: AtomServiceDocument.Load(XmlReader, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 652
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(XmlReader reader, SyndicationResourceLoadSettings settings)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <strong>XmlReader</strong> used to load the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(reader As XmlReader, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  id: Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(Uri, ICredentials, IWebProxy)
  nameWithType: AtomServiceDocument.Load(Uri, ICredentials, IWebProxy)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 693
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the supplied <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n             If <code data-dev-comment-type=\"paramref\" class=\"paramref\">credentials</code> is <strong>null</strong>, request is made using the default application credentials.\n</li><li>\n    If <code data-dev-comment-type=\"paramref\" class=\"paramref\">proxy</code> is <strong>null</strong>, request is made using the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> default proxy settings.\n</li><li>\n    After the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, ICredentials credentials, IWebProxy proxy)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    content.vb: Public Sub Load(source As Uri, credentials As ICredentials, proxy As IWebProxy)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Uri,Argotic.Common.WebRequestOptions)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Uri,Argotic.Common.WebRequestOptions)
  id: Load(System.Uri,Argotic.Common.WebRequestOptions)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(Uri, WebRequestOptions)
  nameWithType: AtomServiceDocument.Load(Uri, WebRequestOptions)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.Uri, Argotic.Common.WebRequestOptions)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 717
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the supplied <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n            After the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, WebRequestOptions options)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    content.vb: Public Sub Load(source As Uri, options As WebRequestOptions)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  nameWithType: AtomServiceDocument.Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 764
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the supplied <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n             If <code data-dev-comment-type=\"paramref\" class=\"paramref\">credentials</code> is <strong>null</strong>, request is made using the default application credentials.\n</li><li>\n    If <code data-dev-comment-type=\"paramref\" class=\"paramref\">proxy</code> is <strong>null</strong>, request is made using the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> default proxy settings.\n</li><li>\n    If <code data-dev-comment-type=\"paramref\" class=\"paramref\">settings</code> has a <xref href=\"Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref>\n    the character encoding of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> will be attempt to be determined automatically, otherwise the specified character encoding will be used.\n    If automatic detection fails, a character encoding of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref> is used by default.\n</li><li>\n    After the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, ICredentials credentials, IWebProxy proxy, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(source As Uri, credentials As ICredentials, proxy As IWebProxy, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  nameWithType: AtomServiceDocument.Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Load(System.Uri, Argotic.Common.WebRequestOptions, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 800
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads the syndication resource from the supplied <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n            If <code data-dev-comment-type=\"paramref\" class=\"paramref\">settings</code> has a <xref href=\"Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref>\n            the character encoding of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> will be attempt to be determined automatically, otherwise the specified character encoding will be used.\n            If automatic detection fails, a character encoding of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref> is used by default.\n</li><li>\n    After the load operation has successfully completed, the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, WebRequestOptions options, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(source As Uri, options As WebRequestOptions, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Publishing.AtomServiceDocument.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the document remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,System.Object)
  commentId: M:Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,System.Object)
  id: LoadAsync(System.Uri,System.Object)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, Object)
  nameWithType: AtomServiceDocument.LoadAsync(Uri, Object)
  fullName: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 842
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads this <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>The <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> is loaded using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>, you must wait for the load operation to complete before\n    attempting to load the syndication resource using the <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, userToken As Object)
  overload: Argotic.Publishing.AtomServiceDocument.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  commentId: M:Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  id: LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  nameWithType: AtomServiceDocument.LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  fullName: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 866
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads this <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>, you must wait for the load operation to complete before\n    attempting to load the syndication resource using the <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, SyndicationResourceLoadSettings settings, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, settings As SyndicationResourceLoadSettings, userToken As Object)
  overload: Argotic.Publishing.AtomServiceDocument.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  commentId: M:Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  id: LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  nameWithType: AtomServiceDocument.LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  fullName: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Net.ICredentials, System.Net.IWebProxy, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 896
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads this <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>,\n    you must wait for the load operation to complete before attempting to load the syndication resource using the <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, SyndicationResourceLoadSettings settings, ICredentials credentials, IWebProxy proxy, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, settings As SyndicationResourceLoadSettings, credentials As ICredentials, proxy As IWebProxy, userToken As Object)
  overload: Argotic.Publishing.AtomServiceDocument.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  commentId: M:Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  id: LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  nameWithType: AtomServiceDocument.LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  fullName: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.WebRequestOptions, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 926
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nLoads this <xref href=\"Argotic.Publishing.AtomServiceDocument\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>,\n    you must wait for the load operation to complete before attempting to load the syndication resource using the <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, SyndicationResourceLoadSettings settings, WebRequestOptions options, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, settings As SyndicationResourceLoadSettings, options As WebRequestOptions, userToken As Object)
  overload: Argotic.Publishing.AtomServiceDocument.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the document remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel
  commentId: M:Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel
  id: LoadAsyncCancel
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: LoadAsyncCancel()
  nameWithType: AtomServiceDocument.LoadAsyncCancel()
  fullName: Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsyncCancel
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 972
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nCancels an asynchronous operation to load this syndication resource.\n"
  remarks: "\nUse the LoadAsyncCancel method to cancel a pending <xref href=\"Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation.\nIf there is a load operation in progress, this method releases resources used to execute the load operation.\nIf there is no load operation pending, this method does nothing.\n"
  example: []
  syntax:
    content: public void LoadAsyncCancel()
    content.vb: Public Sub LoadAsyncCancel
  overload: Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel*
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsyncCancel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Publishing.AtomServiceDocument.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  id: RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: AtomServiceDocument.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Publishing.AtomServiceDocument.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveExtension
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 991
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nRemoves the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> from the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Publishing.AtomServiceDocument.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection of the current instance does not contain the specified <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Publishing.AtomServiceDocument.RemoveExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.RemoveWorkspace(Argotic.Publishing.AtomWorkspace)
  commentId: M:Argotic.Publishing.AtomServiceDocument.RemoveWorkspace(Argotic.Publishing.AtomWorkspace)
  id: RemoveWorkspace(Argotic.Publishing.AtomWorkspace)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: RemoveWorkspace(AtomWorkspace)
  nameWithType: AtomServiceDocument.RemoveWorkspace(AtomWorkspace)
  fullName: Argotic.Publishing.AtomServiceDocument.RemoveWorkspace(Argotic.Publishing.AtomWorkspace)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveWorkspace
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 1015
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nRemoves the supplied <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref> from the document&apos;s <xref href=\"Argotic.Publishing.AtomServiceDocument.Workspaces\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Publishing.AtomServiceDocument.Workspaces\" data-throw-if-not-resolved=\"false\"></xref> collection of the document does not contain the specified <xref href=\"Argotic.Publishing.AtomWorkspace\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveWorkspace(AtomWorkspace workspace)
    parameters:
    - id: workspace
      type: Argotic.Publishing.AtomWorkspace
      description: The <xref href="Argotic.Publishing.AtomWorkspace" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Publishing.AtomWorkspace" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Publishing.AtomServiceDocument.Workspaces" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveWorkspace(workspace As AtomWorkspace) As Boolean
  overload: Argotic.Publishing.AtomServiceDocument.RemoveWorkspace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">workspace</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Save(System.IO.Stream)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Save(Stream)
  nameWithType: AtomServiceDocument.Save(Stream)
  fullName: Argotic.Publishing.AtomServiceDocument.Save(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 1036
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> to which you want to save the syndication resource.
    content.vb: Public Sub Save(stream As Stream)
  overload: Argotic.Publishing.AtomServiceDocument.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  id: Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Save(Stream, SyndicationResourceSaveSettings)
  nameWithType: AtomServiceDocument.Save(Stream, SyndicationResourceSaveSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Save(System.IO.Stream, Argotic.Common.SyndicationResourceSaveSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 1048
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(Stream stream, SyndicationResourceSaveSettings settings)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> to which you want to save the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: The <xref href="Argotic.Common.SyndicationResourceSaveSettings" data-throw-if-not-resolved="false"></xref> object used to configure the persistence of the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Save(stream As Stream, settings As SyndicationResourceSaveSettings)
  overload: Argotic.Publishing.AtomServiceDocument.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Save(System.Xml.XmlWriter)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Save(System.Xml.XmlWriter)
  id: Save(System.Xml.XmlWriter)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Save(XmlWriter)
  nameWithType: AtomServiceDocument.Save(XmlWriter)
  fullName: Argotic.Publishing.AtomServiceDocument.Save(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 1074
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <strong>XmlWriter</strong> to which you want to save the syndication resource.
    content.vb: Public Sub Save(writer As XmlWriter)
  overload: Argotic.Publishing.AtomServiceDocument.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  id: Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: Save(XmlWriter, SyndicationResourceSaveSettings)
  nameWithType: AtomServiceDocument.Save(XmlWriter, SyndicationResourceSaveSettings)
  fullName: Argotic.Publishing.AtomServiceDocument.Save(System.Xml.XmlWriter, Argotic.Common.SyndicationResourceSaveSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 1089
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceSaveSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(XmlWriter writer, SyndicationResourceSaveSettings settings)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <strong>XmlWriter</strong> to which you want to save the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: The <xref href="Argotic.Common.SyndicationResourceSaveSettings" data-throw-if-not-resolved="false"></xref> object used to configure the persistence of the <xref href="Argotic.Publishing.AtomServiceDocument" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Sub Save(writer As XmlWriter, settings As SyndicationResourceSaveSettings)
  overload: Argotic.Publishing.AtomServiceDocument.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">settings</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Publishing.AtomServiceDocument.OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  commentId: M:Argotic.Publishing.AtomServiceDocument.OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  id: OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  parent: Argotic.Publishing.AtomServiceDocument
  langs:
  - csharp
  - vb
  name: OnDocumentLoaded(SyndicationResourceLoadedEventArgs)
  nameWithType: AtomServiceDocument.OnDocumentLoaded(SyndicationResourceLoadedEventArgs)
  fullName: Argotic.Publishing.AtomServiceDocument.OnDocumentLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: OnDocumentLoaded
    path: ../Solutions/Argotic.Core/Publishing/AtomServiceDocument.cs
    startLine: 1124
  assemblies:
  - Argotic.Core
  namespace: Argotic.Publishing
  summary: "\nRaises the <xref href=\"Argotic.Publishing.AtomServiceDocument.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnDocumentLoaded(SyndicationResourceLoadedEventArgs e)
    parameters:
    - id: e
      type: Argotic.Common.SyndicationResourceLoadedEventArgs
      description: A <xref href="Argotic.Common.SyndicationResourceLoadedEventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data.
    content.vb: Protected Overridable Sub OnDocumentLoaded(e As SyndicationResourceLoadedEventArgs)
  overload: Argotic.Publishing.AtomServiceDocument.OnDocumentLoaded*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Argotic.Publishing.AtomWorkspace
  commentId: T:Argotic.Publishing.AtomWorkspace
  parent: Argotic.Publishing
  name: AtomWorkspace
  nameWithType: AtomWorkspace
  fullName: Argotic.Publishing.AtomWorkspace
- uid: Argotic.Publishing.AtomServiceDocument
  commentId: T:Argotic.Publishing.AtomServiceDocument
  parent: Argotic.Publishing
  name: AtomServiceDocument
  nameWithType: AtomServiceDocument
  fullName: Argotic.Publishing.AtomServiceDocument
- uid: Argotic.Publishing.AtomMemberResources
  commentId: T:Argotic.Publishing.AtomMemberResources
  parent: Argotic.Publishing
  name: AtomMemberResources
  nameWithType: AtomMemberResources
  fullName: Argotic.Publishing.AtomMemberResources
- uid: Argotic.Publishing.AtomAcceptedMediaRange
  commentId: T:Argotic.Publishing.AtomAcceptedMediaRange
  parent: Argotic.Publishing
  name: AtomAcceptedMediaRange
  nameWithType: AtomAcceptedMediaRange
  fullName: Argotic.Publishing.AtomAcceptedMediaRange
- uid: Argotic.Publishing.AtomCategoryDocument
  commentId: T:Argotic.Publishing.AtomCategoryDocument
  parent: Argotic.Publishing
  name: AtomCategoryDocument
  nameWithType: AtomCategoryDocument
  fullName: Argotic.Publishing.AtomCategoryDocument
- uid: Argotic.Publishing
  commentId: N:Argotic.Publishing
  name: Argotic.Publishing
  nameWithType: Argotic.Publishing
  fullName: Argotic.Publishing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Argotic.Common.ISyndicationResource
  commentId: T:Argotic.Common.ISyndicationResource
  parent: Argotic.Common
  name: ISyndicationResource
  nameWithType: ISyndicationResource
  fullName: Argotic.Common.ISyndicationResource
- uid: Argotic.Extensions.IExtensibleSyndicationObject
  commentId: T:Argotic.Extensions.IExtensibleSyndicationObject
  parent: Argotic.Extensions
  name: IExtensibleSyndicationObject
  nameWithType: IExtensibleSyndicationObject
  fullName: Argotic.Extensions.IExtensibleSyndicationObject
- uid: Argotic.Syndication.IAtomCommonObjectAttributes
  commentId: T:Argotic.Syndication.IAtomCommonObjectAttributes
  parent: Argotic.Syndication
  name: IAtomCommonObjectAttributes
  nameWithType: IAtomCommonObjectAttributes
  fullName: Argotic.Syndication.IAtomCommonObjectAttributes
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Common
  commentId: N:Argotic.Common
  name: Argotic.Common
  nameWithType: Argotic.Common
  fullName: Argotic.Common
- uid: Argotic.Extensions
  commentId: N:Argotic.Extensions
  name: Argotic.Extensions
  nameWithType: Argotic.Extensions
  fullName: Argotic.Extensions
- uid: Argotic.Syndication
  commentId: N:Argotic.Syndication
  name: Argotic.Syndication
  nameWithType: Argotic.Syndication
  fullName: Argotic.Syndication
- uid: Argotic.Publishing.AtomServiceDocument.#ctor*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.#ctor
  name: AtomServiceDocument
  nameWithType: AtomServiceDocument.AtomServiceDocument
  fullName: Argotic.Publishing.AtomServiceDocument.AtomServiceDocument
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Publishing.AtomWorkspace}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<AtomWorkspace>
  nameWithType: Collection<AtomWorkspace>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Publishing.AtomWorkspace>
  nameWithType.vb: Collection(Of AtomWorkspace)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Publishing.AtomWorkspace)
  name.vb: Collection(Of AtomWorkspace)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Publishing.AtomWorkspace
    name: AtomWorkspace
    nameWithType: AtomWorkspace
    fullName: Argotic.Publishing.AtomWorkspace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Publishing.AtomWorkspace
    name: AtomWorkspace
    nameWithType: AtomWorkspace
    fullName: Argotic.Publishing.AtomWorkspace
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XPath.IXPathNavigable)
  isExternal: true
- uid: Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Publishing.AtomServiceDocument.Load(System.Xml.XmlReader)
  isExternal: true
- uid: Argotic.Common.ISyndicationResource.Loaded
  commentId: E:Argotic.Common.ISyndicationResource.Loaded
  parent: Argotic.Common.ISyndicationResource
  name: Loaded
  nameWithType: ISyndicationResource.Loaded
  fullName: Argotic.Common.ISyndicationResource.Loaded
- uid: System.EventHandler{Argotic.Common.SyndicationResourceLoadedEventArgs}
  commentId: T:System.EventHandler{Argotic.Common.SyndicationResourceLoadedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SyndicationResourceLoadedEventArgs>
  nameWithType: EventHandler<SyndicationResourceLoadedEventArgs>
  fullName: System.EventHandler<Argotic.Common.SyndicationResourceLoadedEventArgs>
  nameWithType.vb: EventHandler(Of SyndicationResourceLoadedEventArgs)
  fullName.vb: System.EventHandler(Of Argotic.Common.SyndicationResourceLoadedEventArgs)
  name.vb: EventHandler(Of SyndicationResourceLoadedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Common.SyndicationResourceLoadedEventArgs
    name: SyndicationResourceLoadedEventArgs
    nameWithType: SyndicationResourceLoadedEventArgs
    fullName: Argotic.Common.SyndicationResourceLoadedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Common.SyndicationResourceLoadedEventArgs
    name: SyndicationResourceLoadedEventArgs
    nameWithType: SyndicationResourceLoadedEventArgs
    fullName: Argotic.Common.SyndicationResourceLoadedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.MediaType*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.MediaType
  name: MediaType
  nameWithType: AtomServiceDocument.MediaType
  fullName: Argotic.Publishing.AtomServiceDocument.MediaType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Argotic.Publishing.AtomServiceDocument.BaseUri*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.BaseUri
  name: BaseUri
  nameWithType: AtomServiceDocument.BaseUri
  fullName: Argotic.Publishing.AtomServiceDocument.BaseUri
- uid: Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
  commentId: P:Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
  parent: Argotic.Syndication.IAtomCommonObjectAttributes
  name: BaseUri
  nameWithType: IAtomCommonObjectAttributes.BaseUri
  fullName: Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.ISyndicationExtension
  commentId: T:Argotic.Extensions.ISyndicationExtension
  parent: Argotic.Extensions
  name: ISyndicationExtension
  nameWithType: ISyndicationExtension
  fullName: Argotic.Extensions.ISyndicationExtension
- uid: Argotic.Publishing.AtomServiceDocument.Extensions*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.Extensions
  name: Extensions
  nameWithType: AtomServiceDocument.Extensions
  fullName: Argotic.Publishing.AtomServiceDocument.Extensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: Extensions
  nameWithType: IExtensibleSyndicationObject.Extensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
- uid: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISyndicationExtension>
  nameWithType: IEnumerable<ISyndicationExtension>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: IEnumerable(Of ISyndicationExtension)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: IEnumerable(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Argotic.Common.SyndicationContentFormat
  commentId: T:Argotic.Common.SyndicationContentFormat
  parent: Argotic.Common
  name: SyndicationContentFormat
  nameWithType: SyndicationContentFormat
  fullName: Argotic.Common.SyndicationContentFormat
- uid: Argotic.Publishing.AtomServiceDocument.Format*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.Format
  name: Format
  nameWithType: AtomServiceDocument.Format
  fullName: Argotic.Publishing.AtomServiceDocument.Format
- uid: Argotic.Common.ISyndicationResource.Format
  commentId: P:Argotic.Common.ISyndicationResource.Format
  parent: Argotic.Common.ISyndicationResource
  name: Format
  nameWithType: ISyndicationResource.Format
  fullName: Argotic.Common.ISyndicationResource.Format
- uid: Argotic.Publishing.AtomServiceDocument.Extensions
  commentId: P:Argotic.Publishing.AtomServiceDocument.Extensions
  isExternal: true
- uid: Argotic.Publishing.AtomServiceDocument.HasExtensions*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.HasExtensions
  name: HasExtensions
  nameWithType: AtomServiceDocument.HasExtensions
  fullName: Argotic.Publishing.AtomServiceDocument.HasExtensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: HasExtensions
  nameWithType: IExtensibleSyndicationObject.HasExtensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Argotic.Publishing.AtomServiceDocument.Language*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.Language
  name: Language
  nameWithType: AtomServiceDocument.Language
  fullName: Argotic.Publishing.AtomServiceDocument.Language
- uid: Argotic.Syndication.IAtomCommonObjectAttributes.Language
  commentId: P:Argotic.Syndication.IAtomCommonObjectAttributes.Language
  parent: Argotic.Syndication.IAtomCommonObjectAttributes
  name: Language
  nameWithType: IAtomCommonObjectAttributes.Language
  fullName: Argotic.Syndication.IAtomCommonObjectAttributes.Language
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Argotic.Publishing.AtomServiceDocument.Version
  commentId: P:Argotic.Publishing.AtomServiceDocument.Version
  isExternal: true
- uid: Argotic.Publishing.AtomServiceDocument.Version*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.Version
  name: Version
  nameWithType: AtomServiceDocument.Version
  fullName: Argotic.Publishing.AtomServiceDocument.Version
- uid: Argotic.Common.ISyndicationResource.Version
  commentId: P:Argotic.Common.ISyndicationResource.Version
  parent: Argotic.Common.ISyndicationResource
  name: Version
  nameWithType: ISyndicationResource.Version
  fullName: Argotic.Common.ISyndicationResource.Version
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Argotic.Publishing.AtomServiceDocument.Workspaces
  commentId: P:Argotic.Publishing.AtomServiceDocument.Workspaces
  isExternal: true
- uid: Argotic.Publishing.AtomServiceDocument.Workspaces*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.Workspaces
  name: Workspaces
  nameWithType: AtomServiceDocument.Workspaces
  fullName: Argotic.Publishing.AtomServiceDocument.Workspaces
- uid: System.Collections.Generic.IEnumerable{Argotic.Publishing.AtomWorkspace}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Publishing.AtomWorkspace}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AtomWorkspace>
  nameWithType: IEnumerable<AtomWorkspace>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Publishing.AtomWorkspace>
  nameWithType.vb: IEnumerable(Of AtomWorkspace)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Publishing.AtomWorkspace)
  name.vb: IEnumerable(Of AtomWorkspace)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Publishing.AtomWorkspace
    name: AtomWorkspace
    nameWithType: AtomWorkspace
    fullName: Argotic.Publishing.AtomWorkspace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Publishing.AtomWorkspace
    name: AtomWorkspace
    nameWithType: AtomWorkspace
    fullName: Argotic.Publishing.AtomWorkspace
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.Item*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.Item
  name: Item
  nameWithType: AtomServiceDocument.Item
  fullName: Argotic.Publishing.AtomServiceDocument.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Argotic.Publishing.AtomServiceDocument.CompareSequence*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.CompareSequence
  name: CompareSequence
  nameWithType: AtomServiceDocument.CompareSequence
  fullName: Argotic.Publishing.AtomServiceDocument.CompareSequence
- uid: Argotic.Common.SyndicationResourceLoadSettings
  commentId: T:Argotic.Common.SyndicationResourceLoadSettings
  parent: Argotic.Common
  name: SyndicationResourceLoadSettings
  nameWithType: SyndicationResourceLoadSettings
  fullName: Argotic.Common.SyndicationResourceLoadSettings
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
- uid: Argotic.Publishing.AtomServiceDocument.Create*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.Create
  name: Create
  nameWithType: AtomServiceDocument.Create
  fullName: Argotic.Publishing.AtomServiceDocument.Create
- uid: System.Net.ICredentials
  commentId: T:System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.IWebProxy
  commentId: T:System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Argotic.Common.WebRequestOptions
  commentId: T:Argotic.Common.WebRequestOptions
  parent: Argotic.Common
  name: WebRequestOptions
  nameWithType: WebRequestOptions
  fullName: Argotic.Common.WebRequestOptions
- uid: Argotic.Publishing.AtomServiceDocument.AddExtension*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.AddExtension
  name: AddExtension
  nameWithType: AtomServiceDocument.AddExtension
  fullName: Argotic.Publishing.AtomServiceDocument.AddExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: AddExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.AddExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.AddWorkspace*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.AddWorkspace
  name: AddWorkspace
  nameWithType: AtomServiceDocument.AddWorkspace
  fullName: Argotic.Publishing.AtomServiceDocument.AddWorkspace
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Publishing.AtomServiceDocument.CreateNavigator*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.CreateNavigator
  name: CreateNavigator
  nameWithType: AtomServiceDocument.CreateNavigator
  fullName: Argotic.Publishing.AtomServiceDocument.CreateNavigator
- uid: Argotic.Common.ISyndicationResource.CreateNavigator
  commentId: M:Argotic.Common.ISyndicationResource.CreateNavigator
  parent: Argotic.Common.ISyndicationResource
  name: CreateNavigator()
  nameWithType: ISyndicationResource.CreateNavigator()
  fullName: Argotic.Common.ISyndicationResource.CreateNavigator()
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.CreateNavigator
    name: CreateNavigator
    nameWithType: ISyndicationResource.CreateNavigator
    fullName: Argotic.Common.ISyndicationResource.CreateNavigator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.CreateNavigator
    name: CreateNavigator
    nameWithType: ISyndicationResource.CreateNavigator
    fullName: Argotic.Common.ISyndicationResource.CreateNavigator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.FindExtension*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.FindExtension
  name: FindExtension
  nameWithType: AtomServiceDocument.FindExtension
  fullName: Argotic.Publishing.AtomServiceDocument.FindExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  isExternal: true
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: IExtensibleSyndicationObject.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  nameWithType.vb: IExtensibleSyndicationObject.FindExtension(Predicate(Of ISyndicationExtension))
  fullName.vb: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Predicate{Argotic.Extensions.ISyndicationExtension}
  parent: System
  definition: System.Predicate`1
  name: Predicate<ISyndicationExtension>
  nameWithType: Predicate<ISyndicationExtension>
  fullName: System.Predicate<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: Predicate(Of ISyndicationExtension)
  fullName.vb: System.Predicate(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: Predicate(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.FindWorkspace*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.FindWorkspace
  name: FindWorkspace
  nameWithType: AtomServiceDocument.FindWorkspace
  fullName: Argotic.Publishing.AtomServiceDocument.FindWorkspace
- uid: System.Predicate{Argotic.Publishing.AtomWorkspace}
  commentId: T:System.Predicate{Argotic.Publishing.AtomWorkspace}
  parent: System
  definition: System.Predicate`1
  name: Predicate<AtomWorkspace>
  nameWithType: Predicate<AtomWorkspace>
  fullName: System.Predicate<Argotic.Publishing.AtomWorkspace>
  nameWithType.vb: Predicate(Of AtomWorkspace)
  fullName.vb: System.Predicate(Of Argotic.Publishing.AtomWorkspace)
  name.vb: Predicate(Of AtomWorkspace)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Publishing.AtomWorkspace
    name: AtomWorkspace
    nameWithType: AtomWorkspace
    fullName: Argotic.Publishing.AtomWorkspace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Publishing.AtomWorkspace
    name: AtomWorkspace
    nameWithType: AtomWorkspace
    fullName: Argotic.Publishing.AtomWorkspace
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: Argotic.Publishing.AtomServiceDocument.Loaded
  commentId: E:Argotic.Publishing.AtomServiceDocument.Loaded
  isExternal: true
- uid: System.Xml.XmlException
  commentId: T:System.Xml.XmlException
  isExternal: true
- uid: Argotic.Publishing.AtomServiceDocument.Load*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.Load
  name: Load
  nameWithType: AtomServiceDocument.Load
  fullName: Argotic.Publishing.AtomServiceDocument.Load
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(IXPathNavigable)
  nameWithType: ISyndicationResource.Load(IXPathNavigable)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(IXPathNavigable, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(IXPathNavigable, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Stream)
  nameWithType: ISyndicationResource.Load(Stream)
  fullName: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Stream, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(Stream, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.IO.Stream, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(XmlReader)
  nameWithType: ISyndicationResource.Load(XmlReader)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(XmlReader, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(XmlReader, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebRequest
  commentId: T:System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, ICredentials, IWebProxy)
  nameWithType: ISyndicationResource.Load(Uri, ICredentials, IWebProxy)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, WebRequestOptions)
  nameWithType: ISyndicationResource.Load(Uri, WebRequestOptions)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, Argotic.Common.WebRequestOptions)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  isExternal: true
- uid: System.Text.Encoding.UTF8
  commentId: P:System.Text.Encoding.UTF8
  isExternal: true
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, Argotic.Common.WebRequestOptions, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  commentId: M:Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  isExternal: true
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel
  commentId: M:Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel
  isExternal: true
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,System.Object)
  commentId: M:Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,System.Object)
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsync*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.LoadAsync
  name: LoadAsync
  nameWithType: AtomServiceDocument.LoadAsync
  fullName: Argotic.Publishing.AtomServiceDocument.LoadAsync
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  commentId: M:Argotic.Publishing.AtomServiceDocument.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  isExternal: true
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Net.ICredentials, System.Net.IWebProxy, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.WebRequestOptions, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel
  name: LoadAsyncCancel
  nameWithType: AtomServiceDocument.LoadAsyncCancel
  fullName: Argotic.Publishing.AtomServiceDocument.LoadAsyncCancel
- uid: Argotic.Common.ISyndicationResource.LoadAsyncCancel
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsyncCancel
  parent: Argotic.Common.ISyndicationResource
  name: LoadAsyncCancel()
  nameWithType: ISyndicationResource.LoadAsyncCancel()
  fullName: Argotic.Common.ISyndicationResource.LoadAsyncCancel()
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsyncCancel
    name: LoadAsyncCancel
    nameWithType: ISyndicationResource.LoadAsyncCancel
    fullName: Argotic.Common.ISyndicationResource.LoadAsyncCancel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsyncCancel
    name: LoadAsyncCancel
    nameWithType: ISyndicationResource.LoadAsyncCancel
    fullName: Argotic.Common.ISyndicationResource.LoadAsyncCancel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.RemoveExtension*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.RemoveExtension
  name: RemoveExtension
  nameWithType: AtomServiceDocument.RemoveExtension
  fullName: Argotic.Publishing.AtomServiceDocument.RemoveExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Publishing.AtomServiceDocument.RemoveWorkspace*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.RemoveWorkspace
  name: RemoveWorkspace
  nameWithType: AtomServiceDocument.RemoveWorkspace
  fullName: Argotic.Publishing.AtomServiceDocument.RemoveWorkspace
- uid: Argotic.Publishing.AtomServiceDocument.Save*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.Save
  name: Save
  nameWithType: AtomServiceDocument.Save
  fullName: Argotic.Publishing.AtomServiceDocument.Save
- uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(Stream)
  nameWithType: ISyndicationResource.Save(Stream)
  fullName: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceSaveSettings
  commentId: T:Argotic.Common.SyndicationResourceSaveSettings
  parent: Argotic.Common
  name: SyndicationResourceSaveSettings
  nameWithType: SyndicationResourceSaveSettings
  fullName: Argotic.Common.SyndicationResourceSaveSettings
- uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(Stream, SyndicationResourceSaveSettings)
  nameWithType: ISyndicationResource.Save(Stream, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.ISyndicationResource.Save(System.IO.Stream, Argotic.Common.SyndicationResourceSaveSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(XmlWriter)
  nameWithType: ISyndicationResource.Save(XmlWriter)
  fullName: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(XmlWriter, SyndicationResourceSaveSettings)
  nameWithType: ISyndicationResource.Save(XmlWriter, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter, Argotic.Common.SyndicationResourceSaveSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadedEventArgs
  commentId: T:Argotic.Common.SyndicationResourceLoadedEventArgs
  parent: Argotic.Common
  name: SyndicationResourceLoadedEventArgs
  nameWithType: SyndicationResourceLoadedEventArgs
  fullName: Argotic.Common.SyndicationResourceLoadedEventArgs
- uid: Argotic.Publishing.AtomServiceDocument.OnDocumentLoaded*
  commentId: Overload:Argotic.Publishing.AtomServiceDocument.OnDocumentLoaded
  name: OnDocumentLoaded
  nameWithType: AtomServiceDocument.OnDocumentLoaded
  fullName: Argotic.Publishing.AtomServiceDocument.OnDocumentLoaded
