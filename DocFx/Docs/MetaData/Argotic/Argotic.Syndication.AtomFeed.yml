### YamlMime:ManagedReference
items:
- uid: Argotic.Syndication.AtomFeed
  commentId: T:Argotic.Syndication.AtomFeed
  id: AtomFeed
  parent: Argotic.Syndication
  children:
  - Argotic.Syndication.AtomFeed.#ctor
  - Argotic.Syndication.AtomFeed.#ctor(Argotic.Syndication.AtomId,Argotic.Syndication.AtomTextConstruct,System.DateTime)
  - Argotic.Syndication.AtomFeed.AddEntry(Argotic.Syndication.AtomEntry)
  - Argotic.Syndication.AtomFeed.AddExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Syndication.AtomFeed.Authors
  - Argotic.Syndication.AtomFeed.BaseUri
  - Argotic.Syndication.AtomFeed.Categories
  - Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory})
  - Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink})
  - Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct})
  - Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct})
  - Argotic.Syndication.AtomFeed.Contributors
  - Argotic.Syndication.AtomFeed.Create(System.Uri)
  - Argotic.Syndication.AtomFeed.Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.AtomFeed.Create(System.Uri,Argotic.Common.WebRequestOptions)
  - Argotic.Syndication.AtomFeed.Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.AtomFeed.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  - Argotic.Syndication.AtomFeed.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.AtomFeed.CreateNavigator
  - Argotic.Syndication.AtomFeed.Entries
  - Argotic.Syndication.AtomFeed.Extensions
  - Argotic.Syndication.AtomFeed.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  - Argotic.Syndication.AtomFeed.Format
  - Argotic.Syndication.AtomFeed.Generator
  - Argotic.Syndication.AtomFeed.HasExtensions
  - Argotic.Syndication.AtomFeed.Icon
  - Argotic.Syndication.AtomFeed.Id
  - Argotic.Syndication.AtomFeed.Item(System.Int32)
  - Argotic.Syndication.AtomFeed.Item(System.String)
  - Argotic.Syndication.AtomFeed.Language
  - Argotic.Syndication.AtomFeed.Links
  - Argotic.Syndication.AtomFeed.Load(System.IO.Stream)
  - Argotic.Syndication.AtomFeed.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.AtomFeed.Load(System.Uri,Argotic.Common.WebRequestOptions)
  - Argotic.Syndication.AtomFeed.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.AtomFeed.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  - Argotic.Syndication.AtomFeed.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader)
  - Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)
  - Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  - Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  - Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  - Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,System.Object)
  - Argotic.Syndication.AtomFeed.LoadAsyncCancel
  - Argotic.Syndication.AtomFeed.Loaded
  - Argotic.Syndication.AtomFeed.Logo
  - Argotic.Syndication.AtomFeed.OnFeedLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  - Argotic.Syndication.AtomFeed.RemoveEntry(Argotic.Syndication.AtomEntry)
  - Argotic.Syndication.AtomFeed.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Syndication.AtomFeed.Rights
  - Argotic.Syndication.AtomFeed.Save(System.IO.Stream)
  - Argotic.Syndication.AtomFeed.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Syndication.AtomFeed.Save(System.Xml.XmlWriter)
  - Argotic.Syndication.AtomFeed.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  - Argotic.Syndication.AtomFeed.Subtitle
  - Argotic.Syndication.AtomFeed.Title
  - Argotic.Syndication.AtomFeed.UpdatedOn
  - Argotic.Syndication.AtomFeed.Version
  langs:
  - csharp
  - vb
  name: AtomFeed
  nameWithType: AtomFeed
  fullName: Argotic.Syndication.AtomFeed
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AtomFeed
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 40
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nRepresents an Atom syndication feed, including metadata about the feed, and some or all of the entries associated with it.\n"
  remarks: "\n<p>\n    Atom is an an XML-based Web content and metadata syndication format that describes lists of related information known as <em>feeds</em>.\n    Feeds are composed of a number of items, known as <em>entries</em>, each with an extensible set of attached metadata.\n</p>\n<p>\n    This implementation conforms to the Atom 1.0 specification, which can be found\n    at <a href=\"http://www.atomenabled.org/developers/syndication/atom-format-spec.php\">http://www.atomenabled.org/developers/syndication/atom-format-spec.php</a>.\n</p>\n<p>\n    If multiple <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> objects with the same <xref href=\"Argotic.Syndication.AtomEntry.Id\" data-throw-if-not-resolved=\"false\"></xref> value appear in an Atom Feed Document, they represent the same entry.\n    Their <xref href=\"Argotic.Syndication.AtomEntry.UpdatedOn\" data-throw-if-not-resolved=\"false\"></xref> timestamps <em>should</em> be different. If an Atom Feed Document contains multiple entries with the same <xref href=\"Argotic.Syndication.AtomEntry.Id\" data-throw-if-not-resolved=\"false\"></xref>,\n    Atom Processors <u>may</u> choose to display all of them or some subset of them. One typical behavior would be to display only the entry with the latest <xref href=\"Argotic.Syndication.AtomEntry.UpdatedOn\" data-throw-if-not-resolved=\"false\"></xref> timestamp.\n</p>\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"AtomFeed\"></code></pre>\n</code></pre>\n"
  syntax:
    content: >-
      [Serializable]

      public class AtomFeed : ISyndicationResource, IAtomCommonObjectAttributes, IExtensibleSyndicationObject
    content.vb: >-
      <Serializable>

      Public Class AtomFeed

          Implements ISyndicationResource, IAtomCommonObjectAttributes, IExtensibleSyndicationObject
  inheritance:
  - System.Object
  implements:
  - Argotic.Common.ISyndicationResource
  - Argotic.Syndication.IAtomCommonObjectAttributes
  - Argotic.Extensions.IExtensibleSyndicationObject
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Syndication.AtomFeed.#ctor
  commentId: M:Argotic.Syndication.AtomFeed.#ctor
  id: '#ctor'
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: AtomFeed()
  nameWithType: AtomFeed.AtomFeed()
  fullName: Argotic.Syndication.AtomFeed.AtomFeed()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 101
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AtomFeed()
    content.vb: Public Sub New
  overload: Argotic.Syndication.AtomFeed.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.#ctor(Argotic.Syndication.AtomId,Argotic.Syndication.AtomTextConstruct,System.DateTime)
  commentId: M:Argotic.Syndication.AtomFeed.#ctor(Argotic.Syndication.AtomId,Argotic.Syndication.AtomTextConstruct,System.DateTime)
  id: '#ctor(Argotic.Syndication.AtomId,Argotic.Syndication.AtomTextConstruct,System.DateTime)'
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: AtomFeed(AtomId, AtomTextConstruct, DateTime)
  nameWithType: AtomFeed.AtomFeed(AtomId, AtomTextConstruct, DateTime)
  fullName: Argotic.Syndication.AtomFeed.AtomFeed(Argotic.Syndication.AtomId, Argotic.Syndication.AtomTextConstruct, System.DateTime)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 116
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied <xref href=\"Argotic.Syndication.AtomId\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Argotic.Syndication.AtomTextConstruct\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AtomFeed(AtomId id, AtomTextConstruct title, DateTime utcUpdatedOn)
    parameters:
    - id: id
      type: Argotic.Syndication.AtomId
      description: A <xref href="Argotic.Syndication.AtomId" data-throw-if-not-resolved="false"></xref> object that represents a permanent, universally unique identifier for this feed.
    - id: title
      type: Argotic.Syndication.AtomTextConstruct
      description: A <xref href="Argotic.Syndication.AtomTextConstruct" data-throw-if-not-resolved="false"></xref> object that represents information that conveys a human-readable title for this feed.
    - id: utcUpdatedOn
      type: System.DateTime
      description: "\nA <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that indicates the most recent instant in time when this feed was modified in a way the publisher considers significant.\nThe <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> should be provided in Coordinated Universal Time (UTC).\n"
    content.vb: Public Sub New(id As AtomId, title As AtomTextConstruct, utcUpdatedOn As Date)
  overload: Argotic.Syndication.AtomFeed.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">id</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">title</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Loaded
  commentId: E:Argotic.Syndication.AtomFeed.Loaded
  id: Loaded
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Loaded
  nameWithType: AtomFeed.Loaded
  fullName: Argotic.Syndication.AtomFeed.Loaded
  type: Event
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Loaded
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 128
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nOccurs when the syndication resource state has been changed by a load operation.\n"
  example: []
  syntax:
    content: public event EventHandler<SyndicationResourceLoadedEventArgs> Loaded
    return:
      type: System.EventHandler{Argotic.Common.SyndicationResourceLoadedEventArgs}
    content.vb: Public Event Loaded As EventHandler(Of SyndicationResourceLoadedEventArgs)
  seealso:
  - linkId: Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)
    commentId: M:Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)
  - linkId: Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader)
    commentId: M:Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader)
  implements:
  - Argotic.Common.ISyndicationResource.Loaded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Authors
  commentId: P:Argotic.Syndication.AtomFeed.Authors
  id: Authors
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Authors
  nameWithType: AtomFeed.Authors
  fullName: Argotic.Syndication.AtomFeed.Authors
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Authors
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 140
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets the authors of this feed.\n"
  remarks: "\n<p>A <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> <strong>must</strong> contain one or more authors, unless all of the feeds&apos;s child <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> objects contain at least one author.</p>\n<p>\n    The <xref href=\"Argotic.Syndication.AtomFeed.Authors\" data-throw-if-not-resolved=\"false\"></xref> are considered to apply to any <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> contained in this feed if the entry does not contain any authors and the entry&apos;s source does contain any authors.\n</p>\n"
  example: []
  syntax:
    content: public Collection<AtomPersonConstruct> Authors { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.AtomPersonConstruct" data-throw-if-not-resolved="false"></xref> objects that represent the authors of this feed.
    content.vb: Public ReadOnly Property Authors As Collection(Of AtomPersonConstruct)
  overload: Argotic.Syndication.AtomFeed.Authors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.AtomFeed.BaseUri
  commentId: P:Argotic.Syndication.AtomFeed.BaseUri
  id: BaseUri
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: AtomFeed.BaseUri
  fullName: Argotic.Syndication.AtomFeed.BaseUri
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: BaseUri
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 162
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the base URI other than the base URI of the document or external entity.\n"
  remarks: "\n<p>\n    The value of this property is interpreted as a URI Reference as defined in <a href=\"http://www.ietf.org/rfc/rfc2396.txt\">RFC 2396: Uniform Resource Identifiers</a>,\n    after processing according to <a href=\"http://www.w3.org/TR/xmlbase/#escaping\">XML Base, Section 3.1 (URI Reference Encoding and Escaping)</a>.</p>\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents a base URI other than the base URI of the document or external entity. The default value is a <strong>null</strong> reference.
    content.vb: Public Property BaseUri As Uri
  overload: Argotic.Syndication.AtomFeed.BaseUri*
  implements:
  - Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Categories
  commentId: P:Argotic.Syndication.AtomFeed.Categories
  id: Categories
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: AtomFeed.Categories
  fullName: Argotic.Syndication.AtomFeed.Categories
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Categories
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 168
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets the categories associated with this feed.\n"
  example: []
  syntax:
    content: public Collection<AtomCategory> Categories { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.AtomCategory" data-throw-if-not-resolved="false"></xref> objects that represent the categories associated with this feed.
    content.vb: Public ReadOnly Property Categories As Collection(Of AtomCategory)
  overload: Argotic.Syndication.AtomFeed.Categories*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.AtomFeed.Contributors
  commentId: P:Argotic.Syndication.AtomFeed.Contributors
  id: Contributors
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Contributors
  nameWithType: AtomFeed.Contributors
  fullName: Argotic.Syndication.AtomFeed.Contributors
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Contributors
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 185
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets the entities who contributed to this feed.\n"
  example: []
  syntax:
    content: public Collection<AtomPersonConstruct> Contributors { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.AtomPersonConstruct" data-throw-if-not-resolved="false"></xref> objects that represent the entities who contributed to this feed.
    content.vb: Public ReadOnly Property Contributors As Collection(Of AtomPersonConstruct)
  overload: Argotic.Syndication.AtomFeed.Contributors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.AtomFeed.Entries
  commentId: P:Argotic.Syndication.AtomFeed.Entries
  id: Entries
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: AtomFeed.Entries
  fullName: Argotic.Syndication.AtomFeed.Entries
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Entries
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 206
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the distinct content published in this feed.\n"
  remarks: "\nThis <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public IEnumerable<AtomEntry> Entries { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Syndication.AtomEntry}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.AtomEntry" data-throw-if-not-resolved="false"></xref> objects that represent distinct content published in this feed.
    content.vb: Public Property Entries As IEnumerable(Of AtomEntry)
  overload: Argotic.Syndication.AtomFeed.Entries*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Extensions
  commentId: P:Argotic.Syndication.AtomFeed.Extensions
  id: Extensions
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: AtomFeed.Extensions
  fullName: Argotic.Syndication.AtomFeed.Extensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Extensions
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 233
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the syndication extensions applied to this syndication entity.\n"
  remarks: "\nThis <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public IEnumerable<ISyndicationExtension> Extensions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects that represent syndication extensions applied to this syndication entity.
    content.vb: Public Property Extensions As IEnumerable(Of ISyndicationExtension)
  overload: Argotic.Syndication.AtomFeed.Extensions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Format
  commentId: P:Argotic.Syndication.AtomFeed.Format
  id: Format
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: AtomFeed.Format
  fullName: Argotic.Syndication.AtomFeed.Format
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Format
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 256
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets the <xref href=\"Argotic.Common.SyndicationContentFormat\" data-throw-if-not-resolved=\"false\"></xref> that this syndication resource implements.\n"
  example: []
  syntax:
    content: public SyndicationContentFormat Format { get; }
    parameters: []
    return:
      type: Argotic.Common.SyndicationContentFormat
      description: The <xref href="Argotic.Common.SyndicationContentFormat" data-throw-if-not-resolved="false"></xref> enumeration value that indicates the type of syndication format that this syndication resource implements.
    content.vb: Public ReadOnly Property Format As SyndicationContentFormat
  overload: Argotic.Syndication.AtomFeed.Format*
  implements:
  - Argotic.Common.ISyndicationResource.Format
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.AtomFeed.Generator
  commentId: P:Argotic.Syndication.AtomFeed.Generator
  id: Generator
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Generator
  nameWithType: AtomFeed.Generator
  fullName: Argotic.Syndication.AtomFeed.Generator
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Generator
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 262
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the agent used to generate this feed.\n"
  example: []
  syntax:
    content: public AtomGenerator Generator { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.AtomGenerator
      description: A <xref href="Argotic.Syndication.AtomGenerator" data-throw-if-not-resolved="false"></xref> object that represents the agent used to generate this feed. The default value is a <strong>null</strong> reference.
    content.vb: Public Property Generator As AtomGenerator
  overload: Argotic.Syndication.AtomFeed.Generator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.HasExtensions
  commentId: P:Argotic.Syndication.AtomFeed.HasExtensions
  id: HasExtensions
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: HasExtensions
  nameWithType: AtomFeed.HasExtensions
  fullName: Argotic.Syndication.AtomFeed.HasExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: HasExtensions
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 268
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets a value indicating whether gets a value indicating if this syndication entity has one or more syndication extensions applied to it.\n"
  example: []
  syntax:
    content: public bool HasExtensions { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.AtomFeed.Extensions" data-throw-if-not-resolved="false"></xref> collection for this entity contains one or more <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects, otherwise returns <strong>false</strong>.
    content.vb: Public ReadOnly Property HasExtensions As Boolean
  overload: Argotic.Syndication.AtomFeed.HasExtensions*
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.AtomFeed.Icon
  commentId: P:Argotic.Syndication.AtomFeed.Icon
  id: Icon
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: AtomFeed.Icon
  fullName: Argotic.Syndication.AtomFeed.Icon
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Icon
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 283
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets an image that provides iconic visual identification for this feed.\n"
  remarks: "\nThe image <em>should</em> have an aspect ratio of one (horizontal) to one (vertical) and <em>should</em> be suitable for presentation at a small size.\n"
  example: []
  syntax:
    content: public AtomIcon Icon { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.AtomIcon
      description: A <xref href="Argotic.Syndication.AtomIcon" data-throw-if-not-resolved="false"></xref> object that represents an image that provides iconic visual identification for this feed. The default value is a <strong>null</strong> reference.
    content.vb: Public Property Icon As AtomIcon
  overload: Argotic.Syndication.AtomFeed.Icon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Id
  commentId: P:Argotic.Syndication.AtomFeed.Id
  id: Id
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AtomFeed.Id
  fullName: Argotic.Syndication.AtomFeed.Id
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Id
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 297
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets a permanent, universally unique identifier for this feed.\n"
  remarks: "\n<p>\n    When an <em>Atom Document</em> is relocated, migrated, syndicated, republished, exported, or imported, the content of its universally unique identifier <strong>must not</strong> change.\n    Put another way, an <xref href=\"Argotic.Syndication.AtomId\" data-throw-if-not-resolved=\"false\"></xref> pertains to all instantiations of a particular <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref>; revisions retain the same\n    content in their <xref href=\"Argotic.Syndication.AtomId\" data-throw-if-not-resolved=\"false\"></xref> properties. It is suggested that the<xref href=\"Argotic.Syndication.AtomId\" data-throw-if-not-resolved=\"false\"></xref> be stored along with the associated resource.\n</p>\n"
  example: []
  syntax:
    content: public AtomId Id { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.AtomId
      description: A <xref href="Argotic.Syndication.AtomId" data-throw-if-not-resolved="false"></xref> object that represents a permanent, universally unique identifier for this feed.
    content.vb: Public Property Id As AtomId
  overload: Argotic.Syndication.AtomFeed.Id*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Language
  commentId: P:Argotic.Syndication.AtomFeed.Language
  id: Language
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: AtomFeed.Language
  fullName: Argotic.Syndication.AtomFeed.Language
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Language
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 320
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the natural or formal language in which the content is written.\n"
  remarks: "\n<p>\n    The value of this property is a language identifier as defined by <a href=\"http://www.ietf.org/rfc/rfc3066.txt\">RFC 3066: Tags for the Identification of Languages</a>, or its successor.\n</p>\n"
  example: []
  syntax:
    content: public CultureInfo Language { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> that represents the natural or formal language in which the content is written. The default value is a <strong>null</strong> reference.
    content.vb: Public Property Language As CultureInfo
  overload: Argotic.Syndication.AtomFeed.Language*
  implements:
  - Argotic.Syndication.IAtomCommonObjectAttributes.Language
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Links
  commentId: P:Argotic.Syndication.AtomFeed.Links
  id: Links
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Links
  nameWithType: AtomFeed.Links
  fullName: Argotic.Syndication.AtomFeed.Links
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Links
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 336
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets references from this feed to one or more Web resources.\n"
  remarks: "\n<p>\n    A feed <em>should</em> contain one <xref href=\"Argotic.Syndication.AtomLink\" data-throw-if-not-resolved=\"false\"></xref> with a <xref href=\"Argotic.Syndication.AtomLink.Relation\" data-throw-if-not-resolved=\"false\"></xref> property of <em>self</em>.\n    This is the preferred URI for retrieving Atom Feed Documents representing this Atom feed.\n</p>\n<p>\n    A feed <strong>must not</strong> contain more than one <xref href=\"Argotic.Syndication.AtomLink\" data-throw-if-not-resolved=\"false\"></xref> with a <xref href=\"Argotic.Syndication.AtomLink.Relation\" data-throw-if-not-resolved=\"false\"></xref> property of <em>alternate</em>\n    that has the same combination of <xref href=\"Argotic.Syndication.AtomLink.ContentType\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Syndication.AtomLink.ContentLanguage\" data-throw-if-not-resolved=\"false\"></xref> property values.\n</p>\n"
  example: []
  syntax:
    content: public Collection<AtomLink> Links { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.AtomLink" data-throw-if-not-resolved="false"></xref> objects that represent references from this feed to one or more Web resources.
    content.vb: Public ReadOnly Property Links As Collection(Of AtomLink)
  overload: Argotic.Syndication.AtomFeed.Links*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.AtomFeed.Logo
  commentId: P:Argotic.Syndication.AtomFeed.Logo
  id: Logo
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Logo
  nameWithType: AtomFeed.Logo
  fullName: Argotic.Syndication.AtomFeed.Logo
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Logo
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 356
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets an image that provides visual identification for this feed.\n"
  remarks: "\nThe image <em>should</em> have an aspect ratio of 2 (horizontal) to 1 (vertical).\n"
  example: []
  syntax:
    content: public AtomLogo Logo { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.AtomLogo
      description: A <xref href="Argotic.Syndication.AtomLogo" data-throw-if-not-resolved="false"></xref> object that represents an image that provides visual identification for this feed. The default value is a <strong>null</strong> reference.
    content.vb: Public Property Logo As AtomLogo
  overload: Argotic.Syndication.AtomFeed.Logo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Rights
  commentId: P:Argotic.Syndication.AtomFeed.Rights
  id: Rights
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Rights
  nameWithType: AtomFeed.Rights
  fullName: Argotic.Syndication.AtomFeed.Rights
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Rights
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 365
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets information about rights held in and over this feed.\n"
  remarks: "\nThe <xref href=\"Argotic.Syndication.AtomFeed.Rights\" data-throw-if-not-resolved=\"false\"></xref> property <em>should not</em> be used to convey machine-readable licensing information.\n"
  example: []
  syntax:
    content: public AtomTextConstruct Rights { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.AtomTextConstruct
      description: A <xref href="Argotic.Syndication.AtomTextConstruct" data-throw-if-not-resolved="false"></xref> object that represents information about rights held in and over this feed.
    content.vb: Public Property Rights As AtomTextConstruct
  overload: Argotic.Syndication.AtomFeed.Rights*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Subtitle
  commentId: P:Argotic.Syndication.AtomFeed.Subtitle
  id: Subtitle
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Subtitle
  nameWithType: AtomFeed.Subtitle
  fullName: Argotic.Syndication.AtomFeed.Subtitle
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Subtitle
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 371
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets information that conveys a human-readable description or subtitle for this feed.\n"
  example: []
  syntax:
    content: public AtomTextConstruct Subtitle { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.AtomTextConstruct
      description: A <xref href="Argotic.Syndication.AtomTextConstruct" data-throw-if-not-resolved="false"></xref> object that represents information that conveys a human-readable description or subtitle for this feed.
    content.vb: Public Property Subtitle As AtomTextConstruct
  overload: Argotic.Syndication.AtomFeed.Subtitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Title
  commentId: P:Argotic.Syndication.AtomFeed.Title
  id: Title
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: AtomFeed.Title
  fullName: Argotic.Syndication.AtomFeed.Title
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Title
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 378
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets information that conveys a human-readable title for this feed.\n"
  example: []
  syntax:
    content: public AtomTextConstruct Title { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.AtomTextConstruct
      description: A <xref href="Argotic.Syndication.AtomTextConstruct" data-throw-if-not-resolved="false"></xref> object that represents information that conveys a human-readable title for this feed.
    content.vb: Public Property Title As AtomTextConstruct
  overload: Argotic.Syndication.AtomFeed.Title*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.UpdatedOn
  commentId: P:Argotic.Syndication.AtomFeed.UpdatedOn
  id: UpdatedOn
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: UpdatedOn
  nameWithType: AtomFeed.UpdatedOn
  fullName: Argotic.Syndication.AtomFeed.UpdatedOn
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: UpdatedOn
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 402
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets a date-time indicating the most recent instant in time when this feed was modified in a way the publisher considers significant.\n"
  remarks: "\nThe <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> should be provided in Coordinated Universal Time (UTC).\n"
  example: []
  syntax:
    content: public DateTime UpdatedOn { get; set; }
    parameters: []
    return:
      type: System.DateTime
      description: "\nA <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that indicates the most recent instant in time when this feed was modified in a way the publisher considers significant.\nPublishers <em>may</em> change the value of this element over time. The default value is <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no update time was provided.\n"
    content.vb: Public Property UpdatedOn As Date
  overload: Argotic.Syndication.AtomFeed.UpdatedOn*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Version
  commentId: P:Argotic.Syndication.AtomFeed.Version
  id: Version
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: AtomFeed.Version
  fullName: Argotic.Syndication.AtomFeed.Version
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Version
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 408
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets the <xref href=\"Argotic.Syndication.AtomFeed.Version\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"Argotic.Common.SyndicationContentFormat\" data-throw-if-not-resolved=\"false\"></xref> that this syndication resource conforms to.\n"
  example: []
  syntax:
    content: public Version Version { get; }
    parameters: []
    return:
      type: System.Version
      description: The <xref href="Argotic.Syndication.AtomFeed.Version" data-throw-if-not-resolved="false"></xref> of the <xref href="Argotic.Common.SyndicationContentFormat" data-throw-if-not-resolved="false"></xref> that this syndication resource conforms to. The default value is <strong>2.0</strong>.
    content.vb: Public ReadOnly Property Version As Version
  overload: Argotic.Syndication.AtomFeed.Version*
  implements:
  - Argotic.Common.ISyndicationResource.Version
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.AtomFeed.Item(System.Int32)
  commentId: P:Argotic.Syndication.AtomFeed.Item(System.Int32)
  id: Item(System.Int32)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: AtomFeed.Item[Int32]
  fullName: Argotic.Syndication.AtomFeed.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: this[]
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 430
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.\n"
  example: []
  syntax:
    content: public AtomEntry this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the entry to get or set.
    return:
      type: Argotic.Syndication.AtomEntry
      description: The <xref href="Argotic.Syndication.AtomEntry" data-throw-if-not-resolved="false"></xref> at the specified index.
    content.vb: Public Property Item(index As Integer) As AtomEntry
  overload: Argotic.Syndication.AtomFeed.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">index</code> is less than zero.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">index</code> is equal to or greater than the count for <xref href="Argotic.Syndication.AtomFeed.Entries" data-throw-if-not-resolved="false"></xref>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomFeed.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Syndication.AtomFeed.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Argotic.Syndication.AtomFeed.Item(System.String)
  commentId: P:Argotic.Syndication.AtomFeed.Item(System.String)
  id: Item(System.String)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: AtomFeed.Item[String]
  fullName: Argotic.Syndication.AtomFeed.Item[System.String]
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: this[]
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 455
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> that has the associated identifier.\n"
  remarks: "\nIf no entry exists for the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">id</code>, returns a <strong>null</strong> reference.\n"
  example: []
  syntax:
    content: public AtomEntry this[string id] { get; set; }
    parameters:
    - id: id
      type: System.String
      description: The <xref href="Argotic.Syndication.AtomId.Uri" data-throw-if-not-resolved="false"></xref> that uniquely identifies the entry to get or set.
    return:
      type: Argotic.Syndication.AtomEntry
      description: The <xref href="Argotic.Syndication.AtomEntry" data-throw-if-not-resolved="false"></xref> with the associated <xref href="Argotic.Syndication.AtomId.Uri" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Property Item(id As String) As AtomEntry
  overload: Argotic.Syndication.AtomFeed.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">id</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">id</code> is an empty string.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomFeed.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Syndication.AtomFeed.Item(System.String)
  name.vb: Item(String)
- uid: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory})
  commentId: M:Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory})
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<AtomCategory>, Collection<AtomCategory>)
  nameWithType: AtomFeed.CompareSequence(Collection<AtomCategory>, Collection<AtomCategory>)
  fullName: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomCategory>, System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomCategory>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 552
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<AtomCategory> source, Collection<AtomCategory> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of AtomCategory), target As Collection(Of AtomCategory)) As Integer
  overload: Argotic.Syndication.AtomFeed.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomFeed.CompareSequence(Collection(Of AtomCategory), Collection(Of AtomCategory))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomCategory), System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomCategory))
  name.vb: CompareSequence(Collection(Of AtomCategory), Collection(Of AtomCategory))
- uid: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink})
  commentId: M:Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink})
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<AtomLink>, Collection<AtomLink>)
  nameWithType: AtomFeed.CompareSequence(Collection<AtomLink>, Collection<AtomLink>)
  fullName: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomLink>, System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomLink>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 597
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<AtomLink> source, Collection<AtomLink> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of AtomLink), target As Collection(Of AtomLink)) As Integer
  overload: Argotic.Syndication.AtomFeed.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomFeed.CompareSequence(Collection(Of AtomLink), Collection(Of AtomLink))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomLink), System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomLink))
  name.vb: CompareSequence(Collection(Of AtomLink), Collection(Of AtomLink))
- uid: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct})
  commentId: M:Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct})
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<AtomPersonConstruct>, Collection<AtomPersonConstruct>)
  nameWithType: AtomFeed.CompareSequence(Collection<AtomPersonConstruct>, Collection<AtomPersonConstruct>)
  fullName: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomPersonConstruct>, System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomPersonConstruct>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 642
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<AtomPersonConstruct> source, Collection<AtomPersonConstruct> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of AtomPersonConstruct), target As Collection(Of AtomPersonConstruct)) As Integer
  overload: Argotic.Syndication.AtomFeed.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomFeed.CompareSequence(Collection(Of AtomPersonConstruct), Collection(Of AtomPersonConstruct))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomPersonConstruct), System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomPersonConstruct))
  name.vb: CompareSequence(Collection(Of AtomPersonConstruct), Collection(Of AtomPersonConstruct))
- uid: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct})
  commentId: M:Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct},System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct})
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<AtomTextConstruct>, Collection<AtomTextConstruct>)
  nameWithType: AtomFeed.CompareSequence(Collection<AtomTextConstruct>, Collection<AtomTextConstruct>)
  fullName: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomTextConstruct>, System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomTextConstruct>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 689
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<AtomTextConstruct> source, Collection<AtomTextConstruct> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of AtomTextConstruct), target As Collection(Of AtomTextConstruct)) As Integer
  overload: Argotic.Syndication.AtomFeed.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: AtomFeed.CompareSequence(Collection(Of AtomTextConstruct), Collection(Of AtomTextConstruct))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Syndication.AtomFeed.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomTextConstruct), System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomTextConstruct))
  name.vb: CompareSequence(Collection(Of AtomTextConstruct), Collection(Of AtomTextConstruct))
- uid: Argotic.Syndication.AtomFeed.Create(System.Uri)
  commentId: M:Argotic.Syndication.AtomFeed.Create(System.Uri)
  id: Create(System.Uri)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Create(Uri)
  nameWithType: AtomFeed.Create(Uri)
  fullName: Argotic.Syndication.AtomFeed.Create(System.Uri)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 730
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCreates a new <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> is created using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"Create(Uri source)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public static AtomFeed Create(Uri source)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    return:
      type: Argotic.Syndication.AtomFeed
      description: An <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri) As AtomFeed
  overload: Argotic.Syndication.AtomFeed.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.AtomFeed.Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  id: Create(System.Uri,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Create(Uri, SyndicationResourceLoadSettings)
  nameWithType: AtomFeed.Create(Uri, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.AtomFeed.Create(System.Uri, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 743
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCreates a new <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AtomFeed Create(Uri source, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    return:
      type: Argotic.Syndication.AtomFeed
      description: An <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, settings As SyndicationResourceLoadSettings) As AtomFeed
  overload: Argotic.Syndication.AtomFeed.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.AtomFeed.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  commentId: M:Argotic.Syndication.AtomFeed.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  id: Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Create(Uri, ICredentials, IWebProxy)
  nameWithType: AtomFeed.Create(Uri, ICredentials, IWebProxy)
  fullName: Argotic.Syndication.AtomFeed.Create(System.Uri, System.Net.ICredentials, System.Net.IWebProxy)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 764
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCreates a new <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> is created using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static AtomFeed Create(Uri source, ICredentials credentials, IWebProxy proxy)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    return:
      type: Argotic.Syndication.AtomFeed
      description: An <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, credentials As ICredentials, proxy As IWebProxy) As AtomFeed
  overload: Argotic.Syndication.AtomFeed.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.AtomFeed.Create(System.Uri,Argotic.Common.WebRequestOptions)
  commentId: M:Argotic.Syndication.AtomFeed.Create(System.Uri,Argotic.Common.WebRequestOptions)
  id: Create(System.Uri,Argotic.Common.WebRequestOptions)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Create(Uri, WebRequestOptions)
  nameWithType: AtomFeed.Create(Uri, WebRequestOptions)
  fullName: Argotic.Syndication.AtomFeed.Create(System.Uri, Argotic.Common.WebRequestOptions)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 780
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCreates a new <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> is created using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static AtomFeed Create(Uri source, WebRequestOptions options)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    return:
      type: Argotic.Syndication.AtomFeed
      description: An <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, options As WebRequestOptions) As AtomFeed
  overload: Argotic.Syndication.AtomFeed.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.AtomFeed.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  id: Create(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Create(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  nameWithType: AtomFeed.Create(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.AtomFeed.Create(System.Uri, System.Net.ICredentials, System.Net.IWebProxy, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 799
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCreates a new <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AtomFeed Create(Uri source, ICredentials credentials, IWebProxy proxy, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    return:
      type: Argotic.Syndication.AtomFeed
      description: An <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, credentials As ICredentials, proxy As IWebProxy, settings As SyndicationResourceLoadSettings) As AtomFeed
  overload: Argotic.Syndication.AtomFeed.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.AtomFeed.Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  id: Create(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Create(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  nameWithType: AtomFeed.Create(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.AtomFeed.Create(System.Uri, Argotic.Common.WebRequestOptions, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Create
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 817
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCreates a new <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AtomFeed Create(Uri source, WebRequestOptions options, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    return:
      type: Argotic.Syndication.AtomFeed
      description: An <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> object loaded using the <code data-dev-comment-type="paramref" class="paramref">source</code> data.
    content.vb: Public Shared Function Create(source As Uri, options As WebRequestOptions, settings As SyndicationResourceLoadSettings) As AtomFeed
  overload: Argotic.Syndication.AtomFeed.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.AtomFeed.AddEntry(Argotic.Syndication.AtomEntry)
  commentId: M:Argotic.Syndication.AtomFeed.AddEntry(Argotic.Syndication.AtomEntry)
  id: AddEntry(Argotic.Syndication.AtomEntry)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: AddEntry(AtomEntry)
  nameWithType: AtomFeed.AddEntry(AtomEntry)
  fullName: Argotic.Syndication.AtomFeed.AddEntry(Argotic.Syndication.AtomEntry)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddEntry
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 834
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nAdds the supplied <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> to the current instance&apos;s <xref href=\"Argotic.Syndication.AtomFeed.Entries\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddEntry(AtomEntry entry)
    parameters:
    - id: entry
      type: Argotic.Syndication.AtomEntry
      description: The <xref href="Argotic.Syndication.AtomEntry" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.AtomEntry" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Syndication.AtomFeed.Entries" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddEntry(entry As AtomEntry) As Boolean
  overload: Argotic.Syndication.AtomFeed.AddEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">entry</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Syndication.AtomFeed.AddExtension(Argotic.Extensions.ISyndicationExtension)
  id: AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: AddExtension(ISyndicationExtension)
  nameWithType: AtomFeed.AddExtension(ISyndicationExtension)
  fullName: Argotic.Syndication.AtomFeed.AddExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddExtension
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 852
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nAdds the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> to the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Syndication.AtomFeed.AddExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.CreateNavigator
  commentId: M:Argotic.Syndication.AtomFeed.CreateNavigator
  id: CreateNavigator
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: CreateNavigator()
  nameWithType: AtomFeed.CreateNavigator()
  fullName: Argotic.Syndication.AtomFeed.CreateNavigator()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CreateNavigator
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 872
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nInitializes a read-only <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> object for navigating through nodes in this <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> is positioned on the root element of the <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref>.\nIf there is no root element, the <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> is positioned on the first element in the XML representation of the <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public XPathNavigator CreateNavigator()
    return:
      type: System.Xml.XPath.XPathNavigator
      description: A read-only <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Function CreateNavigator As XPathNavigator
  overload: Argotic.Syndication.AtomFeed.CreateNavigator*
  implements:
  - Argotic.Common.ISyndicationResource.CreateNavigator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Syndication.AtomFeed.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  id: FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: AtomFeed.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Syndication.AtomFeed.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: FindExtension
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 907
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nSearches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <xref href=\"Argotic.Syndication.AtomFeed.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nThe <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> is a delegate to a method that returns <strong>true</strong> if the object passed to it matches the conditions defined in the delegate.\nThe elements of the current <xref href=\"Argotic.Syndication.AtomFeed.Extensions\" data-throw-if-not-resolved=\"false\"></xref> are individually passed to the <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> delegate, moving forward in\nthe <xref href=\"Argotic.Syndication.AtomFeed.Extensions\" data-throw-if-not-resolved=\"false\"></xref>, starting with the first element and ending with the last element. Processing is stopped when a match is found.\n"
  example: []
  syntax:
    content: public ISyndicationExtension FindExtension(Predicate<ISyndicationExtension> match)
    parameters:
    - id: match
      type: System.Predicate{Argotic.Extensions.ISyndicationExtension}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to search for.
    return:
      type: Argotic.Extensions.ISyndicationExtension
      description: "\nThe first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function FindExtension(match As Predicate(Of ISyndicationExtension)) As ISyndicationExtension
  overload: Argotic.Syndication.AtomFeed.FindExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">match</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  nameWithType.vb: AtomFeed.FindExtension(Predicate(Of ISyndicationExtension))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Syndication.AtomFeed.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
- uid: Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(IXPathNavigable)
  nameWithType: AtomFeed.Load(IXPathNavigable)
  fullName: Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 930
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XPath.IXPathNavigable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"Load(IXPathNavigable source)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public void Load(IXPathNavigable source)
    parameters:
    - id: source
      type: System.Xml.XPath.IXPathNavigable
      description: The <strong>IXPathNavigable</strong> used to load the syndication resource.
    content.vb: Public Sub Load(source As IXPathNavigable)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(IXPathNavigable, SyndicationResourceLoadSettings)
  nameWithType: AtomFeed.Load(IXPathNavigable, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 946
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XPath.IXPathNavigable\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(IXPathNavigable source, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Xml.XPath.IXPathNavigable
      description: The <strong>IXPathNavigable</strong> used to load the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(source As IXPathNavigable, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Load(System.IO.Stream)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(Stream)
  nameWithType: AtomFeed.Load(Stream)
  fullName: Argotic.Syndication.AtomFeed.Load(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 974
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"Load(Stream stream)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public void Load(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> used to load the syndication resource.
    content.vb: Public Sub Load(stream As Stream)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(Stream, SyndicationResourceLoadSettings)
  nameWithType: AtomFeed.Load(Stream, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.AtomFeed.Load(System.IO.Stream, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 990
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(Stream stream, SyndicationResourceLoadSettings settings)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> used to load the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(stream As Stream, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(XmlReader)
  nameWithType: AtomFeed.Load(XmlReader)
  fullName: Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1019
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"Load(XmlReader reader)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public void Load(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <strong>XmlReader</strong> used to load the syndication resource.
    content.vb: Public Sub Load(reader As XmlReader)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(XmlReader, SyndicationResourceLoadSettings)
  nameWithType: AtomFeed.Load(XmlReader, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1035
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the specified <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nAfter the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n"
  example: []
  syntax:
    content: public void Load(XmlReader reader, SyndicationResourceLoadSettings settings)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <strong>XmlReader</strong> used to load the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(reader As XmlReader, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">reader</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  id: Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(Uri, ICredentials, IWebProxy)
  nameWithType: AtomFeed.Load(Uri, ICredentials, IWebProxy)
  fullName: Argotic.Syndication.AtomFeed.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1081
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the supplied <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n             If <code data-dev-comment-type=\"paramref\" class=\"paramref\">credentials</code> is <strong>null</strong>, request is made using the default application credentials.\n</li><li>\n    If <code data-dev-comment-type=\"paramref\" class=\"paramref\">proxy</code> is <strong>null</strong>, request is made using the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> default proxy settings.\n</li><li>\n    After the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"Load(Uri source, ICredentials credentials, IWebProxy proxy)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public void Load(Uri source, ICredentials credentials, IWebProxy proxy)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    content.vb: Public Sub Load(source As Uri, credentials As ICredentials, proxy As IWebProxy)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Load(System.Uri,Argotic.Common.WebRequestOptions)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Uri,Argotic.Common.WebRequestOptions)
  id: Load(System.Uri,Argotic.Common.WebRequestOptions)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(Uri, WebRequestOptions)
  nameWithType: AtomFeed.Load(Uri, WebRequestOptions)
  fullName: Argotic.Syndication.AtomFeed.Load(System.Uri, Argotic.Common.WebRequestOptions)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1110
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the supplied <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n            After the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"Load(Uri source, WebRequestOptions options)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public void Load(Uri source, WebRequestOptions options)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    content.vb: Public Sub Load(source As Uri, options As WebRequestOptions)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  nameWithType: AtomFeed.Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.AtomFeed.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1157
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the supplied <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n             If <code data-dev-comment-type=\"paramref\" class=\"paramref\">credentials</code> is <strong>null</strong>, request is made using the default application credentials.\n</li><li>\n    If <code data-dev-comment-type=\"paramref\" class=\"paramref\">proxy</code> is <strong>null</strong>, request is made using the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> default proxy settings.\n</li><li>\n    If <code data-dev-comment-type=\"paramref\" class=\"paramref\">settings</code> has a <xref href=\"Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref>\n    the character encoding of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> will be attempt to be determined automatically, otherwise the specified character encoding will be used.\n    If automatic detection fails, a character encoding of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref> is used by default.\n</li><li>\n    After the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, ICredentials credentials, IWebProxy proxy, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> resource when required. This value can be <strong>null</strong>.\n"
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(source As Uri, credentials As ICredentials, proxy As IWebProxy, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  nameWithType: AtomFeed.Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.AtomFeed.Load(System.Uri, Argotic.Common.WebRequestOptions, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1193
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads the syndication resource from the supplied <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> using the specified <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n<ul><li>\n            If <code data-dev-comment-type=\"paramref\" class=\"paramref\">settings</code> has a <xref href=\"Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref>\n            the character encoding of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> will be attempt to be determined automatically, otherwise the specified character encoding will be used.\n            If automatic detection fails, a character encoding of <xref href=\"System.Text.Encoding.UTF8\" data-throw-if-not-resolved=\"false\"></xref> is used by default.\n</li><li>\n    After the load operation has successfully completed, the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</li></ul>\n</p>\n"
  example: []
  syntax:
    content: public void Load(Uri source, WebRequestOptions options, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that points to the location of the web resource used to load the syndication resource.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Load(source As Uri, options As WebRequestOptions, settings As SyndicationResourceLoadSettings)
  overload: Argotic.Syndication.AtomFeed.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: There is a load or parse error in the XML. In this case, the feed remains empty.
  implements:
  - Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,System.Object)
  commentId: M:Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,System.Object)
  id: LoadAsync(System.Uri,System.Object)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, Object)
  nameWithType: AtomFeed.LoadAsync(Uri, Object)
  fullName: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1241
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads this <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>The <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> is loaded using the default <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Syndication.AtomFeed.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>, you must wait for the load operation to complete before\n    attempting to load the syndication resource using the <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"LoadAsync(Uri source, Object userToken)\"></code></pre>\n<pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"FeedLoadedCallback(Object sender, SyndicationResourceLoadedEventArgs e)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public void LoadAsync(Uri source, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, userToken As Object)
  overload: Argotic.Syndication.AtomFeed.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  commentId: M:Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  id: LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  nameWithType: AtomFeed.LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  fullName: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1265
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads this <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Syndication.AtomFeed.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>, you must wait for the load operation to complete before\n    attempting to load the syndication resource using the <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, SyndicationResourceLoadSettings settings, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, settings As SyndicationResourceLoadSettings, userToken As Object)
  overload: Argotic.Syndication.AtomFeed.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  commentId: M:Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  id: LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  nameWithType: AtomFeed.LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  fullName: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Net.ICredentials, System.Net.IWebProxy, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1295
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads this <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Syndication.AtomFeed.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>,\n    you must wait for the load operation to complete before attempting to load the syndication resource using the <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, SyndicationResourceLoadSettings settings, ICredentials credentials, IWebProxy proxy, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    - id: credentials
      type: System.Net.ICredentials
      description: "\nA <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> that provides the proper set of credentials to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: proxy
      type: System.Net.IWebProxy
      description: "\nA <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> that provides proxy access to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> when required. This value can be <strong>null</strong>.\n"
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, settings As SyndicationResourceLoadSettings, credentials As ICredentials, proxy As IWebProxy, userToken As Object)
  overload: Argotic.Syndication.AtomFeed.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  commentId: M:Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  id: LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  nameWithType: AtomFeed.LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  fullName: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.WebRequestOptions, System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsync
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1325
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads this <xref href=\"Argotic.Syndication.AtomFeed\" data-throw-if-not-resolved=\"false\"></xref> instance asynchronously using the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n    You can cancel a <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation by calling the <xref href=\"Argotic.Syndication.AtomFeed.LoadAsyncCancel\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n<p>\n    After calling <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>,\n    you must wait for the load operation to complete before attempting to load the syndication resource using the <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public void LoadAsync(Uri source, SyndicationResourceLoadSettings settings, WebRequestOptions options, object userToken)
    parameters:
    - id: source
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the syndication resource XML data.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> object used to configure the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    - id: options
      type: Argotic.Common.WebRequestOptions
      description: A <xref href="Argotic.Common.WebRequestOptions" data-throw-if-not-resolved="false"></xref> that holds options that should be applied to web requests.
    - id: userToken
      type: System.Object
      description: A user-defined object that is passed to the method invoked when the asynchronous operation completes.
    content.vb: Public Sub LoadAsync(source As Uri, settings As SyndicationResourceLoadSettings, options As WebRequestOptions, userToken As Object)
  overload: Argotic.Syndication.AtomFeed.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> data does not conform to the expected syndication content format. In this case, the feed remains empty.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> has a <xref href="Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cArgotic.Common.SyndicationResourceLoadSettings%2cSystem.Net.ICredentials%2cSystem.Net.IWebProxy%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> call in progress.
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.LoadAsyncCancel
  commentId: M:Argotic.Syndication.AtomFeed.LoadAsyncCancel
  id: LoadAsyncCancel
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: LoadAsyncCancel()
  nameWithType: AtomFeed.LoadAsyncCancel()
  fullName: Argotic.Syndication.AtomFeed.LoadAsyncCancel()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LoadAsyncCancel
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1371
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCancels an asynchronous operation to load this syndication resource.\n"
  remarks: "\nUse the LoadAsyncCancel method to cancel a pending <xref href=\"Argotic.Syndication.AtomFeed.LoadAsync(System.Uri%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> operation.\nIf there is a load operation in progress, this method releases resources used to execute the load operation.\nIf there is no load operation pending, this method does nothing.\n"
  example: []
  syntax:
    content: public void LoadAsyncCancel()
    content.vb: Public Sub LoadAsyncCancel
  overload: Argotic.Syndication.AtomFeed.LoadAsyncCancel*
  implements:
  - Argotic.Common.ISyndicationResource.LoadAsyncCancel
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.RemoveEntry(Argotic.Syndication.AtomEntry)
  commentId: M:Argotic.Syndication.AtomFeed.RemoveEntry(Argotic.Syndication.AtomEntry)
  id: RemoveEntry(Argotic.Syndication.AtomEntry)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: RemoveEntry(AtomEntry)
  nameWithType: AtomFeed.RemoveEntry(AtomEntry)
  fullName: Argotic.Syndication.AtomFeed.RemoveEntry(Argotic.Syndication.AtomEntry)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveEntry
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1390
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nRemoves the supplied <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> from the current instance&apos;s <xref href=\"Argotic.Syndication.AtomFeed.Entries\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Syndication.AtomFeed.Entries\" data-throw-if-not-resolved=\"false\"></xref> collection of the current instance does not contain the specified <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveEntry(AtomEntry entry)
    parameters:
    - id: entry
      type: Argotic.Syndication.AtomEntry
      description: The <xref href="Argotic.Syndication.AtomEntry" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.AtomEntry" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Syndication.AtomFeed.Entries" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveEntry(entry As AtomEntry) As Boolean
  overload: Argotic.Syndication.AtomFeed.RemoveEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">entry</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Syndication.AtomFeed.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  id: RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: AtomFeed.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Syndication.AtomFeed.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveExtension
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1414
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nRemoves the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> from the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Syndication.AtomFeed.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection of the current instance does not contain the specified <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Syndication.AtomFeed.RemoveExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Save(System.IO.Stream)
  commentId: M:Argotic.Syndication.AtomFeed.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Save(Stream)
  nameWithType: AtomFeed.Save(Stream)
  fullName: Argotic.Syndication.AtomFeed.Save(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1440
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"Save(Stream stream)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public void Save(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> to which you want to save the syndication resource.
    content.vb: Public Sub Save(stream As Stream)
  overload: Argotic.Syndication.AtomFeed.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  id: Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Save(Stream, SyndicationResourceSaveSettings)
  nameWithType: AtomFeed.Save(Stream, SyndicationResourceSaveSettings)
  fullName: Argotic.Syndication.AtomFeed.Save(System.IO.Stream, Argotic.Common.SyndicationResourceSaveSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1452
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(Stream stream, SyndicationResourceSaveSettings settings)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <strong>Stream</strong> to which you want to save the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: The <xref href="Argotic.Common.SyndicationResourceSaveSettings" data-throw-if-not-resolved="false"></xref> object used to configure the persistence of the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance. This value can be <strong>null</strong>.
    content.vb: Public Sub Save(stream As Stream, settings As SyndicationResourceSaveSettings)
  overload: Argotic.Syndication.AtomFeed.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">stream</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Save(System.Xml.XmlWriter)
  commentId: M:Argotic.Syndication.AtomFeed.Save(System.Xml.XmlWriter)
  id: Save(System.Xml.XmlWriter)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Save(XmlWriter)
  nameWithType: AtomFeed.Save(XmlWriter)
  fullName: Argotic.Syndication.AtomFeed.Save(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1483
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Atom\\AtomFeedExample.cs\" region=\"Save(XmlWriter writer)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public void Save(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <strong>XmlWriter</strong> to which you want to save the syndication resource.
    content.vb: Public Sub Save(writer As XmlWriter)
  overload: Argotic.Syndication.AtomFeed.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Syndication.AtomFeed.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  id: Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: Save(XmlWriter, SyndicationResourceSaveSettings)
  nameWithType: AtomFeed.Save(XmlWriter, SyndicationResourceSaveSettings)
  fullName: Argotic.Syndication.AtomFeed.Save(System.Xml.XmlWriter, Argotic.Common.SyndicationResourceSaveSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Save
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1498
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nSaves the syndication resource to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceSaveSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void Save(XmlWriter writer, SyndicationResourceSaveSettings settings)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <strong>XmlWriter</strong> to which you want to save the syndication resource.
    - id: settings
      type: Argotic.Common.SyndicationResourceSaveSettings
      description: The <xref href="Argotic.Common.SyndicationResourceSaveSettings" data-throw-if-not-resolved="false"></xref> object used to configure the persistence of the <xref href="Argotic.Syndication.AtomFeed" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Sub Save(writer As XmlWriter, settings As SyndicationResourceSaveSettings)
  overload: Argotic.Syndication.AtomFeed.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">settings</code> is a null reference (Nothing in Visual Basic).
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The operation would not result in well formed XML for the syndication resource.
  implements:
  - Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.AtomFeed.OnFeedLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  commentId: M:Argotic.Syndication.AtomFeed.OnFeedLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  id: OnFeedLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  parent: Argotic.Syndication.AtomFeed
  langs:
  - csharp
  - vb
  name: OnFeedLoaded(SyndicationResourceLoadedEventArgs)
  nameWithType: AtomFeed.OnFeedLoaded(SyndicationResourceLoadedEventArgs)
  fullName: Argotic.Syndication.AtomFeed.OnFeedLoaded(Argotic.Common.SyndicationResourceLoadedEventArgs)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: OnFeedLoaded
    path: ../Solutions/Argotic.Core/Syndication/Atom/AtomFeed.cs
    startLine: 1609
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nRaises the <xref href=\"Argotic.Syndication.AtomFeed.Loaded\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnFeedLoaded(SyndicationResourceLoadedEventArgs e)
    parameters:
    - id: e
      type: Argotic.Common.SyndicationResourceLoadedEventArgs
      description: A <xref href="Argotic.Common.SyndicationResourceLoadedEventArgs" data-throw-if-not-resolved="false"></xref> that contains the event data.
    content.vb: Protected Overridable Sub OnFeedLoaded(e As SyndicationResourceLoadedEventArgs)
  overload: Argotic.Syndication.AtomFeed.OnFeedLoaded*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Argotic.Syndication.AtomEntry
  commentId: T:Argotic.Syndication.AtomEntry
  parent: Argotic.Syndication
  name: AtomEntry
  nameWithType: AtomEntry
  fullName: Argotic.Syndication.AtomEntry
- uid: Argotic.Syndication.AtomEntry.Id
  commentId: P:Argotic.Syndication.AtomEntry.Id
  parent: Argotic.Syndication.AtomEntry
  name: Id
  nameWithType: AtomEntry.Id
  fullName: Argotic.Syndication.AtomEntry.Id
- uid: Argotic.Syndication.AtomEntry.UpdatedOn
  commentId: P:Argotic.Syndication.AtomEntry.UpdatedOn
  parent: Argotic.Syndication.AtomEntry
  name: UpdatedOn
  nameWithType: AtomEntry.UpdatedOn
  fullName: Argotic.Syndication.AtomEntry.UpdatedOn
- uid: Argotic.Syndication
  commentId: N:Argotic.Syndication
  name: Argotic.Syndication
  nameWithType: Argotic.Syndication
  fullName: Argotic.Syndication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Argotic.Common.ISyndicationResource
  commentId: T:Argotic.Common.ISyndicationResource
  parent: Argotic.Common
  name: ISyndicationResource
  nameWithType: ISyndicationResource
  fullName: Argotic.Common.ISyndicationResource
- uid: Argotic.Syndication.IAtomCommonObjectAttributes
  commentId: T:Argotic.Syndication.IAtomCommonObjectAttributes
  parent: Argotic.Syndication
  name: IAtomCommonObjectAttributes
  nameWithType: IAtomCommonObjectAttributes
  fullName: Argotic.Syndication.IAtomCommonObjectAttributes
- uid: Argotic.Extensions.IExtensibleSyndicationObject
  commentId: T:Argotic.Extensions.IExtensibleSyndicationObject
  parent: Argotic.Extensions
  name: IExtensibleSyndicationObject
  nameWithType: IExtensibleSyndicationObject
  fullName: Argotic.Extensions.IExtensibleSyndicationObject
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Common
  commentId: N:Argotic.Common
  name: Argotic.Common
  nameWithType: Argotic.Common
  fullName: Argotic.Common
- uid: Argotic.Extensions
  commentId: N:Argotic.Extensions
  name: Argotic.Extensions
  nameWithType: Argotic.Extensions
  fullName: Argotic.Extensions
- uid: Argotic.Syndication.AtomFeed
  commentId: T:Argotic.Syndication.AtomFeed
  parent: Argotic.Syndication
  name: AtomFeed
  nameWithType: AtomFeed
  fullName: Argotic.Syndication.AtomFeed
- uid: Argotic.Syndication.AtomFeed.#ctor*
  commentId: Overload:Argotic.Syndication.AtomFeed.#ctor
  name: AtomFeed
  nameWithType: AtomFeed.AtomFeed
  fullName: Argotic.Syndication.AtomFeed.AtomFeed
- uid: Argotic.Syndication.AtomId
  commentId: T:Argotic.Syndication.AtomId
  parent: Argotic.Syndication
  name: AtomId
  nameWithType: AtomId
  fullName: Argotic.Syndication.AtomId
- uid: Argotic.Syndication.AtomTextConstruct
  commentId: T:Argotic.Syndication.AtomTextConstruct
  parent: Argotic.Syndication
  name: AtomTextConstruct
  nameWithType: AtomTextConstruct
  fullName: Argotic.Syndication.AtomTextConstruct
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Xml.XPath.IXPathNavigable)
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Syndication.AtomFeed.Load(System.Xml.XmlReader)
  isExternal: true
- uid: Argotic.Common.ISyndicationResource.Loaded
  commentId: E:Argotic.Common.ISyndicationResource.Loaded
  parent: Argotic.Common.ISyndicationResource
  name: Loaded
  nameWithType: ISyndicationResource.Loaded
  fullName: Argotic.Common.ISyndicationResource.Loaded
- uid: System.EventHandler{Argotic.Common.SyndicationResourceLoadedEventArgs}
  commentId: T:System.EventHandler{Argotic.Common.SyndicationResourceLoadedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SyndicationResourceLoadedEventArgs>
  nameWithType: EventHandler<SyndicationResourceLoadedEventArgs>
  fullName: System.EventHandler<Argotic.Common.SyndicationResourceLoadedEventArgs>
  nameWithType.vb: EventHandler(Of SyndicationResourceLoadedEventArgs)
  fullName.vb: System.EventHandler(Of Argotic.Common.SyndicationResourceLoadedEventArgs)
  name.vb: EventHandler(Of SyndicationResourceLoadedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Common.SyndicationResourceLoadedEventArgs
    name: SyndicationResourceLoadedEventArgs
    nameWithType: SyndicationResourceLoadedEventArgs
    fullName: Argotic.Common.SyndicationResourceLoadedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Common.SyndicationResourceLoadedEventArgs
    name: SyndicationResourceLoadedEventArgs
    nameWithType: SyndicationResourceLoadedEventArgs
    fullName: Argotic.Common.SyndicationResourceLoadedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomPersonConstruct
  commentId: T:Argotic.Syndication.AtomPersonConstruct
  parent: Argotic.Syndication
  name: AtomPersonConstruct
  nameWithType: AtomPersonConstruct
  fullName: Argotic.Syndication.AtomPersonConstruct
- uid: Argotic.Syndication.AtomFeed.Authors
  commentId: P:Argotic.Syndication.AtomFeed.Authors
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.Authors*
  commentId: Overload:Argotic.Syndication.AtomFeed.Authors
  name: Authors
  nameWithType: AtomFeed.Authors
  fullName: Argotic.Syndication.AtomFeed.Authors
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomPersonConstruct}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<AtomPersonConstruct>
  nameWithType: Collection<AtomPersonConstruct>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomPersonConstruct>
  nameWithType.vb: Collection(Of AtomPersonConstruct)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomPersonConstruct)
  name.vb: Collection(Of AtomPersonConstruct)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.AtomPersonConstruct
    name: AtomPersonConstruct
    nameWithType: AtomPersonConstruct
    fullName: Argotic.Syndication.AtomPersonConstruct
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.AtomPersonConstruct
    name: AtomPersonConstruct
    nameWithType: AtomPersonConstruct
    fullName: Argotic.Syndication.AtomPersonConstruct
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Argotic.Syndication.AtomFeed.BaseUri*
  commentId: Overload:Argotic.Syndication.AtomFeed.BaseUri
  name: BaseUri
  nameWithType: AtomFeed.BaseUri
  fullName: Argotic.Syndication.AtomFeed.BaseUri
- uid: Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
  commentId: P:Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
  parent: Argotic.Syndication.IAtomCommonObjectAttributes
  name: BaseUri
  nameWithType: IAtomCommonObjectAttributes.BaseUri
  fullName: Argotic.Syndication.IAtomCommonObjectAttributes.BaseUri
- uid: Argotic.Syndication.AtomCategory
  commentId: T:Argotic.Syndication.AtomCategory
  parent: Argotic.Syndication
  name: AtomCategory
  nameWithType: AtomCategory
  fullName: Argotic.Syndication.AtomCategory
- uid: Argotic.Syndication.AtomFeed.Categories*
  commentId: Overload:Argotic.Syndication.AtomFeed.Categories
  name: Categories
  nameWithType: AtomFeed.Categories
  fullName: Argotic.Syndication.AtomFeed.Categories
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomCategory}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<AtomCategory>
  nameWithType: Collection<AtomCategory>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomCategory>
  nameWithType.vb: Collection(Of AtomCategory)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomCategory)
  name.vb: Collection(Of AtomCategory)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.AtomCategory
    name: AtomCategory
    nameWithType: AtomCategory
    fullName: Argotic.Syndication.AtomCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.AtomCategory
    name: AtomCategory
    nameWithType: AtomCategory
    fullName: Argotic.Syndication.AtomCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomFeed.Contributors*
  commentId: Overload:Argotic.Syndication.AtomFeed.Contributors
  name: Contributors
  nameWithType: AtomFeed.Contributors
  fullName: Argotic.Syndication.AtomFeed.Contributors
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomFeed.Entries*
  commentId: Overload:Argotic.Syndication.AtomFeed.Entries
  name: Entries
  nameWithType: AtomFeed.Entries
  fullName: Argotic.Syndication.AtomFeed.Entries
- uid: System.Collections.Generic.IEnumerable{Argotic.Syndication.AtomEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Syndication.AtomEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AtomEntry>
  nameWithType: IEnumerable<AtomEntry>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Syndication.AtomEntry>
  nameWithType.vb: IEnumerable(Of AtomEntry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Syndication.AtomEntry)
  name.vb: IEnumerable(Of AtomEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.AtomEntry
    name: AtomEntry
    nameWithType: AtomEntry
    fullName: Argotic.Syndication.AtomEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.AtomEntry
    name: AtomEntry
    nameWithType: AtomEntry
    fullName: Argotic.Syndication.AtomEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Argotic.Extensions.ISyndicationExtension
  commentId: T:Argotic.Extensions.ISyndicationExtension
  parent: Argotic.Extensions
  name: ISyndicationExtension
  nameWithType: ISyndicationExtension
  fullName: Argotic.Extensions.ISyndicationExtension
- uid: Argotic.Syndication.AtomFeed.Extensions*
  commentId: Overload:Argotic.Syndication.AtomFeed.Extensions
  name: Extensions
  nameWithType: AtomFeed.Extensions
  fullName: Argotic.Syndication.AtomFeed.Extensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: Extensions
  nameWithType: IExtensibleSyndicationObject.Extensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
- uid: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISyndicationExtension>
  nameWithType: IEnumerable<ISyndicationExtension>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: IEnumerable(Of ISyndicationExtension)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: IEnumerable(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationContentFormat
  commentId: T:Argotic.Common.SyndicationContentFormat
  parent: Argotic.Common
  name: SyndicationContentFormat
  nameWithType: SyndicationContentFormat
  fullName: Argotic.Common.SyndicationContentFormat
- uid: Argotic.Syndication.AtomFeed.Format*
  commentId: Overload:Argotic.Syndication.AtomFeed.Format
  name: Format
  nameWithType: AtomFeed.Format
  fullName: Argotic.Syndication.AtomFeed.Format
- uid: Argotic.Common.ISyndicationResource.Format
  commentId: P:Argotic.Common.ISyndicationResource.Format
  parent: Argotic.Common.ISyndicationResource
  name: Format
  nameWithType: ISyndicationResource.Format
  fullName: Argotic.Common.ISyndicationResource.Format
- uid: Argotic.Syndication.AtomGenerator
  commentId: T:Argotic.Syndication.AtomGenerator
  parent: Argotic.Syndication
  name: AtomGenerator
  nameWithType: AtomGenerator
  fullName: Argotic.Syndication.AtomGenerator
- uid: Argotic.Syndication.AtomFeed.Generator*
  commentId: Overload:Argotic.Syndication.AtomFeed.Generator
  name: Generator
  nameWithType: AtomFeed.Generator
  fullName: Argotic.Syndication.AtomFeed.Generator
- uid: Argotic.Syndication.AtomFeed.Extensions
  commentId: P:Argotic.Syndication.AtomFeed.Extensions
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.HasExtensions*
  commentId: Overload:Argotic.Syndication.AtomFeed.HasExtensions
  name: HasExtensions
  nameWithType: AtomFeed.HasExtensions
  fullName: Argotic.Syndication.AtomFeed.HasExtensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: HasExtensions
  nameWithType: IExtensibleSyndicationObject.HasExtensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Syndication.AtomIcon
  commentId: T:Argotic.Syndication.AtomIcon
  parent: Argotic.Syndication
  name: AtomIcon
  nameWithType: AtomIcon
  fullName: Argotic.Syndication.AtomIcon
- uid: Argotic.Syndication.AtomFeed.Icon*
  commentId: Overload:Argotic.Syndication.AtomFeed.Icon
  name: Icon
  nameWithType: AtomFeed.Icon
  fullName: Argotic.Syndication.AtomFeed.Icon
- uid: Argotic.Syndication.AtomFeed.Id*
  commentId: Overload:Argotic.Syndication.AtomFeed.Id
  name: Id
  nameWithType: AtomFeed.Id
  fullName: Argotic.Syndication.AtomFeed.Id
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Argotic.Syndication.AtomFeed.Language*
  commentId: Overload:Argotic.Syndication.AtomFeed.Language
  name: Language
  nameWithType: AtomFeed.Language
  fullName: Argotic.Syndication.AtomFeed.Language
- uid: Argotic.Syndication.IAtomCommonObjectAttributes.Language
  commentId: P:Argotic.Syndication.IAtomCommonObjectAttributes.Language
  parent: Argotic.Syndication.IAtomCommonObjectAttributes
  name: Language
  nameWithType: IAtomCommonObjectAttributes.Language
  fullName: Argotic.Syndication.IAtomCommonObjectAttributes.Language
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Argotic.Syndication.AtomLink
  commentId: T:Argotic.Syndication.AtomLink
  parent: Argotic.Syndication
  name: AtomLink
  nameWithType: AtomLink
  fullName: Argotic.Syndication.AtomLink
- uid: Argotic.Syndication.AtomLink.Relation
  commentId: P:Argotic.Syndication.AtomLink.Relation
  isExternal: true
- uid: Argotic.Syndication.AtomLink.ContentType
  commentId: P:Argotic.Syndication.AtomLink.ContentType
  isExternal: true
- uid: Argotic.Syndication.AtomLink.ContentLanguage
  commentId: P:Argotic.Syndication.AtomLink.ContentLanguage
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.Links*
  commentId: Overload:Argotic.Syndication.AtomFeed.Links
  name: Links
  nameWithType: AtomFeed.Links
  fullName: Argotic.Syndication.AtomFeed.Links
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomLink}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<AtomLink>
  nameWithType: Collection<AtomLink>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomLink>
  nameWithType.vb: Collection(Of AtomLink)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomLink)
  name.vb: Collection(Of AtomLink)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.AtomLink
    name: AtomLink
    nameWithType: AtomLink
    fullName: Argotic.Syndication.AtomLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.AtomLink
    name: AtomLink
    nameWithType: AtomLink
    fullName: Argotic.Syndication.AtomLink
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomLogo
  commentId: T:Argotic.Syndication.AtomLogo
  parent: Argotic.Syndication
  name: AtomLogo
  nameWithType: AtomLogo
  fullName: Argotic.Syndication.AtomLogo
- uid: Argotic.Syndication.AtomFeed.Logo*
  commentId: Overload:Argotic.Syndication.AtomFeed.Logo
  name: Logo
  nameWithType: AtomFeed.Logo
  fullName: Argotic.Syndication.AtomFeed.Logo
- uid: Argotic.Syndication.AtomFeed.Rights
  commentId: P:Argotic.Syndication.AtomFeed.Rights
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.Rights*
  commentId: Overload:Argotic.Syndication.AtomFeed.Rights
  name: Rights
  nameWithType: AtomFeed.Rights
  fullName: Argotic.Syndication.AtomFeed.Rights
- uid: Argotic.Syndication.AtomFeed.Subtitle*
  commentId: Overload:Argotic.Syndication.AtomFeed.Subtitle
  name: Subtitle
  nameWithType: AtomFeed.Subtitle
  fullName: Argotic.Syndication.AtomFeed.Subtitle
- uid: Argotic.Syndication.AtomFeed.Title*
  commentId: Overload:Argotic.Syndication.AtomFeed.Title
  name: Title
  nameWithType: AtomFeed.Title
  fullName: Argotic.Syndication.AtomFeed.Title
- uid: System.DateTime.MinValue
  commentId: F:System.DateTime.MinValue
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.UpdatedOn*
  commentId: Overload:Argotic.Syndication.AtomFeed.UpdatedOn
  name: UpdatedOn
  nameWithType: AtomFeed.UpdatedOn
  fullName: Argotic.Syndication.AtomFeed.UpdatedOn
- uid: Argotic.Syndication.AtomFeed.Version
  commentId: P:Argotic.Syndication.AtomFeed.Version
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.Version*
  commentId: Overload:Argotic.Syndication.AtomFeed.Version
  name: Version
  nameWithType: AtomFeed.Version
  fullName: Argotic.Syndication.AtomFeed.Version
- uid: Argotic.Common.ISyndicationResource.Version
  commentId: P:Argotic.Common.ISyndicationResource.Version
  parent: Argotic.Common.ISyndicationResource
  name: Version
  nameWithType: ISyndicationResource.Version
  fullName: Argotic.Common.ISyndicationResource.Version
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Argotic.Syndication.AtomFeed.Entries
  commentId: P:Argotic.Syndication.AtomFeed.Entries
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.Item*
  commentId: Overload:Argotic.Syndication.AtomFeed.Item
  name: Item
  nameWithType: AtomFeed.Item
  fullName: Argotic.Syndication.AtomFeed.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Argotic.Syndication.AtomId.Uri
  commentId: P:Argotic.Syndication.AtomId.Uri
  isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Argotic.Syndication.AtomFeed.CompareSequence*
  commentId: Overload:Argotic.Syndication.AtomFeed.CompareSequence
  name: CompareSequence
  nameWithType: AtomFeed.CompareSequence
  fullName: Argotic.Syndication.AtomFeed.CompareSequence
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.AtomTextConstruct}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<AtomTextConstruct>
  nameWithType: Collection<AtomTextConstruct>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.AtomTextConstruct>
  nameWithType.vb: Collection(Of AtomTextConstruct)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.AtomTextConstruct)
  name.vb: Collection(Of AtomTextConstruct)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.AtomTextConstruct
    name: AtomTextConstruct
    nameWithType: AtomTextConstruct
    fullName: Argotic.Syndication.AtomTextConstruct
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.AtomTextConstruct
    name: AtomTextConstruct
    nameWithType: AtomTextConstruct
    fullName: Argotic.Syndication.AtomTextConstruct
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadSettings
  commentId: T:Argotic.Common.SyndicationResourceLoadSettings
  parent: Argotic.Common
  name: SyndicationResourceLoadSettings
  nameWithType: SyndicationResourceLoadSettings
  fullName: Argotic.Common.SyndicationResourceLoadSettings
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.Create*
  commentId: Overload:Argotic.Syndication.AtomFeed.Create
  name: Create
  nameWithType: AtomFeed.Create
  fullName: Argotic.Syndication.AtomFeed.Create
- uid: System.Net.ICredentials
  commentId: T:System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.IWebProxy
  commentId: T:System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Argotic.Common.WebRequestOptions
  commentId: T:Argotic.Common.WebRequestOptions
  parent: Argotic.Common
  name: WebRequestOptions
  nameWithType: WebRequestOptions
  fullName: Argotic.Common.WebRequestOptions
- uid: Argotic.Syndication.AtomFeed.AddEntry*
  commentId: Overload:Argotic.Syndication.AtomFeed.AddEntry
  name: AddEntry
  nameWithType: AtomFeed.AddEntry
  fullName: Argotic.Syndication.AtomFeed.AddEntry
- uid: Argotic.Syndication.AtomFeed.AddExtension*
  commentId: Overload:Argotic.Syndication.AtomFeed.AddExtension
  name: AddExtension
  nameWithType: AtomFeed.AddExtension
  fullName: Argotic.Syndication.AtomFeed.AddExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: AddExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.AddExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Syndication.AtomFeed.CreateNavigator*
  commentId: Overload:Argotic.Syndication.AtomFeed.CreateNavigator
  name: CreateNavigator
  nameWithType: AtomFeed.CreateNavigator
  fullName: Argotic.Syndication.AtomFeed.CreateNavigator
- uid: Argotic.Common.ISyndicationResource.CreateNavigator
  commentId: M:Argotic.Common.ISyndicationResource.CreateNavigator
  parent: Argotic.Common.ISyndicationResource
  name: CreateNavigator()
  nameWithType: ISyndicationResource.CreateNavigator()
  fullName: Argotic.Common.ISyndicationResource.CreateNavigator()
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.CreateNavigator
    name: CreateNavigator
    nameWithType: ISyndicationResource.CreateNavigator
    fullName: Argotic.Common.ISyndicationResource.CreateNavigator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.CreateNavigator
    name: CreateNavigator
    nameWithType: ISyndicationResource.CreateNavigator
    fullName: Argotic.Common.ISyndicationResource.CreateNavigator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomFeed.FindExtension*
  commentId: Overload:Argotic.Syndication.AtomFeed.FindExtension
  name: FindExtension
  nameWithType: AtomFeed.FindExtension
  fullName: Argotic.Syndication.AtomFeed.FindExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  isExternal: true
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: IExtensibleSyndicationObject.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  nameWithType.vb: IExtensibleSyndicationObject.FindExtension(Predicate(Of ISyndicationExtension))
  fullName.vb: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Predicate{Argotic.Extensions.ISyndicationExtension}
  parent: System
  definition: System.Predicate`1
  name: Predicate<ISyndicationExtension>
  nameWithType: Predicate<ISyndicationExtension>
  fullName: System.Predicate<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: Predicate(Of ISyndicationExtension)
  fullName.vb: System.Predicate(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: Predicate(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: true
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: Argotic.Syndication.AtomFeed.Loaded
  commentId: E:Argotic.Syndication.AtomFeed.Loaded
  isExternal: true
- uid: System.Xml.XmlException
  commentId: T:System.Xml.XmlException
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.Load*
  commentId: Overload:Argotic.Syndication.AtomFeed.Load
  name: Load
  nameWithType: AtomFeed.Load
  fullName: Argotic.Syndication.AtomFeed.Load
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(IXPathNavigable)
  nameWithType: ISyndicationResource.Load(IXPathNavigable)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(IXPathNavigable, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(IXPathNavigable, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XPath.IXPathNavigable
    name: IXPathNavigable
    nameWithType: IXPathNavigable
    fullName: System.Xml.XPath.IXPathNavigable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Stream)
  nameWithType: ISyndicationResource.Load(Stream)
  fullName: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Stream, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(Stream, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.IO.Stream, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(XmlReader)
  nameWithType: ISyndicationResource.Load(XmlReader)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(XmlReader, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(XmlReader, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.WebRequest
  commentId: T:System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, ICredentials, IWebProxy)
  nameWithType: ISyndicationResource.Load(Uri, ICredentials, IWebProxy)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, WebRequestOptions)
  nameWithType: ISyndicationResource.Load(Uri, WebRequestOptions)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, Argotic.Common.WebRequestOptions)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  commentId: P:Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding
  isExternal: true
- uid: System.Text.Encoding.UTF8
  commentId: P:System.Text.Encoding.UTF8
  isExternal: true
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(Uri, ICredentials, IWebProxy, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, System.Net.ICredentials, System.Net.IWebProxy, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  nameWithType: ISyndicationResource.Load(Uri, WebRequestOptions, SyndicationResourceLoadSettings)
  fullName: Argotic.Common.ISyndicationResource.Load(System.Uri, Argotic.Common.WebRequestOptions, Argotic.Common.SyndicationResourceLoadSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Load(System.Uri,Argotic.Common.WebRequestOptions,Argotic.Common.SyndicationResourceLoadSettings)
    name: Load
    nameWithType: ISyndicationResource.Load
    fullName: Argotic.Common.ISyndicationResource.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  commentId: M:Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.LoadAsyncCancel
  commentId: M:Argotic.Syndication.AtomFeed.LoadAsyncCancel
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,System.Object)
  commentId: M:Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,System.Object)
  isExternal: true
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Argotic.Syndication.AtomFeed.LoadAsync*
  commentId: Overload:Argotic.Syndication.AtomFeed.LoadAsync
  name: LoadAsync
  nameWithType: AtomFeed.LoadAsync
  fullName: Argotic.Syndication.AtomFeed.LoadAsync
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  commentId: M:Argotic.Syndication.AtomFeed.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  isExternal: true
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, SyndicationResourceLoadSettings, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, SyndicationResourceLoadSettings, ICredentials, IWebProxy, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, System.Net.ICredentials, System.Net.IWebProxy, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.ICredentials
    name: ICredentials
    nameWithType: ICredentials
    fullName: System.Net.ICredentials
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Net.IWebProxy
    name: IWebProxy
    nameWithType: IWebProxy
    fullName: System.Net.IWebProxy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  nameWithType: ISyndicationResource.LoadAsync(Uri, SyndicationResourceLoadSettings, WebRequestOptions, Object)
  fullName: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri, Argotic.Common.SyndicationResourceLoadSettings, Argotic.Common.WebRequestOptions, System.Object)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.WebRequestOptions,System.Object)
    name: LoadAsync
    nameWithType: ISyndicationResource.LoadAsync
    fullName: Argotic.Common.ISyndicationResource.LoadAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceLoadSettings
    name: SyndicationResourceLoadSettings
    nameWithType: SyndicationResourceLoadSettings
    fullName: Argotic.Common.SyndicationResourceLoadSettings
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.WebRequestOptions
    name: WebRequestOptions
    nameWithType: WebRequestOptions
    fullName: Argotic.Common.WebRequestOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomFeed.LoadAsyncCancel*
  commentId: Overload:Argotic.Syndication.AtomFeed.LoadAsyncCancel
  name: LoadAsyncCancel
  nameWithType: AtomFeed.LoadAsyncCancel
  fullName: Argotic.Syndication.AtomFeed.LoadAsyncCancel
- uid: Argotic.Common.ISyndicationResource.LoadAsyncCancel
  commentId: M:Argotic.Common.ISyndicationResource.LoadAsyncCancel
  parent: Argotic.Common.ISyndicationResource
  name: LoadAsyncCancel()
  nameWithType: ISyndicationResource.LoadAsyncCancel()
  fullName: Argotic.Common.ISyndicationResource.LoadAsyncCancel()
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.LoadAsyncCancel
    name: LoadAsyncCancel
    nameWithType: ISyndicationResource.LoadAsyncCancel
    fullName: Argotic.Common.ISyndicationResource.LoadAsyncCancel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.LoadAsyncCancel
    name: LoadAsyncCancel
    nameWithType: ISyndicationResource.LoadAsyncCancel
    fullName: Argotic.Common.ISyndicationResource.LoadAsyncCancel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomFeed.RemoveEntry*
  commentId: Overload:Argotic.Syndication.AtomFeed.RemoveEntry
  name: RemoveEntry
  nameWithType: AtomFeed.RemoveEntry
  fullName: Argotic.Syndication.AtomFeed.RemoveEntry
- uid: Argotic.Syndication.AtomFeed.RemoveExtension*
  commentId: Overload:Argotic.Syndication.AtomFeed.RemoveExtension
  name: RemoveExtension
  nameWithType: AtomFeed.RemoveExtension
  fullName: Argotic.Syndication.AtomFeed.RemoveExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.AtomFeed.Save*
  commentId: Overload:Argotic.Syndication.AtomFeed.Save
  name: Save
  nameWithType: AtomFeed.Save
  fullName: Argotic.Syndication.AtomFeed.Save
- uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(Stream)
  nameWithType: ISyndicationResource.Save(Stream)
  fullName: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceSaveSettings
  commentId: T:Argotic.Common.SyndicationResourceSaveSettings
  parent: Argotic.Common
  name: SyndicationResourceSaveSettings
  nameWithType: SyndicationResourceSaveSettings
  fullName: Argotic.Common.SyndicationResourceSaveSettings
- uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(Stream, SyndicationResourceSaveSettings)
  nameWithType: ISyndicationResource.Save(Stream, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.ISyndicationResource.Save(System.IO.Stream, Argotic.Common.SyndicationResourceSaveSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(XmlWriter)
  nameWithType: ISyndicationResource.Save(XmlWriter)
  fullName: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  commentId: M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
  parent: Argotic.Common.ISyndicationResource
  isExternal: true
  name: Save(XmlWriter, SyndicationResourceSaveSettings)
  nameWithType: ISyndicationResource.Save(XmlWriter, SyndicationResourceSaveSettings)
  fullName: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter, Argotic.Common.SyndicationResourceSaveSettings)
  spec.csharp:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)
    name: Save
    nameWithType: ISyndicationResource.Save
    fullName: Argotic.Common.ISyndicationResource.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Argotic.Common.SyndicationResourceSaveSettings
    name: SyndicationResourceSaveSettings
    nameWithType: SyndicationResourceSaveSettings
    fullName: Argotic.Common.SyndicationResourceSaveSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Common.SyndicationResourceLoadedEventArgs
  commentId: T:Argotic.Common.SyndicationResourceLoadedEventArgs
  parent: Argotic.Common
  name: SyndicationResourceLoadedEventArgs
  nameWithType: SyndicationResourceLoadedEventArgs
  fullName: Argotic.Common.SyndicationResourceLoadedEventArgs
- uid: Argotic.Syndication.AtomFeed.OnFeedLoaded*
  commentId: Overload:Argotic.Syndication.AtomFeed.OnFeedLoaded
  name: OnFeedLoaded
  nameWithType: AtomFeed.OnFeedLoaded
  fullName: Argotic.Syndication.AtomFeed.OnFeedLoaded
