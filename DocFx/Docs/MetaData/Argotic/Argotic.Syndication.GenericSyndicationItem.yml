### YamlMime:ManagedReference
items:
- uid: Argotic.Syndication.GenericSyndicationItem
  commentId: T:Argotic.Syndication.GenericSyndicationItem
  id: GenericSyndicationItem
  parent: Argotic.Syndication
  children:
  - Argotic.Syndication.GenericSyndicationItem.#ctor(Argotic.Syndication.AtomEntry)
  - Argotic.Syndication.GenericSyndicationItem.#ctor(Argotic.Syndication.RssItem)
  - Argotic.Syndication.GenericSyndicationItem.Categories
  - Argotic.Syndication.GenericSyndicationItem.CompareTo(System.Object)
  - Argotic.Syndication.GenericSyndicationItem.Equals(System.Object)
  - Argotic.Syndication.GenericSyndicationItem.GetHashCode
  - Argotic.Syndication.GenericSyndicationItem.op_Equality(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  - Argotic.Syndication.GenericSyndicationItem.op_GreaterThan(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  - Argotic.Syndication.GenericSyndicationItem.op_Inequality(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  - Argotic.Syndication.GenericSyndicationItem.op_LessThan(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  - Argotic.Syndication.GenericSyndicationItem.PublishedOn
  - Argotic.Syndication.GenericSyndicationItem.Summary
  - Argotic.Syndication.GenericSyndicationItem.Title
  - Argotic.Syndication.GenericSyndicationItem.ToString
  langs:
  - csharp
  - vb
  name: GenericSyndicationItem
  nameWithType: GenericSyndicationItem
  fullName: Argotic.Syndication.GenericSyndicationItem
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GenericSyndicationItem
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 11
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nRepresents a format agnostic view of the discrete content for a syndication feed.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class GenericSyndicationItem : IComparable
    content.vb: >-
      <Serializable>

      Public Class GenericSyndicationItem

          Implements IComparable
  seealso:
  - linkId: Argotic.Syndication.GenericSyndicationFeed.Items
    commentId: P:Argotic.Syndication.GenericSyndicationFeed.Items
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Syndication.GenericSyndicationItem.#ctor(Argotic.Syndication.AtomEntry)
  commentId: M:Argotic.Syndication.GenericSyndicationItem.#ctor(Argotic.Syndication.AtomEntry)
  id: '#ctor(Argotic.Syndication.AtomEntry)'
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: GenericSyndicationItem(AtomEntry)
  nameWithType: GenericSyndicationItem.GenericSyndicationItem(AtomEntry)
  fullName: Argotic.Syndication.GenericSyndicationItem.GenericSyndicationItem(Argotic.Syndication.AtomEntry)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 39
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Syndication.GenericSyndicationItem\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public GenericSyndicationItem(AtomEntry entry)
    parameters:
    - id: entry
      type: Argotic.Syndication.AtomEntry
      description: The <xref href="Argotic.Syndication.AtomEntry" data-throw-if-not-resolved="false"></xref> to build an abstraction against.
    content.vb: Public Sub New(entry As AtomEntry)
  overload: Argotic.Syndication.GenericSyndicationItem.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">entry</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.GenericSyndicationItem.#ctor(Argotic.Syndication.RssItem)
  commentId: M:Argotic.Syndication.GenericSyndicationItem.#ctor(Argotic.Syndication.RssItem)
  id: '#ctor(Argotic.Syndication.RssItem)'
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: GenericSyndicationItem(RssItem)
  nameWithType: GenericSyndicationItem.GenericSyndicationItem(RssItem)
  fullName: Argotic.Syndication.GenericSyndicationItem.GenericSyndicationItem(Argotic.Syndication.RssItem)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 50
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Syndication.GenericSyndicationItem\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied <xref href=\"Argotic.Syndication.RssItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public GenericSyndicationItem(RssItem item)
    parameters:
    - id: item
      type: Argotic.Syndication.RssItem
      description: The <xref href="Argotic.Syndication.RssItem" data-throw-if-not-resolved="false"></xref> to build an abstraction against.
    content.vb: Public Sub New(item As RssItem)
  overload: Argotic.Syndication.GenericSyndicationItem.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">item</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.GenericSyndicationItem.Categories
  commentId: P:Argotic.Syndication.GenericSyndicationItem.Categories
  id: Categories
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: GenericSyndicationItem.Categories
  fullName: Argotic.Syndication.GenericSyndicationItem.Categories
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Categories
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 62
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets the categories associated with this item.\n"
  example: []
  syntax:
    content: public Collection<GenericSyndicationCategory> Categories { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.GenericSyndicationCategory}
      description: "\nA <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Syndication.GenericSyndicationCategory\" data-throw-if-not-resolved=\"false\"></xref> objects that represent the categories associated with this item.\n"
    content.vb: Public ReadOnly Property Categories As Collection(Of GenericSyndicationCategory)
  overload: Argotic.Syndication.GenericSyndicationItem.Categories*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.GenericSyndicationItem.PublishedOn
  commentId: P:Argotic.Syndication.GenericSyndicationItem.PublishedOn
  id: PublishedOn
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: PublishedOn
  nameWithType: GenericSyndicationItem.PublishedOn
  fullName: Argotic.Syndication.GenericSyndicationItem.PublishedOn
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: PublishedOn
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 87
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets a date-time indicating an instant in time associated with an event early in the life cycle of this item.\n"
  remarks: "\nWhen an <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> is being abstracted by this generic item, the <xref href=\"Argotic.Syndication.GenericSyndicationItem.PublishedOn\" data-throw-if-not-resolved=\"false\"></xref> will represent\nthe <xref href=\"Argotic.Syndication.AtomEntry.PublishedOn\" data-throw-if-not-resolved=\"false\"></xref> property value if present. If no summary was specified for the <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref>,\nthe <xref href=\"Argotic.Syndication.AtomEntry.UpdatedOn\" data-throw-if-not-resolved=\"false\"></xref> property value will be used if present.\n"
  example: []
  syntax:
    content: public DateTime PublishedOn { get; }
    parameters: []
    return:
      type: System.DateTime
      description: "\nA <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object that represents a date-time indicating an instant in time associated with an event early in the life cycle of this item.\nThe default value is <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that publication date was specified.\n"
    content.vb: Public ReadOnly Property PublishedOn As Date
  overload: Argotic.Syndication.GenericSyndicationItem.PublishedOn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.GenericSyndicationItem.Summary
  commentId: P:Argotic.Syndication.GenericSyndicationItem.Summary
  id: Summary
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: GenericSyndicationItem.Summary
  fullName: Argotic.Syndication.GenericSyndicationItem.Summary
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Summary
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 107
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets a short summary, abstract, or excerpt for this item.\n"
  remarks: "\nWhen an <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref> is being abstracted by this generic item, the <xref href=\"Argotic.Syndication.GenericSyndicationItem.Summary\" data-throw-if-not-resolved=\"false\"></xref> will represent\nthe <xref href=\"Argotic.Syndication.AtomEntry.Summary\" data-throw-if-not-resolved=\"false\"></xref> property value if present. If no summary was specified for the <xref href=\"Argotic.Syndication.AtomEntry\" data-throw-if-not-resolved=\"false\"></xref>,\nthe <xref href=\"Argotic.Syndication.AtomEntry.Content\" data-throw-if-not-resolved=\"false\"></xref> property value will be used if present.\n"
  example: []
  syntax:
    content: public string Summary { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA short summary, abstract, or excerpt for this item.\nThe default value is an <strong>empty</strong> string, which indicates that no excerpt was specified.\n"
    content.vb: Public ReadOnly Property Summary As String
  overload: Argotic.Syndication.GenericSyndicationItem.Summary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.GenericSyndicationItem.Title
  commentId: P:Argotic.Syndication.GenericSyndicationItem.Title
  id: Title
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: GenericSyndicationItem.Title
  fullName: Argotic.Syndication.GenericSyndicationItem.Title
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Title
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 122
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets the human-readable title for this item.\n"
  example: []
  syntax:
    content: public string Title { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe human-readable title for this item.\nThe default value is an <strong>empty</strong> string, which indicates that no title was specified.\n"
    content.vb: Public ReadOnly Property Title As String
  overload: Argotic.Syndication.GenericSyndicationItem.Title*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.GenericSyndicationItem.op_Equality(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  commentId: M:Argotic.Syndication.GenericSyndicationItem.op_Equality(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  id: op_Equality(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: Equality(GenericSyndicationItem, GenericSyndicationItem)
  nameWithType: GenericSyndicationItem.Equality(GenericSyndicationItem, GenericSyndicationItem)
  fullName: Argotic.Syndication.GenericSyndicationItem.Equality(Argotic.Syndication.GenericSyndicationItem, Argotic.Syndication.GenericSyndicationItem)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 136
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(GenericSyndicationItem first, GenericSyndicationItem second)
    parameters:
    - id: first
      type: Argotic.Syndication.GenericSyndicationItem
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.GenericSyndicationItem
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As GenericSyndicationItem, second As GenericSyndicationItem) As Boolean
  overload: Argotic.Syndication.GenericSyndicationItem.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.GenericSyndicationItem.op_GreaterThan(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  commentId: M:Argotic.Syndication.GenericSyndicationItem.op_GreaterThan(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  id: op_GreaterThan(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: GreaterThan(GenericSyndicationItem, GenericSyndicationItem)
  nameWithType: GenericSyndicationItem.GreaterThan(GenericSyndicationItem, GenericSyndicationItem)
  fullName: Argotic.Syndication.GenericSyndicationItem.GreaterThan(Argotic.Syndication.GenericSyndicationItem, Argotic.Syndication.GenericSyndicationItem)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 157
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(GenericSyndicationItem first, GenericSyndicationItem second)
    parameters:
    - id: first
      type: Argotic.Syndication.GenericSyndicationItem
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.GenericSyndicationItem
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As GenericSyndicationItem, second As GenericSyndicationItem) As Boolean
  overload: Argotic.Syndication.GenericSyndicationItem.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.GenericSyndicationItem.op_Inequality(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  commentId: M:Argotic.Syndication.GenericSyndicationItem.op_Inequality(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  id: op_Inequality(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: Inequality(GenericSyndicationItem, GenericSyndicationItem)
  nameWithType: GenericSyndicationItem.Inequality(GenericSyndicationItem, GenericSyndicationItem)
  fullName: Argotic.Syndication.GenericSyndicationItem.Inequality(Argotic.Syndication.GenericSyndicationItem, Argotic.Syndication.GenericSyndicationItem)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 178
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(GenericSyndicationItem first, GenericSyndicationItem second)
    parameters:
    - id: first
      type: Argotic.Syndication.GenericSyndicationItem
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.GenericSyndicationItem
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As GenericSyndicationItem, second As GenericSyndicationItem) As Boolean
  overload: Argotic.Syndication.GenericSyndicationItem.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.GenericSyndicationItem.op_LessThan(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  commentId: M:Argotic.Syndication.GenericSyndicationItem.op_LessThan(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  id: op_LessThan(Argotic.Syndication.GenericSyndicationItem,Argotic.Syndication.GenericSyndicationItem)
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: LessThan(GenericSyndicationItem, GenericSyndicationItem)
  nameWithType: GenericSyndicationItem.LessThan(GenericSyndicationItem, GenericSyndicationItem)
  fullName: Argotic.Syndication.GenericSyndicationItem.LessThan(Argotic.Syndication.GenericSyndicationItem, Argotic.Syndication.GenericSyndicationItem)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 189
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(GenericSyndicationItem first, GenericSyndicationItem second)
    parameters:
    - id: first
      type: Argotic.Syndication.GenericSyndicationItem
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.GenericSyndicationItem
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As GenericSyndicationItem, second As GenericSyndicationItem) As Boolean
  overload: Argotic.Syndication.GenericSyndicationItem.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.GenericSyndicationItem.CompareTo(System.Object)
  commentId: M:Argotic.Syndication.GenericSyndicationItem.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: GenericSyndicationItem.CompareTo(Object)
  fullName: Argotic.Syndication.GenericSyndicationItem.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 210
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Syndication.GenericSyndicationItem.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.GenericSyndicationItem.Equals(System.Object)
  commentId: M:Argotic.Syndication.GenericSyndicationItem.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: GenericSyndicationItem.Equals(Object)
  fullName: Argotic.Syndication.GenericSyndicationItem.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 242
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Syndication.GenericSyndicationItem.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.GenericSyndicationItem.GetHashCode
  commentId: M:Argotic.Syndication.GenericSyndicationItem.GetHashCode
  id: GetHashCode
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: GenericSyndicationItem.GetHashCode()
  fullName: Argotic.Syndication.GenericSyndicationItem.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 256
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Syndication.GenericSyndicationItem.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.GenericSyndicationItem.ToString
  commentId: M:Argotic.Syndication.GenericSyndicationItem.ToString
  id: ToString
  parent: Argotic.Syndication.GenericSyndicationItem
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: GenericSyndicationItem.ToString()
  fullName: Argotic.Syndication.GenericSyndicationItem.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Core/Syndication/GenericSyndicationItem.cs
    startLine: 270
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Syndication.GenericSyndicationItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns a human-readable representation for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Syndication.GenericSyndicationItem" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Syndication.GenericSyndicationItem.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Argotic.Syndication.GenericSyndicationFeed.Items
  commentId: P:Argotic.Syndication.GenericSyndicationFeed.Items
  isExternal: true
- uid: Argotic.Syndication
  commentId: N:Argotic.Syndication
  name: Argotic.Syndication
  nameWithType: Argotic.Syndication
  fullName: Argotic.Syndication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Syndication.GenericSyndicationItem
  commentId: T:Argotic.Syndication.GenericSyndicationItem
  parent: Argotic.Syndication
  name: GenericSyndicationItem
  nameWithType: GenericSyndicationItem
  fullName: Argotic.Syndication.GenericSyndicationItem
- uid: Argotic.Syndication.AtomEntry
  commentId: T:Argotic.Syndication.AtomEntry
  parent: Argotic.Syndication
  name: AtomEntry
  nameWithType: AtomEntry
  fullName: Argotic.Syndication.AtomEntry
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Argotic.Syndication.GenericSyndicationItem.#ctor*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.#ctor
  name: GenericSyndicationItem
  nameWithType: GenericSyndicationItem.GenericSyndicationItem
  fullName: Argotic.Syndication.GenericSyndicationItem.GenericSyndicationItem
- uid: Argotic.Syndication.RssItem
  commentId: T:Argotic.Syndication.RssItem
  parent: Argotic.Syndication
  name: RssItem
  nameWithType: RssItem
  fullName: Argotic.Syndication.RssItem
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.GenericSyndicationCategory
  commentId: T:Argotic.Syndication.GenericSyndicationCategory
  parent: Argotic.Syndication
  name: GenericSyndicationCategory
  nameWithType: GenericSyndicationCategory
  fullName: Argotic.Syndication.GenericSyndicationCategory
- uid: Argotic.Syndication.GenericSyndicationItem.Categories*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.Categories
  name: Categories
  nameWithType: GenericSyndicationItem.Categories
  fullName: Argotic.Syndication.GenericSyndicationItem.Categories
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.GenericSyndicationCategory}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.GenericSyndicationCategory}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<GenericSyndicationCategory>
  nameWithType: Collection<GenericSyndicationCategory>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.GenericSyndicationCategory>
  nameWithType.vb: Collection(Of GenericSyndicationCategory)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.GenericSyndicationCategory)
  name.vb: Collection(Of GenericSyndicationCategory)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.GenericSyndicationCategory
    name: GenericSyndicationCategory
    nameWithType: GenericSyndicationCategory
    fullName: Argotic.Syndication.GenericSyndicationCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.GenericSyndicationCategory
    name: GenericSyndicationCategory
    nameWithType: GenericSyndicationCategory
    fullName: Argotic.Syndication.GenericSyndicationCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTime.MinValue
  commentId: F:System.DateTime.MinValue
  isExternal: true
- uid: Argotic.Syndication.GenericSyndicationItem.PublishedOn
  commentId: P:Argotic.Syndication.GenericSyndicationItem.PublishedOn
  isExternal: true
- uid: Argotic.Syndication.AtomEntry.PublishedOn
  commentId: P:Argotic.Syndication.AtomEntry.PublishedOn
  parent: Argotic.Syndication.AtomEntry
  name: PublishedOn
  nameWithType: AtomEntry.PublishedOn
  fullName: Argotic.Syndication.AtomEntry.PublishedOn
- uid: Argotic.Syndication.AtomEntry.UpdatedOn
  commentId: P:Argotic.Syndication.AtomEntry.UpdatedOn
  parent: Argotic.Syndication.AtomEntry
  name: UpdatedOn
  nameWithType: AtomEntry.UpdatedOn
  fullName: Argotic.Syndication.AtomEntry.UpdatedOn
- uid: Argotic.Syndication.GenericSyndicationItem.PublishedOn*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.PublishedOn
  name: PublishedOn
  nameWithType: GenericSyndicationItem.PublishedOn
  fullName: Argotic.Syndication.GenericSyndicationItem.PublishedOn
- uid: Argotic.Syndication.GenericSyndicationItem.Summary
  commentId: P:Argotic.Syndication.GenericSyndicationItem.Summary
  isExternal: true
- uid: Argotic.Syndication.AtomEntry.Summary
  commentId: P:Argotic.Syndication.AtomEntry.Summary
  parent: Argotic.Syndication.AtomEntry
  name: Summary
  nameWithType: AtomEntry.Summary
  fullName: Argotic.Syndication.AtomEntry.Summary
- uid: Argotic.Syndication.AtomEntry.Content
  commentId: P:Argotic.Syndication.AtomEntry.Content
  parent: Argotic.Syndication.AtomEntry
  name: Content
  nameWithType: AtomEntry.Content
  fullName: Argotic.Syndication.AtomEntry.Content
- uid: Argotic.Syndication.GenericSyndicationItem.Summary*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.Summary
  name: Summary
  nameWithType: GenericSyndicationItem.Summary
  fullName: Argotic.Syndication.GenericSyndicationItem.Summary
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Argotic.Syndication.GenericSyndicationItem.Title*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.Title
  name: Title
  nameWithType: GenericSyndicationItem.Title
  fullName: Argotic.Syndication.GenericSyndicationItem.Title
- uid: Argotic.Syndication.GenericSyndicationItem.op_Equality*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.op_Equality
  name: Equality
  nameWithType: GenericSyndicationItem.Equality
  fullName: Argotic.Syndication.GenericSyndicationItem.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Syndication.GenericSyndicationItem.op_GreaterThan*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.op_GreaterThan
  name: GreaterThan
  nameWithType: GenericSyndicationItem.GreaterThan
  fullName: Argotic.Syndication.GenericSyndicationItem.GreaterThan
- uid: Argotic.Syndication.GenericSyndicationItem.op_Inequality*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.op_Inequality
  name: Inequality
  nameWithType: GenericSyndicationItem.Inequality
  fullName: Argotic.Syndication.GenericSyndicationItem.Inequality
- uid: Argotic.Syndication.GenericSyndicationItem.op_LessThan*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.op_LessThan
  name: LessThan
  nameWithType: GenericSyndicationItem.LessThan
  fullName: Argotic.Syndication.GenericSyndicationItem.LessThan
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Syndication.GenericSyndicationItem.CompareTo*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.CompareTo
  name: CompareTo
  nameWithType: GenericSyndicationItem.CompareTo
  fullName: Argotic.Syndication.GenericSyndicationItem.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.GenericSyndicationItem.Equals*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.Equals
  name: Equals
  nameWithType: GenericSyndicationItem.Equals
  fullName: Argotic.Syndication.GenericSyndicationItem.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.GenericSyndicationItem.GetHashCode*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.GetHashCode
  name: GetHashCode
  nameWithType: GenericSyndicationItem.GetHashCode
  fullName: Argotic.Syndication.GenericSyndicationItem.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.GenericSyndicationItem.ToString*
  commentId: Overload:Argotic.Syndication.GenericSyndicationItem.ToString
  name: ToString
  nameWithType: GenericSyndicationItem.ToString
  fullName: Argotic.Syndication.GenericSyndicationItem.ToString
