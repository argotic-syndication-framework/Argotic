### YamlMime:ManagedReference
items:
- uid: Argotic.Syndication.RssEnclosure
  commentId: T:Argotic.Syndication.RssEnclosure
  id: RssEnclosure
  parent: Argotic.Syndication
  children:
  - Argotic.Syndication.RssEnclosure.#ctor
  - Argotic.Syndication.RssEnclosure.#ctor(System.Int64,System.String,System.Uri)
  - Argotic.Syndication.RssEnclosure.AddExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Syndication.RssEnclosure.CompareTo(System.Object)
  - Argotic.Syndication.RssEnclosure.ContentType
  - Argotic.Syndication.RssEnclosure.Equals(System.Object)
  - Argotic.Syndication.RssEnclosure.Extensions
  - Argotic.Syndication.RssEnclosure.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  - Argotic.Syndication.RssEnclosure.GetHashCode
  - Argotic.Syndication.RssEnclosure.HasExtensions
  - Argotic.Syndication.RssEnclosure.Length
  - Argotic.Syndication.RssEnclosure.Load(System.Xml.XPath.XPathNavigator)
  - Argotic.Syndication.RssEnclosure.Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.RssEnclosure.op_Equality(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  - Argotic.Syndication.RssEnclosure.op_GreaterThan(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  - Argotic.Syndication.RssEnclosure.op_Inequality(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  - Argotic.Syndication.RssEnclosure.op_LessThan(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  - Argotic.Syndication.RssEnclosure.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Syndication.RssEnclosure.ToString
  - Argotic.Syndication.RssEnclosure.Url
  - Argotic.Syndication.RssEnclosure.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: RssEnclosure
  nameWithType: RssEnclosure
  fullName: Argotic.Syndication.RssEnclosure
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RssEnclosure
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 28
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nRepresents a media object such as an audio, video, or executable file that can be associated with an <xref href=\"Argotic.Syndication.RssItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>\n    Support for the enclosure element in RSS software varies significantly because of disagreement over whether the specification permits more than one enclosure per item.\n    Although the original author intended to permit no more than one enclosure in each item, this limit is not explicit in the specification.\n    For best support in the widest number of aggregators, an item <em>should not</em> contain more than one enclosure.\n</p>\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\Rss\\RssEnclosureExample.cs\" region=\"RssEnclosure\"></code></pre>\n</code></pre>\n"
  syntax:
    content: >-
      [Serializable]

      public class RssEnclosure : IComparable, IExtensibleSyndicationObject
    content.vb: >-
      <Serializable>

      Public Class RssEnclosure

          Implements IComparable, IExtensibleSyndicationObject
  seealso:
  - linkId: Argotic.Syndication.RssItem.Enclosures
    commentId: P:Argotic.Syndication.RssItem.Enclosures
  inheritance:
  - System.Object
  implements:
  - System.IComparable
  - Argotic.Extensions.IExtensibleSyndicationObject
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Syndication.RssEnclosure.#ctor
  commentId: M:Argotic.Syndication.RssEnclosure.#ctor
  id: '#ctor'
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: RssEnclosure()
  nameWithType: RssEnclosure.RssEnclosure()
  fullName: Argotic.Syndication.RssEnclosure.RssEnclosure()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 58
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Syndication.RssEnclosure\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RssEnclosure()
    content.vb: Public Sub New
  overload: Argotic.Syndication.RssEnclosure.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.#ctor(System.Int64,System.String,System.Uri)
  commentId: M:Argotic.Syndication.RssEnclosure.#ctor(System.Int64,System.String,System.Uri)
  id: '#ctor(System.Int64,System.String,System.Uri)'
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: RssEnclosure(Int64, String, Uri)
  nameWithType: RssEnclosure.RssEnclosure(Int64, String, Uri)
  fullName: Argotic.Syndication.RssEnclosure.RssEnclosure(System.Int64, System.String, System.Uri)
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 72
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Syndication.RssEnclosure\" data-throw-if-not-resolved=\"false\"></xref> class using the supplied length, MIME type, and <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RssEnclosure(long length, string type, Uri url)
    parameters:
    - id: length
      type: System.Int64
      description: The size, in bytes, of the media object.
    - id: type
      type: System.String
      description: The media object&apos;s MIME content type.
    - id: url
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the media object.
    content.vb: Public Sub New(length As Long, type As String, url As Uri)
  overload: Argotic.Syndication.RssEnclosure.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">type</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">type</code> is an empty string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">length</code> is less than <em>zero</em>.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">url</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.ContentType
  commentId: P:Argotic.Syndication.RssEnclosure.ContentType
  id: ContentType
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: RssEnclosure.ContentType
  fullName: Argotic.Syndication.RssEnclosure.ContentType
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ContentType
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 88
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the media object&apos;s MIME content type.\n"
  remarks: "\nSee <a href=\"http://www.iana.org/assignments/media-types/\">http://www.iana.org/assignments/media-types/</a> for a listing of the registered IANA MIME media types.\n"
  example: []
  syntax:
    content: public string ContentType { get; set; }
    parameters: []
    return:
      type: System.String
      description: The media object&apos;s MIME content type.
    content.vb: Public Property ContentType As String
  overload: Argotic.Syndication.RssEnclosure.ContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is an empty string.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.Extensions
  commentId: P:Argotic.Syndication.RssEnclosure.Extensions
  id: Extensions
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: RssEnclosure.Extensions
  fullName: Argotic.Syndication.RssEnclosure.Extensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Extensions
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 110
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the syndication extensions applied to this syndication entity.\n"
  remarks: "\nThis <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public IEnumerable<ISyndicationExtension> Extensions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects that represent syndication extensions applied to this syndication entity.
    content.vb: Public Property Extensions As IEnumerable(Of ISyndicationExtension)
  overload: Argotic.Syndication.RssEnclosure.Extensions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.HasExtensions
  commentId: P:Argotic.Syndication.RssEnclosure.HasExtensions
  id: HasExtensions
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: HasExtensions
  nameWithType: RssEnclosure.HasExtensions
  fullName: Argotic.Syndication.RssEnclosure.HasExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: HasExtensions
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 133
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets a value indicating whether gets a value indicating if this syndication entity has one or more syndication extensions applied to it.\n"
  example: []
  syntax:
    content: public bool HasExtensions { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.RssEnclosure.Extensions" data-throw-if-not-resolved="false"></xref> collection for this entity contains one or more <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects, otherwise returns <strong>false</strong>.
    content.vb: Public ReadOnly Property HasExtensions As Boolean
  overload: Argotic.Syndication.RssEnclosure.HasExtensions*
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.RssEnclosure.Length
  commentId: P:Argotic.Syndication.RssEnclosure.Length
  id: Length
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: RssEnclosure.Length
  fullName: Argotic.Syndication.RssEnclosure.Length
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Length
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 157
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the size of the media object.\n"
  remarks: "\n<p>\n    Though an enclosure <strong>must</strong> specify its size with the length attribute, the size of some media objects cannot be determined by an RSS publisher.\n    When an enclosure&apos;s size cannot be determined, a publisher <em>should</em> use a length of 0.\n</p>\n<p>\n    The peer-to-peer file-sharing protocol BitTorrent deploys files using a small key file called a torrent that tells a client how to find and download the file.\n    When an enclosure is delivered in a multi-step process like the one used by BitTorrent, the length <em>should</em> be the size\n    of the first file that must be downloaded to begin the process.\n</p>\n"
  example: []
  syntax:
    content: public long Length { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The size, in bytes, of the media object. The default value is <xref href="System.Int64.MinValue" data-throw-if-not-resolved="false"></xref>, which indicates that no size was specified.
    content.vb: Public Property Length As Long
  overload: Argotic.Syndication.RssEnclosure.Length*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is less than <em>zero</em>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.Url
  commentId: P:Argotic.Syndication.RssEnclosure.Url
  id: Url
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: RssEnclosure.Url
  fullName: Argotic.Syndication.RssEnclosure.Url
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Url
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 176
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nGets or sets the URL of the media object.\n"
  example: []
  syntax:
    content: public Uri Url { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of the media object.
    content.vb: Public Property Url As Uri
  overload: Argotic.Syndication.RssEnclosure.Url*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.op_Equality(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  commentId: M:Argotic.Syndication.RssEnclosure.op_Equality(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  id: op_Equality(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: Equality(RssEnclosure, RssEnclosure)
  nameWithType: RssEnclosure.Equality(RssEnclosure, RssEnclosure)
  fullName: Argotic.Syndication.RssEnclosure.Equality(Argotic.Syndication.RssEnclosure, Argotic.Syndication.RssEnclosure)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 196
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(RssEnclosure first, RssEnclosure second)
    parameters:
    - id: first
      type: Argotic.Syndication.RssEnclosure
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.RssEnclosure
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As RssEnclosure, second As RssEnclosure) As Boolean
  overload: Argotic.Syndication.RssEnclosure.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.RssEnclosure.op_GreaterThan(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  commentId: M:Argotic.Syndication.RssEnclosure.op_GreaterThan(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  id: op_GreaterThan(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: GreaterThan(RssEnclosure, RssEnclosure)
  nameWithType: RssEnclosure.GreaterThan(RssEnclosure, RssEnclosure)
  fullName: Argotic.Syndication.RssEnclosure.GreaterThan(Argotic.Syndication.RssEnclosure, Argotic.Syndication.RssEnclosure)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 217
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(RssEnclosure first, RssEnclosure second)
    parameters:
    - id: first
      type: Argotic.Syndication.RssEnclosure
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.RssEnclosure
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As RssEnclosure, second As RssEnclosure) As Boolean
  overload: Argotic.Syndication.RssEnclosure.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.RssEnclosure.op_Inequality(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  commentId: M:Argotic.Syndication.RssEnclosure.op_Inequality(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  id: op_Inequality(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: Inequality(RssEnclosure, RssEnclosure)
  nameWithType: RssEnclosure.Inequality(RssEnclosure, RssEnclosure)
  fullName: Argotic.Syndication.RssEnclosure.Inequality(Argotic.Syndication.RssEnclosure, Argotic.Syndication.RssEnclosure)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 238
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(RssEnclosure first, RssEnclosure second)
    parameters:
    - id: first
      type: Argotic.Syndication.RssEnclosure
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.RssEnclosure
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As RssEnclosure, second As RssEnclosure) As Boolean
  overload: Argotic.Syndication.RssEnclosure.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.RssEnclosure.op_LessThan(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  commentId: M:Argotic.Syndication.RssEnclosure.op_LessThan(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  id: op_LessThan(Argotic.Syndication.RssEnclosure,Argotic.Syndication.RssEnclosure)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: LessThan(RssEnclosure, RssEnclosure)
  nameWithType: RssEnclosure.LessThan(RssEnclosure, RssEnclosure)
  fullName: Argotic.Syndication.RssEnclosure.LessThan(Argotic.Syndication.RssEnclosure, Argotic.Syndication.RssEnclosure)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 249
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(RssEnclosure first, RssEnclosure second)
    parameters:
    - id: first
      type: Argotic.Syndication.RssEnclosure
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.RssEnclosure
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As RssEnclosure, second As RssEnclosure) As Boolean
  overload: Argotic.Syndication.RssEnclosure.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.RssEnclosure.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Syndication.RssEnclosure.AddExtension(Argotic.Extensions.ISyndicationExtension)
  id: AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: AddExtension(ISyndicationExtension)
  nameWithType: RssEnclosure.AddExtension(ISyndicationExtension)
  fullName: Argotic.Syndication.RssEnclosure.AddExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddExtension
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 270
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nAdds the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> to the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Syndication.RssEnclosure.AddExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.CompareTo(System.Object)
  commentId: M:Argotic.Syndication.RssEnclosure.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: RssEnclosure.CompareTo(Object)
  fullName: Argotic.Syndication.RssEnclosure.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 286
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Syndication.RssEnclosure.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.Equals(System.Object)
  commentId: M:Argotic.Syndication.RssEnclosure.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: RssEnclosure.Equals(Object)
  fullName: Argotic.Syndication.RssEnclosure.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 323
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Syndication.RssEnclosure.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.RssEnclosure.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Syndication.RssEnclosure.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  id: FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: RssEnclosure.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Syndication.RssEnclosure.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: FindExtension
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 346
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nSearches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <xref href=\"Argotic.Syndication.RssEnclosure.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nThe <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> is a delegate to a method that returns <strong>true</strong> if the object passed to it matches the conditions defined in the delegate.\nThe elements of the current <xref href=\"Argotic.Syndication.RssEnclosure.Extensions\" data-throw-if-not-resolved=\"false\"></xref> are individually passed to the <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> delegate, moving forward in\nthe <xref href=\"Argotic.Syndication.RssEnclosure.Extensions\" data-throw-if-not-resolved=\"false\"></xref>, starting with the first element and ending with the last element. Processing is stopped when a match is found.\n"
  example: []
  syntax:
    content: public ISyndicationExtension FindExtension(Predicate<ISyndicationExtension> match)
    parameters:
    - id: match
      type: System.Predicate{Argotic.Extensions.ISyndicationExtension}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to search for.
    return:
      type: Argotic.Extensions.ISyndicationExtension
      description: "\nThe first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function FindExtension(match As Predicate(Of ISyndicationExtension)) As ISyndicationExtension
  overload: Argotic.Syndication.RssEnclosure.FindExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">match</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  nameWithType.vb: RssEnclosure.FindExtension(Predicate(Of ISyndicationExtension))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Syndication.RssEnclosure.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
- uid: Argotic.Syndication.RssEnclosure.GetHashCode
  commentId: M:Argotic.Syndication.RssEnclosure.GetHashCode
  id: GetHashCode
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RssEnclosure.GetHashCode()
  fullName: Argotic.Syndication.RssEnclosure.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 357
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Syndication.RssEnclosure.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.RssEnclosure.Load(System.Xml.XPath.XPathNavigator)
  commentId: M:Argotic.Syndication.RssEnclosure.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator)
  nameWithType: RssEnclosure.Load(XPathNavigator)
  fullName: Argotic.Syndication.RssEnclosure.Load(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 373
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads this <xref href=\"Argotic.Syndication.RssEnclosure\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be positioned on the XML element that represents a <xref href=\"Argotic.Syndication.RssEnclosure\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> to extract information from.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.RssEnclosure" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator) As Boolean
  overload: Argotic.Syndication.RssEnclosure.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.RssEnclosure.Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator, SyndicationResourceLoadSettings)
  nameWithType: RssEnclosure.Load(XPathNavigator, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.RssEnclosure.Load(System.Xml.XPath.XPathNavigator, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 436
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nLoads this <xref href=\"Argotic.Syndication.RssEnclosure\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be positioned on the XML element that represents a <xref href=\"Argotic.Syndication.RssEnclosure\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> to extract information from.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> used to configure the load operation.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.RssEnclosure" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator, settings As SyndicationResourceLoadSettings) As Boolean
  overload: Argotic.Syndication.RssEnclosure.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">settings</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Syndication.RssEnclosure.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  id: RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: RssEnclosure.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Syndication.RssEnclosure.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveExtension
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 457
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nRemoves the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> from the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Syndication.RssEnclosure.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection of the current instance does not contain the specified <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Syndication.RssEnclosure.RemoveExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.RssEnclosure.ToString
  commentId: M:Argotic.Syndication.RssEnclosure.ToString
  id: ToString
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RssEnclosure.ToString()
  fullName: Argotic.Syndication.RssEnclosure.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 477
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Syndication.RssEnclosure\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns the XML representation for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Syndication.RssEnclosure" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Syndication.RssEnclosure.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.RssEnclosure.WriteTo(System.Xml.XmlWriter)
  commentId: M:Argotic.Syndication.RssEnclosure.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: Argotic.Syndication.RssEnclosure
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  nameWithType: RssEnclosure.WriteTo(XmlWriter)
  fullName: Argotic.Syndication.RssEnclosure.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WriteTo
    path: ../Solutions/Argotic.Core/Syndication/Rss/RssEnclosure.cs
    startLine: 505
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication
  summary: "\nSaves the current <xref href=\"Argotic.Syndication.RssEnclosure\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> to which you want to save.
    content.vb: Public Sub WriteTo(writer As XmlWriter)
  overload: Argotic.Syndication.RssEnclosure.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Argotic.Syndication.RssItem
  commentId: T:Argotic.Syndication.RssItem
  parent: Argotic.Syndication
  name: RssItem
  nameWithType: RssItem
  fullName: Argotic.Syndication.RssItem
- uid: Argotic.Syndication.RssItem.Enclosures
  commentId: P:Argotic.Syndication.RssItem.Enclosures
  isExternal: true
- uid: Argotic.Syndication
  commentId: N:Argotic.Syndication
  name: Argotic.Syndication
  nameWithType: Argotic.Syndication
  fullName: Argotic.Syndication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: Argotic.Extensions.IExtensibleSyndicationObject
  commentId: T:Argotic.Extensions.IExtensibleSyndicationObject
  parent: Argotic.Extensions
  name: IExtensibleSyndicationObject
  nameWithType: IExtensibleSyndicationObject
  fullName: Argotic.Extensions.IExtensibleSyndicationObject
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Extensions
  commentId: N:Argotic.Extensions
  name: Argotic.Extensions
  nameWithType: Argotic.Extensions
  fullName: Argotic.Extensions
- uid: Argotic.Syndication.RssEnclosure
  commentId: T:Argotic.Syndication.RssEnclosure
  parent: Argotic.Syndication
  name: RssEnclosure
  nameWithType: RssEnclosure
  fullName: Argotic.Syndication.RssEnclosure
- uid: Argotic.Syndication.RssEnclosure.#ctor*
  commentId: Overload:Argotic.Syndication.RssEnclosure.#ctor
  name: RssEnclosure
  nameWithType: RssEnclosure.RssEnclosure
  fullName: Argotic.Syndication.RssEnclosure.RssEnclosure
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Argotic.Syndication.RssEnclosure.ContentType*
  commentId: Overload:Argotic.Syndication.RssEnclosure.ContentType
  name: ContentType
  nameWithType: RssEnclosure.ContentType
  fullName: Argotic.Syndication.RssEnclosure.ContentType
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.ISyndicationExtension
  commentId: T:Argotic.Extensions.ISyndicationExtension
  parent: Argotic.Extensions
  name: ISyndicationExtension
  nameWithType: ISyndicationExtension
  fullName: Argotic.Extensions.ISyndicationExtension
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.RssEnclosure.Extensions*
  commentId: Overload:Argotic.Syndication.RssEnclosure.Extensions
  name: Extensions
  nameWithType: RssEnclosure.Extensions
  fullName: Argotic.Syndication.RssEnclosure.Extensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: Extensions
  nameWithType: IExtensibleSyndicationObject.Extensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
- uid: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISyndicationExtension>
  nameWithType: IEnumerable<ISyndicationExtension>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: IEnumerable(Of ISyndicationExtension)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: IEnumerable(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Argotic.Syndication.RssEnclosure.Extensions
  commentId: P:Argotic.Syndication.RssEnclosure.Extensions
  isExternal: true
- uid: Argotic.Syndication.RssEnclosure.HasExtensions*
  commentId: Overload:Argotic.Syndication.RssEnclosure.HasExtensions
  name: HasExtensions
  nameWithType: RssEnclosure.HasExtensions
  fullName: Argotic.Syndication.RssEnclosure.HasExtensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: HasExtensions
  nameWithType: IExtensibleSyndicationObject.HasExtensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64.MinValue
  commentId: F:System.Int64.MinValue
  isExternal: true
- uid: Argotic.Syndication.RssEnclosure.Length*
  commentId: Overload:Argotic.Syndication.RssEnclosure.Length
  name: Length
  nameWithType: RssEnclosure.Length
  fullName: Argotic.Syndication.RssEnclosure.Length
- uid: Argotic.Syndication.RssEnclosure.Url*
  commentId: Overload:Argotic.Syndication.RssEnclosure.Url
  name: Url
  nameWithType: RssEnclosure.Url
  fullName: Argotic.Syndication.RssEnclosure.Url
- uid: Argotic.Syndication.RssEnclosure.op_Equality*
  commentId: Overload:Argotic.Syndication.RssEnclosure.op_Equality
  name: Equality
  nameWithType: RssEnclosure.Equality
  fullName: Argotic.Syndication.RssEnclosure.Equality
- uid: Argotic.Syndication.RssEnclosure.op_GreaterThan*
  commentId: Overload:Argotic.Syndication.RssEnclosure.op_GreaterThan
  name: GreaterThan
  nameWithType: RssEnclosure.GreaterThan
  fullName: Argotic.Syndication.RssEnclosure.GreaterThan
- uid: Argotic.Syndication.RssEnclosure.op_Inequality*
  commentId: Overload:Argotic.Syndication.RssEnclosure.op_Inequality
  name: Inequality
  nameWithType: RssEnclosure.Inequality
  fullName: Argotic.Syndication.RssEnclosure.Inequality
- uid: Argotic.Syndication.RssEnclosure.op_LessThan*
  commentId: Overload:Argotic.Syndication.RssEnclosure.op_LessThan
  name: LessThan
  nameWithType: RssEnclosure.LessThan
  fullName: Argotic.Syndication.RssEnclosure.LessThan
- uid: Argotic.Syndication.RssEnclosure.AddExtension*
  commentId: Overload:Argotic.Syndication.RssEnclosure.AddExtension
  name: AddExtension
  nameWithType: RssEnclosure.AddExtension
  fullName: Argotic.Syndication.RssEnclosure.AddExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: AddExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.AddExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Syndication.RssEnclosure.CompareTo*
  commentId: Overload:Argotic.Syndication.RssEnclosure.CompareTo
  name: CompareTo
  nameWithType: RssEnclosure.CompareTo
  fullName: Argotic.Syndication.RssEnclosure.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.RssEnclosure.Equals*
  commentId: Overload:Argotic.Syndication.RssEnclosure.Equals
  name: Equals
  nameWithType: RssEnclosure.Equals
  fullName: Argotic.Syndication.RssEnclosure.Equals
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.RssEnclosure.FindExtension*
  commentId: Overload:Argotic.Syndication.RssEnclosure.FindExtension
  name: FindExtension
  nameWithType: RssEnclosure.FindExtension
  fullName: Argotic.Syndication.RssEnclosure.FindExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  isExternal: true
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: IExtensibleSyndicationObject.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  nameWithType.vb: IExtensibleSyndicationObject.FindExtension(Predicate(Of ISyndicationExtension))
  fullName.vb: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Predicate{Argotic.Extensions.ISyndicationExtension}
  parent: System
  definition: System.Predicate`1
  name: Predicate<ISyndicationExtension>
  nameWithType: Predicate<ISyndicationExtension>
  fullName: System.Predicate<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: Predicate(Of ISyndicationExtension)
  fullName.vb: System.Predicate(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: Predicate(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.RssEnclosure.GetHashCode*
  commentId: Overload:Argotic.Syndication.RssEnclosure.GetHashCode
  name: GetHashCode
  nameWithType: RssEnclosure.GetHashCode
  fullName: Argotic.Syndication.RssEnclosure.GetHashCode
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Syndication.RssEnclosure.Load*
  commentId: Overload:Argotic.Syndication.RssEnclosure.Load
  name: Load
  nameWithType: RssEnclosure.Load
  fullName: Argotic.Syndication.RssEnclosure.Load
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Argotic.Common.SyndicationResourceLoadSettings
  commentId: T:Argotic.Common.SyndicationResourceLoadSettings
  parent: Argotic.Common
  name: SyndicationResourceLoadSettings
  nameWithType: SyndicationResourceLoadSettings
  fullName: Argotic.Common.SyndicationResourceLoadSettings
- uid: Argotic.Common
  commentId: N:Argotic.Common
  name: Argotic.Common
  nameWithType: Argotic.Common
  fullName: Argotic.Common
- uid: Argotic.Syndication.RssEnclosure.RemoveExtension*
  commentId: Overload:Argotic.Syndication.RssEnclosure.RemoveExtension
  name: RemoveExtension
  nameWithType: RssEnclosure.RemoveExtension
  fullName: Argotic.Syndication.RssEnclosure.RemoveExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.RssEnclosure.ToString*
  commentId: Overload:Argotic.Syndication.RssEnclosure.ToString
  name: ToString
  nameWithType: RssEnclosure.ToString
  fullName: Argotic.Syndication.RssEnclosure.ToString
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Syndication.RssEnclosure.WriteTo*
  commentId: Overload:Argotic.Syndication.RssEnclosure.WriteTo
  name: WriteTo
  nameWithType: RssEnclosure.WriteTo
  fullName: Argotic.Syndication.RssEnclosure.WriteTo
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
