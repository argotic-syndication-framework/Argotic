### YamlMime:ManagedReference
items:
- uid: Argotic.Syndication.Specialized.BlogMLComment
  commentId: T:Argotic.Syndication.Specialized.BlogMLComment
  id: BlogMLComment
  parent: Argotic.Syndication.Specialized
  children:
  - Argotic.Syndication.Specialized.BlogMLComment.#ctor
  - Argotic.Syndication.Specialized.BlogMLComment.AddExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Syndication.Specialized.BlogMLComment.ApprovalStatus
  - Argotic.Syndication.Specialized.BlogMLComment.CompareTo(System.Object)
  - Argotic.Syndication.Specialized.BlogMLComment.Content
  - Argotic.Syndication.Specialized.BlogMLComment.CreatedOn
  - Argotic.Syndication.Specialized.BlogMLComment.Equals(System.Object)
  - Argotic.Syndication.Specialized.BlogMLComment.Extensions
  - Argotic.Syndication.Specialized.BlogMLComment.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  - Argotic.Syndication.Specialized.BlogMLComment.GetHashCode
  - Argotic.Syndication.Specialized.BlogMLComment.HasExtensions
  - Argotic.Syndication.Specialized.BlogMLComment.Id
  - Argotic.Syndication.Specialized.BlogMLComment.LastModifiedOn
  - Argotic.Syndication.Specialized.BlogMLComment.Load(System.Xml.XPath.XPathNavigator)
  - Argotic.Syndication.Specialized.BlogMLComment.Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.Specialized.BlogMLComment.op_Equality(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  - Argotic.Syndication.Specialized.BlogMLComment.op_GreaterThan(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  - Argotic.Syndication.Specialized.BlogMLComment.op_Inequality(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  - Argotic.Syndication.Specialized.BlogMLComment.op_LessThan(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  - Argotic.Syndication.Specialized.BlogMLComment.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Syndication.Specialized.BlogMLComment.Title
  - Argotic.Syndication.Specialized.BlogMLComment.ToString
  - Argotic.Syndication.Specialized.BlogMLComment.UserEmailAddress
  - Argotic.Syndication.Specialized.BlogMLComment.UserName
  - Argotic.Syndication.Specialized.BlogMLComment.UserUrl
  - Argotic.Syndication.Specialized.BlogMLComment.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: BlogMLComment
  nameWithType: BlogMLComment
  fullName: Argotic.Syndication.Specialized.BlogMLComment
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: BlogMLComment
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 16
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nRepresents a post comment.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class BlogMLComment : IBlogMLCommonObject, IComparable, IExtensibleSyndicationObject
    content.vb: >-
      <Serializable>

      Public Class BlogMLComment

          Implements IBlogMLCommonObject, IComparable, IExtensibleSyndicationObject
  seealso:
  - linkId: Argotic.Syndication.Specialized.BlogMLPost.Comments
    commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Comments
  inheritance:
  - System.Object
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject
  - System.IComparable
  - Argotic.Extensions.IExtensibleSyndicationObject
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Syndication.Specialized.BlogMLComment.#ctor
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.#ctor
  id: '#ctor'
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: BlogMLComment()
  nameWithType: BlogMLComment.BlogMLComment()
  fullName: Argotic.Syndication.Specialized.BlogMLComment.BlogMLComment()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 72
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Syndication.Specialized.BlogMLComment\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public BlogMLComment()
    content.vb: Public Sub New
  overload: Argotic.Syndication.Specialized.BlogMLComment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.ApprovalStatus
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.ApprovalStatus
  id: ApprovalStatus
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: ApprovalStatus
  nameWithType: BlogMLComment.ApprovalStatus
  fullName: Argotic.Syndication.Specialized.BlogMLComment.ApprovalStatus
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ApprovalStatus
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 83
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the approval status of this web log entity.\n"
  example: []
  syntax:
    content: public BlogMLApprovalStatus ApprovalStatus { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.Specialized.BlogMLApprovalStatus
      description: "\nAn <xref href=\"Argotic.Syndication.Specialized.BlogMLApprovalStatus\" data-throw-if-not-resolved=\"false\"></xref> enumeration value that represents whether this web log entity was approved to be publicly available.\nThe default value is <xref href=\"Argotic.Syndication.Specialized.BlogMLApprovalStatus.None\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no approval status information was specified.\n"
    content.vb: Public Property ApprovalStatus As BlogMLApprovalStatus
  overload: Argotic.Syndication.Specialized.BlogMLComment.ApprovalStatus*
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.ApprovalStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.Content
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.Content
  id: Content
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: BlogMLComment.Content
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Content
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Content
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 101
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the content of this comment.\n"
  example: []
  syntax:
    content: public BlogMLTextConstruct Content { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.Specialized.BlogMLTextConstruct
      description: A <xref href="Argotic.Syndication.Specialized.BlogMLTextConstruct" data-throw-if-not-resolved="false"></xref> that represents the content of this comment.
    content.vb: Public Property Content As BlogMLTextConstruct
  overload: Argotic.Syndication.Specialized.BlogMLComment.Content*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.CreatedOn
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.CreatedOn
  id: CreatedOn
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: CreatedOn
  nameWithType: BlogMLComment.CreatedOn
  fullName: Argotic.Syndication.Specialized.BlogMLComment.CreatedOn
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CreatedOn
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 125
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets a date-time indicating when this web log entity was created.\n"
  remarks: "\nThe <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> should be provided in Coordinated Universal Time (UTC).\n"
  example: []
  syntax:
    content: public DateTime CreatedOn { get; set; }
    parameters: []
    return:
      type: System.DateTime
      description: "\nA <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that indicates an instant in time associated with an event early in the life cycle of this web log entity.\nThe default value is <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no creation date-time was provided.\n"
    content.vb: Public Property CreatedOn As Date
  overload: Argotic.Syndication.Specialized.BlogMLComment.CreatedOn*
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.CreatedOn
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.Extensions
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.Extensions
  id: Extensions
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: BlogMLComment.Extensions
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Extensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Extensions
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 146
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the syndication extensions applied to this syndication entity.\n"
  remarks: "\nThis <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public IEnumerable<ISyndicationExtension> Extensions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects that represent syndication extensions applied to this syndication entity.
    content.vb: Public Property Extensions As IEnumerable(Of ISyndicationExtension)
  overload: Argotic.Syndication.Specialized.BlogMLComment.Extensions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.HasExtensions
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.HasExtensions
  id: HasExtensions
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: HasExtensions
  nameWithType: BlogMLComment.HasExtensions
  fullName: Argotic.Syndication.Specialized.BlogMLComment.HasExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: HasExtensions
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 169
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets a value indicating whether gets a value indicating if this syndication entity has one or more syndication extensions applied to it.\n"
  example: []
  syntax:
    content: public bool HasExtensions { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.Specialized.BlogMLComment.Extensions" data-throw-if-not-resolved="false"></xref> collection for this entity contains one or more <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects, otherwise returns <strong>false</strong>.
    content.vb: Public ReadOnly Property HasExtensions As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLComment.HasExtensions*
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.Specialized.BlogMLComment.Id
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.Id
  id: Id
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: BlogMLComment.Id
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Id
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Id
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 181
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the unique identifier of this web log entity.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
      description: An identification string for this web log entity. The default value is an <strong>empty</strong> string, which indicated that no identifier was specified.
    content.vb: Public Property Id As String
  overload: Argotic.Syndication.Specialized.BlogMLComment.Id*
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.LastModifiedOn
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.LastModifiedOn
  id: LastModifiedOn
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: LastModifiedOn
  nameWithType: BlogMLComment.LastModifiedOn
  fullName: Argotic.Syndication.Specialized.BlogMLComment.LastModifiedOn
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LastModifiedOn
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 211
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets a date-time indicating when this web log entity was last modified.\n"
  remarks: "\nThe <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> should be provided in Coordinated Universal Time (UTC).\n"
  example: []
  syntax:
    content: public DateTime LastModifiedOn { get; set; }
    parameters: []
    return:
      type: System.DateTime
      description: "\nA <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that indicates the most recent instant in time when this web log entity was modified in a way the publisher considers significant.\nThe default value is <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no modification date-time was provided.\n"
    content.vb: Public Property LastModifiedOn As Date
  overload: Argotic.Syndication.Specialized.BlogMLComment.LastModifiedOn*
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.LastModifiedOn
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.Title
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.Title
  id: Title
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: BlogMLComment.Title
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Title
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Title
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 229
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the title of this web log entity.\n"
  example: []
  syntax:
    content: public BlogMLTextConstruct Title { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.Specialized.BlogMLTextConstruct
      description: A <xref href="Argotic.Syndication.Specialized.BlogMLTextConstruct" data-throw-if-not-resolved="false"></xref> object that represents the title of this web log entity.
    content.vb: Public Property Title As BlogMLTextConstruct
  overload: Argotic.Syndication.Specialized.BlogMLComment.Title*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.Title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.UserEmailAddress
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.UserEmailAddress
  id: UserEmailAddress
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: UserEmailAddress
  nameWithType: BlogMLComment.UserEmailAddress
  fullName: Argotic.Syndication.Specialized.BlogMLComment.UserEmailAddress
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: UserEmailAddress
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 247
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the author&apos;s email address for this comment.\n"
  example: []
  syntax:
    content: public string UserEmailAddress { get; set; }
    parameters: []
    return:
      type: System.String
      description: The author&apos;s email address for this comment.
    content.vb: Public Property UserEmailAddress As String
  overload: Argotic.Syndication.Specialized.BlogMLComment.UserEmailAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.UserName
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.UserName
  id: UserName
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: BlogMLComment.UserName
  fullName: Argotic.Syndication.Specialized.BlogMLComment.UserName
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: UserName
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 273
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the author&apos;s name for this comment.\n"
  example: []
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
      description: The author&apos;s name for this comment.
    content.vb: Public Property UserName As String
  overload: Argotic.Syndication.Specialized.BlogMLComment.UserName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is an empty string.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.UserUrl
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.UserUrl
  id: UserUrl
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: UserUrl
  nameWithType: BlogMLComment.UserUrl
  fullName: Argotic.Syndication.Specialized.BlogMLComment.UserUrl
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: UserUrl
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 291
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the author&apos;s homepage or web log for this comment.\n"
  example: []
  syntax:
    content: public Uri UserUrl { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: The author&apos;s homepage or web log address for this comment.
    content.vb: Public Property UserUrl As Uri
  overload: Argotic.Syndication.Specialized.BlogMLComment.UserUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.op_Equality(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.op_Equality(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  id: op_Equality(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: Equality(BlogMLComment, BlogMLComment)
  nameWithType: BlogMLComment.Equality(BlogMLComment, BlogMLComment)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Equality(Argotic.Syndication.Specialized.BlogMLComment, Argotic.Syndication.Specialized.BlogMLComment)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 310
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(BlogMLComment first, BlogMLComment second)
    parameters:
    - id: first
      type: Argotic.Syndication.Specialized.BlogMLComment
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.Specialized.BlogMLComment
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As BlogMLComment, second As BlogMLComment) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLComment.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLComment.op_GreaterThan(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.op_GreaterThan(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  id: op_GreaterThan(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: GreaterThan(BlogMLComment, BlogMLComment)
  nameWithType: BlogMLComment.GreaterThan(BlogMLComment, BlogMLComment)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.GreaterThan(Argotic.Syndication.Specialized.BlogMLComment, Argotic.Syndication.Specialized.BlogMLComment)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 331
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(BlogMLComment first, BlogMLComment second)
    parameters:
    - id: first
      type: Argotic.Syndication.Specialized.BlogMLComment
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.Specialized.BlogMLComment
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As BlogMLComment, second As BlogMLComment) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLComment.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLComment.op_Inequality(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.op_Inequality(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  id: op_Inequality(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: Inequality(BlogMLComment, BlogMLComment)
  nameWithType: BlogMLComment.Inequality(BlogMLComment, BlogMLComment)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Inequality(Argotic.Syndication.Specialized.BlogMLComment, Argotic.Syndication.Specialized.BlogMLComment)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 352
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(BlogMLComment first, BlogMLComment second)
    parameters:
    - id: first
      type: Argotic.Syndication.Specialized.BlogMLComment
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.Specialized.BlogMLComment
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As BlogMLComment, second As BlogMLComment) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLComment.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLComment.op_LessThan(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.op_LessThan(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  id: op_LessThan(Argotic.Syndication.Specialized.BlogMLComment,Argotic.Syndication.Specialized.BlogMLComment)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: LessThan(BlogMLComment, BlogMLComment)
  nameWithType: BlogMLComment.LessThan(BlogMLComment, BlogMLComment)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.LessThan(Argotic.Syndication.Specialized.BlogMLComment, Argotic.Syndication.Specialized.BlogMLComment)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 363
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(BlogMLComment first, BlogMLComment second)
    parameters:
    - id: first
      type: Argotic.Syndication.Specialized.BlogMLComment
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.Specialized.BlogMLComment
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As BlogMLComment, second As BlogMLComment) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLComment.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLComment.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.AddExtension(Argotic.Extensions.ISyndicationExtension)
  id: AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: AddExtension(ISyndicationExtension)
  nameWithType: BlogMLComment.AddExtension(ISyndicationExtension)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.AddExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddExtension
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 384
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nAdds the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> to the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLComment.AddExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.CompareTo(System.Object)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: BlogMLComment.CompareTo(Object)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 400
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Syndication.Specialized.BlogMLComment.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.Equals(System.Object)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BlogMLComment.Equals(Object)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 443
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Syndication.Specialized.BlogMLComment.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.Specialized.BlogMLComment.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  id: FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: BlogMLComment.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: FindExtension
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 466
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nSearches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <xref href=\"Argotic.Syndication.Specialized.BlogMLComment.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nThe <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> is a delegate to a method that returns <strong>true</strong> if the object passed to it matches the conditions defined in the delegate.\nThe elements of the current <xref href=\"Argotic.Syndication.Specialized.BlogMLComment.Extensions\" data-throw-if-not-resolved=\"false\"></xref> are individually passed to the <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> delegate, moving forward in\nthe <xref href=\"Argotic.Syndication.Specialized.BlogMLComment.Extensions\" data-throw-if-not-resolved=\"false\"></xref>, starting with the first element and ending with the last element. Processing is stopped when a match is found.\n"
  example: []
  syntax:
    content: public ISyndicationExtension FindExtension(Predicate<ISyndicationExtension> match)
    parameters:
    - id: match
      type: System.Predicate{Argotic.Extensions.ISyndicationExtension}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to search for.
    return:
      type: Argotic.Extensions.ISyndicationExtension
      description: "\nThe first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function FindExtension(match As Predicate(Of ISyndicationExtension)) As ISyndicationExtension
  overload: Argotic.Syndication.Specialized.BlogMLComment.FindExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">match</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  nameWithType.vb: BlogMLComment.FindExtension(Predicate(Of ISyndicationExtension))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Syndication.Specialized.BlogMLComment.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
- uid: Argotic.Syndication.Specialized.BlogMLComment.GetHashCode
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.GetHashCode
  id: GetHashCode
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BlogMLComment.GetHashCode()
  fullName: Argotic.Syndication.Specialized.BlogMLComment.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 477
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Syndication.Specialized.BlogMLComment.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.Specialized.BlogMLComment.Load(System.Xml.XPath.XPathNavigator)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator)
  nameWithType: BlogMLComment.Load(XPathNavigator)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Load(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 493
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nLoads this <xref href=\"Argotic.Syndication.Specialized.BlogMLComment\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be positioned on the XML element that represents a <xref href=\"Argotic.Syndication.Specialized.BlogMLComment\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> to extract information from.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.Specialized.BlogMLComment" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLComment.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator, SyndicationResourceLoadSettings)
  nameWithType: BlogMLComment.Load(XPathNavigator, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Load(System.Xml.XPath.XPathNavigator, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 560
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nLoads this <xref href=\"Argotic.Syndication.Specialized.ApmlApplication\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be positioned on the XML element that represents a <xref href=\"Argotic.Syndication.Specialized.ApmlApplication\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> to extract information from.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> used to configure the load operation.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.Specialized.ApmlApplication" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator, settings As SyndicationResourceLoadSettings) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLComment.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">settings</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  id: RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: BlogMLComment.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveExtension
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 630
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nRemoves the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> from the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Syndication.Specialized.BlogMLComment.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection of the current instance does not contain the specified <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLComment.RemoveExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLComment.ToString
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.ToString
  id: ToString
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BlogMLComment.ToString()
  fullName: Argotic.Syndication.Specialized.BlogMLComment.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 650
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Syndication.Specialized.BlogMLComment\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns the XML representation for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Syndication.Specialized.BlogMLComment" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Syndication.Specialized.BlogMLComment.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.Specialized.BlogMLComment.WriteTo(System.Xml.XmlWriter)
  commentId: M:Argotic.Syndication.Specialized.BlogMLComment.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: Argotic.Syndication.Specialized.BlogMLComment
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  nameWithType: BlogMLComment.WriteTo(XmlWriter)
  fullName: Argotic.Syndication.Specialized.BlogMLComment.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WriteTo
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLComment.cs
    startLine: 678
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nSaves the current <xref href=\"Argotic.Syndication.Specialized.BlogMLComment\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> to which you want to save.
    content.vb: Public Sub WriteTo(writer As XmlWriter)
  overload: Argotic.Syndication.Specialized.BlogMLComment.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Argotic.Syndication.Specialized.BlogMLPost.Comments
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Comments
  isExternal: true
- uid: Argotic.Syndication.Specialized
  commentId: N:Argotic.Syndication.Specialized
  name: Argotic.Syndication.Specialized
  nameWithType: Argotic.Syndication.Specialized
  fullName: Argotic.Syndication.Specialized
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject
  commentId: T:Argotic.Syndication.Specialized.IBlogMLCommonObject
  parent: Argotic.Syndication.Specialized
  name: IBlogMLCommonObject
  nameWithType: IBlogMLCommonObject
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: Argotic.Extensions.IExtensibleSyndicationObject
  commentId: T:Argotic.Extensions.IExtensibleSyndicationObject
  parent: Argotic.Extensions
  name: IExtensibleSyndicationObject
  nameWithType: IExtensibleSyndicationObject
  fullName: Argotic.Extensions.IExtensibleSyndicationObject
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Extensions
  commentId: N:Argotic.Extensions
  name: Argotic.Extensions
  nameWithType: Argotic.Extensions
  fullName: Argotic.Extensions
- uid: Argotic.Syndication.Specialized.BlogMLComment
  commentId: T:Argotic.Syndication.Specialized.BlogMLComment
  parent: Argotic.Syndication.Specialized
  name: BlogMLComment
  nameWithType: BlogMLComment
  fullName: Argotic.Syndication.Specialized.BlogMLComment
- uid: Argotic.Syndication.Specialized.BlogMLComment.#ctor*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.#ctor
  name: BlogMLComment
  nameWithType: BlogMLComment.BlogMLComment
  fullName: Argotic.Syndication.Specialized.BlogMLComment.BlogMLComment
- uid: Argotic.Syndication.Specialized.BlogMLApprovalStatus
  commentId: T:Argotic.Syndication.Specialized.BlogMLApprovalStatus
  parent: Argotic.Syndication.Specialized
  name: BlogMLApprovalStatus
  nameWithType: BlogMLApprovalStatus
  fullName: Argotic.Syndication.Specialized.BlogMLApprovalStatus
- uid: Argotic.Syndication.Specialized.BlogMLApprovalStatus.None
  commentId: F:Argotic.Syndication.Specialized.BlogMLApprovalStatus.None
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLComment.ApprovalStatus*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.ApprovalStatus
  name: ApprovalStatus
  nameWithType: BlogMLComment.ApprovalStatus
  fullName: Argotic.Syndication.Specialized.BlogMLComment.ApprovalStatus
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.ApprovalStatus
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.ApprovalStatus
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: ApprovalStatus
  nameWithType: IBlogMLCommonObject.ApprovalStatus
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.ApprovalStatus
- uid: Argotic.Syndication.Specialized.BlogMLTextConstruct
  commentId: T:Argotic.Syndication.Specialized.BlogMLTextConstruct
  parent: Argotic.Syndication.Specialized
  name: BlogMLTextConstruct
  nameWithType: BlogMLTextConstruct
  fullName: Argotic.Syndication.Specialized.BlogMLTextConstruct
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLComment.Content*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.Content
  name: Content
  nameWithType: BlogMLComment.Content
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Content
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTime.MinValue
  commentId: F:System.DateTime.MinValue
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLComment.CreatedOn*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.CreatedOn
  name: CreatedOn
  nameWithType: BlogMLComment.CreatedOn
  fullName: Argotic.Syndication.Specialized.BlogMLComment.CreatedOn
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.CreatedOn
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.CreatedOn
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: CreatedOn
  nameWithType: IBlogMLCommonObject.CreatedOn
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.CreatedOn
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.ISyndicationExtension
  commentId: T:Argotic.Extensions.ISyndicationExtension
  parent: Argotic.Extensions
  name: ISyndicationExtension
  nameWithType: ISyndicationExtension
  fullName: Argotic.Extensions.ISyndicationExtension
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLComment.Extensions*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.Extensions
  name: Extensions
  nameWithType: BlogMLComment.Extensions
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Extensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: Extensions
  nameWithType: IExtensibleSyndicationObject.Extensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
- uid: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISyndicationExtension>
  nameWithType: IEnumerable<ISyndicationExtension>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: IEnumerable(Of ISyndicationExtension)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: IEnumerable(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Argotic.Syndication.Specialized.BlogMLComment.Extensions
  commentId: P:Argotic.Syndication.Specialized.BlogMLComment.Extensions
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLComment.HasExtensions*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.HasExtensions
  name: HasExtensions
  nameWithType: BlogMLComment.HasExtensions
  fullName: Argotic.Syndication.Specialized.BlogMLComment.HasExtensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: HasExtensions
  nameWithType: IExtensibleSyndicationObject.HasExtensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Syndication.Specialized.BlogMLComment.Id*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.Id
  name: Id
  nameWithType: BlogMLComment.Id
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Id
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.Id
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.Id
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: Id
  nameWithType: IBlogMLCommonObject.Id
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Argotic.Syndication.Specialized.BlogMLComment.LastModifiedOn*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.LastModifiedOn
  name: LastModifiedOn
  nameWithType: BlogMLComment.LastModifiedOn
  fullName: Argotic.Syndication.Specialized.BlogMLComment.LastModifiedOn
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.LastModifiedOn
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.LastModifiedOn
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: LastModifiedOn
  nameWithType: IBlogMLCommonObject.LastModifiedOn
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.LastModifiedOn
- uid: Argotic.Syndication.Specialized.BlogMLComment.Title*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.Title
  name: Title
  nameWithType: BlogMLComment.Title
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Title
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.Title
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.Title
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: Title
  nameWithType: IBlogMLCommonObject.Title
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.Title
- uid: Argotic.Syndication.Specialized.BlogMLComment.UserEmailAddress*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.UserEmailAddress
  name: UserEmailAddress
  nameWithType: BlogMLComment.UserEmailAddress
  fullName: Argotic.Syndication.Specialized.BlogMLComment.UserEmailAddress
- uid: Argotic.Syndication.Specialized.BlogMLComment.UserName*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.UserName
  name: UserName
  nameWithType: BlogMLComment.UserName
  fullName: Argotic.Syndication.Specialized.BlogMLComment.UserName
- uid: Argotic.Syndication.Specialized.BlogMLComment.UserUrl*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.UserUrl
  name: UserUrl
  nameWithType: BlogMLComment.UserUrl
  fullName: Argotic.Syndication.Specialized.BlogMLComment.UserUrl
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Argotic.Syndication.Specialized.BlogMLComment.op_Equality*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.op_Equality
  name: Equality
  nameWithType: BlogMLComment.Equality
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Equality
- uid: Argotic.Syndication.Specialized.BlogMLComment.op_GreaterThan*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.op_GreaterThan
  name: GreaterThan
  nameWithType: BlogMLComment.GreaterThan
  fullName: Argotic.Syndication.Specialized.BlogMLComment.GreaterThan
- uid: Argotic.Syndication.Specialized.BlogMLComment.op_Inequality*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.op_Inequality
  name: Inequality
  nameWithType: BlogMLComment.Inequality
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Inequality
- uid: Argotic.Syndication.Specialized.BlogMLComment.op_LessThan*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.op_LessThan
  name: LessThan
  nameWithType: BlogMLComment.LessThan
  fullName: Argotic.Syndication.Specialized.BlogMLComment.LessThan
- uid: Argotic.Syndication.Specialized.BlogMLComment.AddExtension*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.AddExtension
  name: AddExtension
  nameWithType: BlogMLComment.AddExtension
  fullName: Argotic.Syndication.Specialized.BlogMLComment.AddExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: AddExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.AddExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLComment.CompareTo*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.CompareTo
  name: CompareTo
  nameWithType: BlogMLComment.CompareTo
  fullName: Argotic.Syndication.Specialized.BlogMLComment.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLComment.Equals*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.Equals
  name: Equals
  nameWithType: BlogMLComment.Equals
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Equals
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLComment.FindExtension*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.FindExtension
  name: FindExtension
  nameWithType: BlogMLComment.FindExtension
  fullName: Argotic.Syndication.Specialized.BlogMLComment.FindExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  isExternal: true
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: IExtensibleSyndicationObject.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  nameWithType.vb: IExtensibleSyndicationObject.FindExtension(Predicate(Of ISyndicationExtension))
  fullName.vb: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Predicate{Argotic.Extensions.ISyndicationExtension}
  parent: System
  definition: System.Predicate`1
  name: Predicate<ISyndicationExtension>
  nameWithType: Predicate<ISyndicationExtension>
  fullName: System.Predicate<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: Predicate(Of ISyndicationExtension)
  fullName.vb: System.Predicate(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: Predicate(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLComment.GetHashCode*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.GetHashCode
  name: GetHashCode
  nameWithType: BlogMLComment.GetHashCode
  fullName: Argotic.Syndication.Specialized.BlogMLComment.GetHashCode
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Syndication.Specialized.BlogMLComment.Load*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.Load
  name: Load
  nameWithType: BlogMLComment.Load
  fullName: Argotic.Syndication.Specialized.BlogMLComment.Load
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Argotic.Syndication.Specialized.ApmlApplication
  commentId: T:Argotic.Syndication.Specialized.ApmlApplication
  parent: Argotic.Syndication.Specialized
  name: ApmlApplication
  nameWithType: ApmlApplication
  fullName: Argotic.Syndication.Specialized.ApmlApplication
- uid: Argotic.Common.SyndicationResourceLoadSettings
  commentId: T:Argotic.Common.SyndicationResourceLoadSettings
  parent: Argotic.Common
  name: SyndicationResourceLoadSettings
  nameWithType: SyndicationResourceLoadSettings
  fullName: Argotic.Common.SyndicationResourceLoadSettings
- uid: Argotic.Common
  commentId: N:Argotic.Common
  name: Argotic.Common
  nameWithType: Argotic.Common
  fullName: Argotic.Common
- uid: Argotic.Syndication.Specialized.BlogMLComment.RemoveExtension*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.RemoveExtension
  name: RemoveExtension
  nameWithType: BlogMLComment.RemoveExtension
  fullName: Argotic.Syndication.Specialized.BlogMLComment.RemoveExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLComment.ToString*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.ToString
  name: ToString
  nameWithType: BlogMLComment.ToString
  fullName: Argotic.Syndication.Specialized.BlogMLComment.ToString
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Syndication.Specialized.BlogMLComment.WriteTo*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLComment.WriteTo
  name: WriteTo
  nameWithType: BlogMLComment.WriteTo
  fullName: Argotic.Syndication.Specialized.BlogMLComment.WriteTo
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
