### YamlMime:ManagedReference
items:
- uid: Argotic.Syndication.Specialized.BlogMLPost
  commentId: T:Argotic.Syndication.Specialized.BlogMLPost
  id: BlogMLPost
  parent: Argotic.Syndication.Specialized
  children:
  - Argotic.Syndication.Specialized.BlogMLPost.#ctor
  - Argotic.Syndication.Specialized.BlogMLPost.AddExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Syndication.Specialized.BlogMLPost.ApprovalStatus
  - Argotic.Syndication.Specialized.BlogMLPost.Attachments
  - Argotic.Syndication.Specialized.BlogMLPost.Authors
  - Argotic.Syndication.Specialized.BlogMLPost.Categories
  - Argotic.Syndication.Specialized.BlogMLPost.Comments
  - Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment})
  - Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor})
  - Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment})
  - Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback})
  - Argotic.Syndication.Specialized.BlogMLPost.CompareTo(System.Object)
  - Argotic.Syndication.Specialized.BlogMLPost.Content
  - Argotic.Syndication.Specialized.BlogMLPost.CreatedOn
  - Argotic.Syndication.Specialized.BlogMLPost.Equals(System.Object)
  - Argotic.Syndication.Specialized.BlogMLPost.Excerpt
  - Argotic.Syndication.Specialized.BlogMLPost.Extensions
  - Argotic.Syndication.Specialized.BlogMLPost.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  - Argotic.Syndication.Specialized.BlogMLPost.GetHashCode
  - Argotic.Syndication.Specialized.BlogMLPost.HasExcerpt
  - Argotic.Syndication.Specialized.BlogMLPost.HasExtensions
  - Argotic.Syndication.Specialized.BlogMLPost.Id
  - Argotic.Syndication.Specialized.BlogMLPost.LastModifiedOn
  - Argotic.Syndication.Specialized.BlogMLPost.Load(System.Xml.XPath.XPathNavigator)
  - Argotic.Syndication.Specialized.BlogMLPost.Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  - Argotic.Syndication.Specialized.BlogMLPost.Name
  - Argotic.Syndication.Specialized.BlogMLPost.op_Equality(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  - Argotic.Syndication.Specialized.BlogMLPost.op_GreaterThan(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  - Argotic.Syndication.Specialized.BlogMLPost.op_Inequality(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  - Argotic.Syndication.Specialized.BlogMLPost.op_LessThan(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  - Argotic.Syndication.Specialized.BlogMLPost.PostType
  - Argotic.Syndication.Specialized.BlogMLPost.PostTypeAsString(Argotic.Syndication.Specialized.BlogMLPostType)
  - Argotic.Syndication.Specialized.BlogMLPost.PostTypeByName(System.String)
  - Argotic.Syndication.Specialized.BlogMLPost.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  - Argotic.Syndication.Specialized.BlogMLPost.Title
  - Argotic.Syndication.Specialized.BlogMLPost.ToString
  - Argotic.Syndication.Specialized.BlogMLPost.Trackbacks
  - Argotic.Syndication.Specialized.BlogMLPost.Url
  - Argotic.Syndication.Specialized.BlogMLPost.Views
  - Argotic.Syndication.Specialized.BlogMLPost.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: BlogMLPost
  nameWithType: BlogMLPost
  fullName: Argotic.Syndication.Specialized.BlogMLPost
  type: Class
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: BlogMLPost
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 21
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nRepresents information that describes a web log entry.\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\BlogML\\BlogMLPostExample.cs\" region=\"BlogMLPost\"></code></pre>\n</code></pre>\n"
  syntax:
    content: >-
      [Serializable]

      public class BlogMLPost : IBlogMLCommonObject, IComparable, IExtensibleSyndicationObject
    content.vb: >-
      <Serializable>

      Public Class BlogMLPost

          Implements IBlogMLCommonObject, IComparable, IExtensibleSyndicationObject
  inheritance:
  - System.Object
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject
  - System.IComparable
  - Argotic.Extensions.IExtensibleSyndicationObject
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Argotic.Syndication.Specialized.BlogMLPost.#ctor
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.#ctor
  id: '#ctor'
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: BlogMLPost()
  nameWithType: BlogMLPost.BlogMLPost()
  fullName: Argotic.Syndication.Specialized.BlogMLPost.BlogMLPost()
  type: Constructor
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: .ctor
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 112
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nInitializes a new instance of the <xref href=\"Argotic.Syndication.Specialized.BlogMLPost\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public BlogMLPost()
    content.vb: Public Sub New
  overload: Argotic.Syndication.Specialized.BlogMLPost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.ApprovalStatus
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.ApprovalStatus
  id: ApprovalStatus
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: ApprovalStatus
  nameWithType: BlogMLPost.ApprovalStatus
  fullName: Argotic.Syndication.Specialized.BlogMLPost.ApprovalStatus
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ApprovalStatus
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 123
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the approval status of this web log entity.\n"
  example: []
  syntax:
    content: public BlogMLApprovalStatus ApprovalStatus { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.Specialized.BlogMLApprovalStatus
      description: "\nAn <xref href=\"Argotic.Syndication.Specialized.BlogMLApprovalStatus\" data-throw-if-not-resolved=\"false\"></xref> enumeration value that represents whether this web log entity was approved to be publicly available.\nThe default value is <xref href=\"Argotic.Syndication.Specialized.BlogMLApprovalStatus.None\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no approval status information was specified.\n"
    content.vb: Public Property ApprovalStatus As BlogMLApprovalStatus
  overload: Argotic.Syndication.Specialized.BlogMLPost.ApprovalStatus*
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.ApprovalStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.Attachments
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Attachments
  id: Attachments
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Attachments
  nameWithType: BlogMLPost.Attachments
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Attachments
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Attachments
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 140
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets the attachments for this post.\n"
  example: []
  syntax:
    content: public Collection<BlogMLAttachment> Attachments { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.Specialized.BlogMLAttachment" data-throw-if-not-resolved="false"></xref> objects that represent the attachments for this post.
    content.vb: Public ReadOnly Property Attachments As Collection(Of BlogMLAttachment)
  overload: Argotic.Syndication.Specialized.BlogMLPost.Attachments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.Specialized.BlogMLPost.Authors
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Authors
  id: Authors
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Authors
  nameWithType: BlogMLPost.Authors
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Authors
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Authors
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 160
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets the authors of this post.\n"
  remarks: "\nThe authors referenced by this collection <em>should</em> be located in the post&apos;s parent document <xref href=\"Argotic.Syndication.Specialized.BlogMLDocument.Authors\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public Collection<string> Authors { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of strings that represent references to the authors of this post.
    content.vb: Public ReadOnly Property Authors As Collection(Of String)
  overload: Argotic.Syndication.Specialized.BlogMLPost.Authors*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.Specialized.BlogMLPost.Categories
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Categories
  id: Categories
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: BlogMLPost.Categories
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Categories
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Categories
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 180
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets the categories for this post.\n"
  remarks: "\nThe categories referenced by this collection <em>should</em> be located in the post&apos;s parent document <xref href=\"Argotic.Syndication.Specialized.BlogMLDocument.Categories\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public Collection<string> Categories { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of strings that represent references to the categories for this post.
    content.vb: Public ReadOnly Property Categories As Collection(Of String)
  overload: Argotic.Syndication.Specialized.BlogMLPost.Categories*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.Specialized.BlogMLPost.Comments
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Comments
  id: Comments
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Comments
  nameWithType: BlogMLPost.Comments
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Comments
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Comments
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 197
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets the comments for this post.\n"
  example: []
  syntax:
    content: public Collection<BlogMLComment> Comments { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.Specialized.BlogMLComment" data-throw-if-not-resolved="false"></xref> objects that represent the comments for this post.
    content.vb: Public ReadOnly Property Comments As Collection(Of BlogMLComment)
  overload: Argotic.Syndication.Specialized.BlogMLPost.Comments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.Specialized.BlogMLPost.Content
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Content
  id: Content
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: BlogMLPost.Content
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Content
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Content
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 215
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the content of this post.\n"
  example: []
  syntax:
    content: public BlogMLTextConstruct Content { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.Specialized.BlogMLTextConstruct
      description: A <xref href="Argotic.Syndication.Specialized.BlogMLTextConstruct" data-throw-if-not-resolved="false"></xref> that represents the content of this post.
    content.vb: Public Property Content As BlogMLTextConstruct
  overload: Argotic.Syndication.Specialized.BlogMLPost.Content*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.CreatedOn
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.CreatedOn
  id: CreatedOn
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: CreatedOn
  nameWithType: BlogMLPost.CreatedOn
  fullName: Argotic.Syndication.Specialized.BlogMLPost.CreatedOn
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CreatedOn
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 239
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets a date-time indicating when this web log entity was created.\n"
  remarks: "\nThe <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> should be provided in Coordinated Universal Time (UTC).\n"
  example: []
  syntax:
    content: public DateTime CreatedOn { get; set; }
    parameters: []
    return:
      type: System.DateTime
      description: "\nA <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that indicates an instant in time associated with an event early in the life cycle of this web log entity.\nThe default value is <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no creation date-time was provided.\n"
    content.vb: Public Property CreatedOn As Date
  overload: Argotic.Syndication.Specialized.BlogMLPost.CreatedOn*
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.CreatedOn
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.Excerpt
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Excerpt
  id: Excerpt
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Excerpt
  nameWithType: BlogMLPost.Excerpt
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Excerpt
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Excerpt
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 256
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the excerpt of this post.\n"
  example: []
  syntax:
    content: public BlogMLTextConstruct Excerpt { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.Specialized.BlogMLTextConstruct
      description: A <xref href="Argotic.Syndication.Specialized.BlogMLTextConstruct" data-throw-if-not-resolved="false"></xref> that represents an excerpt of this post.
    content.vb: Public Property Excerpt As BlogMLTextConstruct
  overload: Argotic.Syndication.Specialized.BlogMLPost.Excerpt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.Extensions
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Extensions
  id: Extensions
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: BlogMLPost.Extensions
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Extensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Extensions
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 277
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the syndication extensions applied to this syndication entity.\n"
  remarks: "\nThis <xref href=\"System.Collections.Generic.IEnumerable%601\" data-throw-if-not-resolved=\"false\"></xref> collection of <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> objects is internally represented as a <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public IEnumerable<ISyndicationExtension> Extensions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
      description: A <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects that represent syndication extensions applied to this syndication entity.
    content.vb: Public Property Extensions As IEnumerable(Of ISyndicationExtension)
  overload: Argotic.Syndication.Specialized.BlogMLPost.Extensions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.HasExcerpt
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.HasExcerpt
  id: HasExcerpt
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: HasExcerpt
  nameWithType: BlogMLPost.HasExcerpt
  fullName: Argotic.Syndication.Specialized.BlogMLPost.HasExcerpt
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: HasExcerpt
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 300
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets a value indicating whether gets a value indicating if this post has an excerpt.\n"
  example: []
  syntax:
    content: public bool HasExcerpt { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if this post&apos;s <xref href="Argotic.Syndication.Specialized.BlogMLPost.Excerpt" data-throw-if-not-resolved="false"></xref> is not null; otherwise <strong>false</strong>.
    content.vb: Public ReadOnly Property HasExcerpt As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.HasExcerpt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.Specialized.BlogMLPost.HasExtensions
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.HasExtensions
  id: HasExtensions
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: HasExtensions
  nameWithType: BlogMLPost.HasExtensions
  fullName: Argotic.Syndication.Specialized.BlogMLPost.HasExtensions
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: HasExtensions
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 312
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets a value indicating whether gets a value indicating if this syndication entity has one or more syndication extensions applied to it.\n"
  example: []
  syntax:
    content: public bool HasExtensions { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.Specialized.BlogMLPost.Extensions" data-throw-if-not-resolved="false"></xref> collection for this entity contains one or more <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> objects, otherwise returns <strong>false</strong>.
    content.vb: Public ReadOnly Property HasExtensions As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.HasExtensions*
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.Specialized.BlogMLPost.Id
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Id
  id: Id
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: BlogMLPost.Id
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Id
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Id
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 324
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the unique identifier of this web log entity.\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
      description: An identification string for this web log entity. The default value is an <strong>empty</strong> string, which indicated that no identifier was specified.
    content.vb: Public Property Id As String
  overload: Argotic.Syndication.Specialized.BlogMLPost.Id*
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.LastModifiedOn
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.LastModifiedOn
  id: LastModifiedOn
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: LastModifiedOn
  nameWithType: BlogMLPost.LastModifiedOn
  fullName: Argotic.Syndication.Specialized.BlogMLPost.LastModifiedOn
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: LastModifiedOn
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 354
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets a date-time indicating when this web log entity was last modified.\n"
  remarks: "\nThe <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> should be provided in Coordinated Universal Time (UTC).\n"
  example: []
  syntax:
    content: public DateTime LastModifiedOn { get; set; }
    parameters: []
    return:
      type: System.DateTime
      description: "\nA <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that indicates the most recent instant in time when this web log entity was modified in a way the publisher considers significant.\nThe default value is <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, which indicates that no modification date-time was provided.\n"
    content.vb: Public Property LastModifiedOn As Date
  overload: Argotic.Syndication.Specialized.BlogMLPost.LastModifiedOn*
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.LastModifiedOn
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.Name
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Name
  id: Name
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BlogMLPost.Name
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Name
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Name
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 371
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the name of this post.\n"
  example: []
  syntax:
    content: public BlogMLTextConstruct Name { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.Specialized.BlogMLTextConstruct
      description: A <xref href="Argotic.Syndication.Specialized.BlogMLTextConstruct" data-throw-if-not-resolved="false"></xref> that represents the name of this post.
    content.vb: Public Property Name As BlogMLTextConstruct
  overload: Argotic.Syndication.Specialized.BlogMLPost.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.PostType
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.PostType
  id: PostType
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: PostType
  nameWithType: BlogMLPost.PostType
  fullName: Argotic.Syndication.Specialized.BlogMLPost.PostType
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: PostType
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 391
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the type of web log entry this post represents.\n"
  example: []
  syntax:
    content: public BlogMLPostType PostType { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.Specialized.BlogMLPostType
      description: "\nAn <xref href=\"Argotic.Syndication.Specialized.BlogMLPostType\" data-throw-if-not-resolved=\"false\"></xref> enumeration value that represents the type of web log entry this post represents.\nThe default value is <xref href=\"Argotic.Syndication.Specialized.BlogMLPostType.None\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property PostType As BlogMLPostType
  overload: Argotic.Syndication.Specialized.BlogMLPost.PostType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.Title
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Title
  id: Title
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: BlogMLPost.Title
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Title
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Title
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 409
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the title of this web log entity.\n"
  example: []
  syntax:
    content: public BlogMLTextConstruct Title { get; set; }
    parameters: []
    return:
      type: Argotic.Syndication.Specialized.BlogMLTextConstruct
      description: A <xref href="Argotic.Syndication.Specialized.BlogMLTextConstruct" data-throw-if-not-resolved="false"></xref> object that represents the title of this web log entity.
    content.vb: Public Property Title As BlogMLTextConstruct
  overload: Argotic.Syndication.Specialized.BlogMLPost.Title*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">value</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Syndication.Specialized.IBlogMLCommonObject.Title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.Trackbacks
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Trackbacks
  id: Trackbacks
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Trackbacks
  nameWithType: BlogMLPost.Trackbacks
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Trackbacks
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Trackbacks
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 427
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets the trackbacks for this post.\n"
  example: []
  syntax:
    content: public Collection<BlogMLTrackback> Trackbacks { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback}
      description: A <xref href="System.Collections.ObjectModel.Collection%601" data-throw-if-not-resolved="false"></xref> collection of <xref href="Argotic.Syndication.Specialized.BlogMLTrackback" data-throw-if-not-resolved="false"></xref> objects that represent the trackbacks for this post.
    content.vb: Public ReadOnly Property Trackbacks As Collection(Of BlogMLTrackback)
  overload: Argotic.Syndication.Specialized.BlogMLPost.Trackbacks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Argotic.Syndication.Specialized.BlogMLPost.Url
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Url
  id: Url
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: BlogMLPost.Url
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Url
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Url
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 448
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the URL of this post.\n"
  example: []
  syntax:
    content: public Uri Url { get; set; }
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that represents the URL of this post.
    content.vb: Public Property Url As Uri
  overload: Argotic.Syndication.Specialized.BlogMLPost.Url*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.Views
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Views
  id: Views
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Views
  nameWithType: BlogMLPost.Views
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Views
  type: Property
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Views
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 465
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nGets or sets the views of this post.\n"
  example: []
  syntax:
    content: public string Views { get; set; }
    parameters: []
    return:
      type: System.String
      description: The views of this post.
    content.vb: Public Property Views As String
  overload: Argotic.Syndication.Specialized.BlogMLPost.Views*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.op_Equality(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.op_Equality(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  id: op_Equality(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Equality(BlogMLPost, BlogMLPost)
  nameWithType: BlogMLPost.Equality(BlogMLPost, BlogMLPost)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Equality(Argotic.Syndication.Specialized.BlogMLPost, Argotic.Syndication.Specialized.BlogMLPost)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Equality
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 491
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines if operands are equal.\n"
  example: []
  syntax:
    content: public static bool operator ==(BlogMLPost first, BlogMLPost second)
    parameters:
    - id: first
      type: Argotic.Syndication.Specialized.BlogMLPost
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.Specialized.BlogMLPost
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the values of its operands are equal, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator =(first As BlogMLPost, second As BlogMLPost) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLPost.op_GreaterThan(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.op_GreaterThan(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  id: op_GreaterThan(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: GreaterThan(BlogMLPost, BlogMLPost)
  nameWithType: BlogMLPost.GreaterThan(BlogMLPost, BlogMLPost)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.GreaterThan(Argotic.Syndication.Specialized.BlogMLPost, Argotic.Syndication.Specialized.BlogMLPost)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_GreaterThan
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 512
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines if first operand is greater than second operand.\n"
  example: []
  syntax:
    content: public static bool operator>(BlogMLPost first, BlogMLPost second)
    parameters:
    - id: first
      type: Argotic.Syndication.Specialized.BlogMLPost
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.Specialized.BlogMLPost
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is greater than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator>(first As BlogMLPost, second As BlogMLPost) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLPost.op_Inequality(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.op_Inequality(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  id: op_Inequality(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Inequality(BlogMLPost, BlogMLPost)
  nameWithType: BlogMLPost.Inequality(BlogMLPost, BlogMLPost)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Inequality(Argotic.Syndication.Specialized.BlogMLPost, Argotic.Syndication.Specialized.BlogMLPost)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_Inequality
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 533
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines if operands are not equal.\n"
  example: []
  syntax:
    content: public static bool operator !=(BlogMLPost first, BlogMLPost second)
    parameters:
    - id: first
      type: Argotic.Syndication.Specialized.BlogMLPost
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.Specialized.BlogMLPost
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>false</strong> if its operands are equal, otherwise; <strong>true</strong>.
    content.vb: Public Shared Operator <>(first As BlogMLPost, second As BlogMLPost) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLPost.op_LessThan(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.op_LessThan(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  id: op_LessThan(Argotic.Syndication.Specialized.BlogMLPost,Argotic.Syndication.Specialized.BlogMLPost)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: LessThan(BlogMLPost, BlogMLPost)
  nameWithType: BlogMLPost.LessThan(BlogMLPost, BlogMLPost)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.LessThan(Argotic.Syndication.Specialized.BlogMLPost, Argotic.Syndication.Specialized.BlogMLPost)
  type: Operator
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: op_LessThan
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 544
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines if first operand is less than second operand.\n"
  example: []
  syntax:
    content: public static bool operator <(BlogMLPost first, BlogMLPost second)
    parameters:
    - id: first
      type: Argotic.Syndication.Specialized.BlogMLPost
      description: Operand to be compared.
    - id: second
      type: Argotic.Syndication.Specialized.BlogMLPost
      description: Operand to compare to.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the first operand is less than the second, otherwise; <strong>false</strong>.
    content.vb: Public Shared Operator <(first As BlogMLPost, second As BlogMLPost) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment})
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment})
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<BlogMLAttachment>, Collection<BlogMLAttachment>)
  nameWithType: BlogMLPost.CompareSequence(Collection<BlogMLAttachment>, Collection<BlogMLAttachment>)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLAttachment>, System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLAttachment>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 578
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<BlogMLAttachment> source, Collection<BlogMLAttachment> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of BlogMLAttachment), target As Collection(Of BlogMLAttachment)) As Integer
  overload: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: BlogMLPost.CompareSequence(Collection(Of BlogMLAttachment), Collection(Of BlogMLAttachment))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLAttachment), System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLAttachment))
  name.vb: CompareSequence(Collection(Of BlogMLAttachment), Collection(Of BlogMLAttachment))
- uid: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor})
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor})
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<BlogMLAuthor>, Collection<BlogMLAuthor>)
  nameWithType: BlogMLPost.CompareSequence(Collection<BlogMLAuthor>, Collection<BlogMLAuthor>)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLAuthor>, System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLAuthor>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 622
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<BlogMLAuthor> source, Collection<BlogMLAuthor> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of BlogMLAuthor), target As Collection(Of BlogMLAuthor)) As Integer
  overload: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: BlogMLPost.CompareSequence(Collection(Of BlogMLAuthor), Collection(Of BlogMLAuthor))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLAuthor), System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLAuthor))
  name.vb: CompareSequence(Collection(Of BlogMLAuthor), Collection(Of BlogMLAuthor))
- uid: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment})
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment})
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<BlogMLComment>, Collection<BlogMLComment>)
  nameWithType: BlogMLPost.CompareSequence(Collection<BlogMLComment>, Collection<BlogMLComment>)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLComment>, System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLComment>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 666
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<BlogMLComment> source, Collection<BlogMLComment> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of BlogMLComment), target As Collection(Of BlogMLComment)) As Integer
  overload: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: BlogMLPost.CompareSequence(Collection(Of BlogMLComment), Collection(Of BlogMLComment))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLComment), System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLComment))
  name.vb: CompareSequence(Collection(Of BlogMLComment), Collection(Of BlogMLComment))
- uid: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback})
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback})
  id: CompareSequence(System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback},System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback})
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: CompareSequence(Collection<BlogMLTrackback>, Collection<BlogMLTrackback>)
  nameWithType: BlogMLPost.CompareSequence(Collection<BlogMLTrackback>, Collection<BlogMLTrackback>)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLTrackback>, System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLTrackback>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareSequence
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 710
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nCompares two specified <xref href=\"System.Collections.ObjectModel.Collection%601\" data-throw-if-not-resolved=\"false\"></xref> collections.\n"
  remarks: "\n<p>\n    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>greater than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>1</strong>.\n</p>\n<p>\n    If the <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> has an element count that is <em>less than</em> the <code data-dev-comment-type=\"paramref\" class=\"paramref\">target</code> element count, returns <strong>-1</strong>.\n</p>\n"
  example: []
  syntax:
    content: public static int CompareSequence(Collection<BlogMLTrackback> source, Collection<BlogMLTrackback> target)
    parameters:
    - id: source
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback}
      description: The first collection.
    - id: target
      type: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback}
      description: The second collection.
    return:
      type: System.Int32
      description: A 32-bit signed integer indicating the lexical relationship between the two comparands.
    content.vb: Public Shared Function CompareSequence(source As Collection(Of BlogMLTrackback), target As Collection(Of BlogMLTrackback)) As Integer
  overload: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">target</code> is a null reference (Nothing in Visual Basic).
  nameWithType.vb: BlogMLPost.CompareSequence(Collection(Of BlogMLTrackback), Collection(Of BlogMLTrackback))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence(System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLTrackback), System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLTrackback))
  name.vb: CompareSequence(Collection(Of BlogMLTrackback), Collection(Of BlogMLTrackback))
- uid: Argotic.Syndication.Specialized.BlogMLPost.PostTypeAsString(Argotic.Syndication.Specialized.BlogMLPostType)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.PostTypeAsString(Argotic.Syndication.Specialized.BlogMLPostType)
  id: PostTypeAsString(Argotic.Syndication.Specialized.BlogMLPostType)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: PostTypeAsString(BlogMLPostType)
  nameWithType: BlogMLPost.PostTypeAsString(BlogMLPostType)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.PostTypeAsString(Argotic.Syndication.Specialized.BlogMLPostType)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: PostTypeAsString
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 745
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nReturns the post type identifier for the supplied <xref href=\"Argotic.Syndication.Specialized.BlogMLPostType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\BlogML\\BlogMLPostExample.cs\" region=\"PostTypeAsString(BlogMLPostType type)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public static string PostTypeAsString(BlogMLPostType type)
    parameters:
    - id: type
      type: Argotic.Syndication.Specialized.BlogMLPostType
      description: The <xref href="Argotic.Syndication.Specialized.BlogMLPostType" data-throw-if-not-resolved="false"></xref> to get the post type identifier for.
    return:
      type: System.String
      description: The post type identifier for the supplied <code data-dev-comment-type="paramref" class="paramref">type</code>, otherwise returns an empty string.
    content.vb: Public Shared Function PostTypeAsString(type As BlogMLPostType) As String
  overload: Argotic.Syndication.Specialized.BlogMLPost.PostTypeAsString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLPost.PostTypeByName(System.String)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.PostTypeByName(System.String)
  id: PostTypeByName(System.String)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: PostTypeByName(String)
  nameWithType: BlogMLPost.PostTypeByName(String)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.PostTypeByName(System.String)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: PostTypeByName
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 785
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nReturns the <xref href=\"Argotic.Syndication.Specialized.BlogMLPostType\" data-throw-if-not-resolved=\"false\"></xref> enumeration value that corresponds to the specified post type name.\n"
  remarks: This method disregards case of specified post type name.
  example:
  - "\n<pre><code><pre><code source=\"..\\..\\Argotic.Examples\\Core\\BlogML\\BlogMLPostExample.cs\" region=\"PostTypeByName(string name)\"></code></pre>\n</code></pre>\n"
  syntax:
    content: public static BlogMLPostType PostTypeByName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the post type.
    return:
      type: Argotic.Syndication.Specialized.BlogMLPostType
      description: A <xref href="Argotic.Syndication.Specialized.BlogMLPostType" data-throw-if-not-resolved="false"></xref> enumeration value that corresponds to the specified string, otherwise returns <strong>BlogMLPostType.None</strong>.
    content.vb: Public Shared Function PostTypeByName(name As String) As BlogMLPostType
  overload: Argotic.Syndication.Specialized.BlogMLPost.PostTypeByName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">name</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">name</code> is an empty string.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Argotic.Syndication.Specialized.BlogMLPost.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.AddExtension(Argotic.Extensions.ISyndicationExtension)
  id: AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: AddExtension(ISyndicationExtension)
  nameWithType: BlogMLPost.AddExtension(ISyndicationExtension)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.AddExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: AddExtension
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 822
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nAdds the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> to the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  example: []
  syntax:
    content: public bool AddExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be added.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was added to the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function AddExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.AddExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.CompareTo(System.Object)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: BlogMLPost.CompareTo(Object)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: CompareTo
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 838
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nCompares the current instance with another object of the same type.\n"
  example: []
  syntax:
    content: public int CompareTo(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: A 32-bit signed integer that indicates the relative order of the objects being compared.
    content.vb: Public Function CompareTo(obj As Object) As Integer
  overload: Argotic.Syndication.Specialized.BlogMLPost.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code data-dev-comment-type="paramref" class="paramref">obj</code> is not the expected <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.Equals(System.Object)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.Equals(System.Object)
  id: Equals(System.Object)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BlogMLPost.Equals(Object)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Equals
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 891
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nDetermines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current instance.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance; otherwise, <strong>false</strong>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Argotic.Syndication.Specialized.BlogMLPost.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.Specialized.BlogMLPost.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  id: FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: BlogMLPost.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: FindExtension
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 914
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nSearches for a syndication extension that matches the conditions defined by the specified predicate, and returns the first occurrence within the <xref href=\"Argotic.Syndication.Specialized.BlogMLPost.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nThe <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> is a delegate to a method that returns <strong>true</strong> if the object passed to it matches the conditions defined in the delegate.\nThe elements of the current <xref href=\"Argotic.Syndication.Specialized.BlogMLPost.Extensions\" data-throw-if-not-resolved=\"false\"></xref> are individually passed to the <xref href=\"System.Predicate%601\" data-throw-if-not-resolved=\"false\"></xref> delegate, moving forward in\nthe <xref href=\"Argotic.Syndication.Specialized.BlogMLPost.Extensions\" data-throw-if-not-resolved=\"false\"></xref>, starting with the first element and ending with the last element. Processing is stopped when a match is found.\n"
  example: []
  syntax:
    content: public ISyndicationExtension FindExtension(Predicate<ISyndicationExtension> match)
    parameters:
    - id: match
      type: System.Predicate{Argotic.Extensions.ISyndicationExtension}
      description: The <xref href="System.Predicate%601" data-throw-if-not-resolved="false"></xref> delegate that defines the conditions of the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to search for.
    return:
      type: Argotic.Extensions.ISyndicationExtension
      description: "\nThe first syndication extension that matches the conditions defined by the specified predicate, if found; otherwise, the default value for <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Function FindExtension(match As Predicate(Of ISyndicationExtension)) As ISyndicationExtension
  overload: Argotic.Syndication.Specialized.BlogMLPost.FindExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">match</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  nameWithType.vb: BlogMLPost.FindExtension(Predicate(Of ISyndicationExtension))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Argotic.Syndication.Specialized.BlogMLPost.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
- uid: Argotic.Syndication.Specialized.BlogMLPost.GetHashCode
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.GetHashCode
  id: GetHashCode
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BlogMLPost.GetHashCode()
  fullName: Argotic.Syndication.Specialized.BlogMLPost.GetHashCode()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: GetHashCode
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 927
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nReturns a hash code for the current instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Argotic.Syndication.Specialized.BlogMLPost.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.Specialized.BlogMLPost.Load(System.Xml.XPath.XPathNavigator)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator)
  nameWithType: BlogMLPost.Load(XPathNavigator)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Load(System.Xml.XPath.XPathNavigator)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 943
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nLoads this <xref href=\"Argotic.Syndication.Specialized.BlogMLPost\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be positioned on the XML element that represents a <xref href=\"Argotic.Syndication.Specialized.BlogMLPost\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> to extract information from.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.Specialized.BlogMLPost" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  id: Load(System.Xml.XPath.XPathNavigator,Argotic.Common.SyndicationResourceLoadSettings)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: Load(XPathNavigator, SyndicationResourceLoadSettings)
  nameWithType: BlogMLPost.Load(XPathNavigator, SyndicationResourceLoadSettings)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Load(System.Xml.XPath.XPathNavigator, Argotic.Common.SyndicationResourceLoadSettings)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: Load
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 1046
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nLoads this <xref href=\"Argotic.Syndication.Specialized.ApmlApplication\" data-throw-if-not-resolved=\"false\"></xref> using the supplied <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Argotic.Common.SyndicationResourceLoadSettings\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method expects the supplied <code data-dev-comment-type=\"paramref\" class=\"paramref\">source</code> to be positioned on the XML element that represents a <xref href=\"Argotic.Syndication.Specialized.ApmlApplication\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool Load(XPathNavigator source, SyndicationResourceLoadSettings settings)
    parameters:
    - id: source
      type: System.Xml.XPath.XPathNavigator
      description: The <xref href="System.Xml.XPath.XPathNavigator" data-throw-if-not-resolved="false"></xref> to extract information from.
    - id: settings
      type: Argotic.Common.SyndicationResourceLoadSettings
      description: The <xref href="Argotic.Common.SyndicationResourceLoadSettings" data-throw-if-not-resolved="false"></xref> used to configure the load operation.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Syndication.Specialized.ApmlApplication" data-throw-if-not-resolved="false"></xref> was initialized using the supplied <code data-dev-comment-type="paramref" class="paramref">source</code>, otherwise <strong>false</strong>.
    content.vb: Public Function Load(source As XPathNavigator, settings As SyndicationResourceLoadSettings) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">source</code> is a null reference (Nothing in Visual Basic).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">settings</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  id: RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: BlogMLPost.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: RemoveExtension
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 1153
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nRemoves the supplied <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref> from the current instance&apos;s <xref href=\"Argotic.Extensions.IExtensibleSyndicationObject.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection.\n"
  remarks: "\nIf the <xref href=\"Argotic.Syndication.Specialized.BlogMLPost.Extensions\" data-throw-if-not-resolved=\"false\"></xref> collection of the current instance does not contain the specified <xref href=\"Argotic.Extensions.ISyndicationExtension\" data-throw-if-not-resolved=\"false\"></xref>, will return <strong>false</strong>.\n"
  example: []
  syntax:
    content: public bool RemoveExtension(ISyndicationExtension extension)
    parameters:
    - id: extension
      type: Argotic.Extensions.ISyndicationExtension
      description: The <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> to be removed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the <xref href="Argotic.Extensions.ISyndicationExtension" data-throw-if-not-resolved="false"></xref> was removed from the <xref href="Argotic.Extensions.IExtensibleSyndicationObject.Extensions" data-throw-if-not-resolved="false"></xref> collection, otherwise <strong>false</strong>.
    content.vb: Public Function RemoveExtension(extension As ISyndicationExtension) As Boolean
  overload: Argotic.Syndication.Specialized.BlogMLPost.RemoveExtension*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">extension</code> is a null reference (Nothing in Visual Basic).
  implements:
  - Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Argotic.Syndication.Specialized.BlogMLPost.ToString
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.ToString
  id: ToString
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BlogMLPost.ToString()
  fullName: Argotic.Syndication.Specialized.BlogMLPost.ToString()
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: ToString
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 1175
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"Argotic.Syndication.Specialized.BlogMLPost\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis method returns the XML representation for the current instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="Argotic.Syndication.Specialized.BlogMLPost" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Argotic.Syndication.Specialized.BlogMLPost.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Argotic.Syndication.Specialized.BlogMLPost.WriteTo(System.Xml.XmlWriter)
  commentId: M:Argotic.Syndication.Specialized.BlogMLPost.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: Argotic.Syndication.Specialized.BlogMLPost
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  nameWithType: BlogMLPost.WriteTo(XmlWriter)
  fullName: Argotic.Syndication.Specialized.BlogMLPost.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
      branch: feature/DocFx
      repo: https://github.com/endjin/Argotic.git
    id: WriteTo
    path: ../Solutions/Argotic.Core/Syndication/Specialized/BlogML/BlogMLPost.cs
    startLine: 1200
  assemblies:
  - Argotic.Core
  namespace: Argotic.Syndication.Specialized
  summary: "\nSaves the current <xref href=\"Argotic.Syndication.Specialized.BlogMLPost\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void WriteTo(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> to which you want to save.
    content.vb: Public Sub WriteTo(writer As XmlWriter)
  overload: Argotic.Syndication.Specialized.BlogMLPost.WriteTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code data-dev-comment-type="paramref" class="paramref">writer</code> is a null reference (Nothing in Visual Basic).
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Argotic.Syndication.Specialized
  commentId: N:Argotic.Syndication.Specialized
  name: Argotic.Syndication.Specialized
  nameWithType: Argotic.Syndication.Specialized
  fullName: Argotic.Syndication.Specialized
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject
  commentId: T:Argotic.Syndication.Specialized.IBlogMLCommonObject
  parent: Argotic.Syndication.Specialized
  name: IBlogMLCommonObject
  nameWithType: IBlogMLCommonObject
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: Argotic.Extensions.IExtensibleSyndicationObject
  commentId: T:Argotic.Extensions.IExtensibleSyndicationObject
  parent: Argotic.Extensions
  name: IExtensibleSyndicationObject
  nameWithType: IExtensibleSyndicationObject
  fullName: Argotic.Extensions.IExtensibleSyndicationObject
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Argotic.Extensions
  commentId: N:Argotic.Extensions
  name: Argotic.Extensions
  nameWithType: Argotic.Extensions
  fullName: Argotic.Extensions
- uid: Argotic.Syndication.Specialized.BlogMLPost
  commentId: T:Argotic.Syndication.Specialized.BlogMLPost
  parent: Argotic.Syndication.Specialized
  name: BlogMLPost
  nameWithType: BlogMLPost
  fullName: Argotic.Syndication.Specialized.BlogMLPost
- uid: Argotic.Syndication.Specialized.BlogMLPost.#ctor*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.#ctor
  name: BlogMLPost
  nameWithType: BlogMLPost.BlogMLPost
  fullName: Argotic.Syndication.Specialized.BlogMLPost.BlogMLPost
- uid: Argotic.Syndication.Specialized.BlogMLApprovalStatus
  commentId: T:Argotic.Syndication.Specialized.BlogMLApprovalStatus
  parent: Argotic.Syndication.Specialized
  name: BlogMLApprovalStatus
  nameWithType: BlogMLApprovalStatus
  fullName: Argotic.Syndication.Specialized.BlogMLApprovalStatus
- uid: Argotic.Syndication.Specialized.BlogMLApprovalStatus.None
  commentId: F:Argotic.Syndication.Specialized.BlogMLApprovalStatus.None
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLPost.ApprovalStatus*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.ApprovalStatus
  name: ApprovalStatus
  nameWithType: BlogMLPost.ApprovalStatus
  fullName: Argotic.Syndication.Specialized.BlogMLPost.ApprovalStatus
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.ApprovalStatus
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.ApprovalStatus
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: ApprovalStatus
  nameWithType: IBlogMLCommonObject.ApprovalStatus
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.ApprovalStatus
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLAttachment
  commentId: T:Argotic.Syndication.Specialized.BlogMLAttachment
  parent: Argotic.Syndication.Specialized
  name: BlogMLAttachment
  nameWithType: BlogMLAttachment
  fullName: Argotic.Syndication.Specialized.BlogMLAttachment
- uid: Argotic.Syndication.Specialized.BlogMLPost.Attachments*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Attachments
  name: Attachments
  nameWithType: BlogMLPost.Attachments
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Attachments
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAttachment}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<BlogMLAttachment>
  nameWithType: Collection<BlogMLAttachment>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLAttachment>
  nameWithType.vb: Collection(Of BlogMLAttachment)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLAttachment)
  name.vb: Collection(Of BlogMLAttachment)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.Specialized.BlogMLAttachment
    name: BlogMLAttachment
    nameWithType: BlogMLAttachment
    fullName: Argotic.Syndication.Specialized.BlogMLAttachment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.Specialized.BlogMLAttachment
    name: BlogMLAttachment
    nameWithType: BlogMLAttachment
    fullName: Argotic.Syndication.Specialized.BlogMLAttachment
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Argotic.Syndication.Specialized.BlogMLDocument.Authors
  commentId: P:Argotic.Syndication.Specialized.BlogMLDocument.Authors
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLPost.Authors*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Authors
  name: Authors
  nameWithType: BlogMLPost.Authors
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Authors
- uid: System.Collections.ObjectModel.Collection{System.String}
  commentId: T:System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  nameWithType.vb: Collection(Of String)
  fullName.vb: System.Collections.ObjectModel.Collection(Of System.String)
  name.vb: Collection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLDocument.Categories
  commentId: P:Argotic.Syndication.Specialized.BlogMLDocument.Categories
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLPost.Categories*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Categories
  name: Categories
  nameWithType: BlogMLPost.Categories
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Categories
- uid: Argotic.Syndication.Specialized.BlogMLComment
  commentId: T:Argotic.Syndication.Specialized.BlogMLComment
  parent: Argotic.Syndication.Specialized
  name: BlogMLComment
  nameWithType: BlogMLComment
  fullName: Argotic.Syndication.Specialized.BlogMLComment
- uid: Argotic.Syndication.Specialized.BlogMLPost.Comments*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Comments
  name: Comments
  nameWithType: BlogMLPost.Comments
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Comments
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLComment}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<BlogMLComment>
  nameWithType: Collection<BlogMLComment>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLComment>
  nameWithType.vb: Collection(Of BlogMLComment)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLComment)
  name.vb: Collection(Of BlogMLComment)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.Specialized.BlogMLComment
    name: BlogMLComment
    nameWithType: BlogMLComment
    fullName: Argotic.Syndication.Specialized.BlogMLComment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.Specialized.BlogMLComment
    name: BlogMLComment
    nameWithType: BlogMLComment
    fullName: Argotic.Syndication.Specialized.BlogMLComment
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLTextConstruct
  commentId: T:Argotic.Syndication.Specialized.BlogMLTextConstruct
  parent: Argotic.Syndication.Specialized
  name: BlogMLTextConstruct
  nameWithType: BlogMLTextConstruct
  fullName: Argotic.Syndication.Specialized.BlogMLTextConstruct
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLPost.Content*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Content
  name: Content
  nameWithType: BlogMLPost.Content
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Content
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTime.MinValue
  commentId: F:System.DateTime.MinValue
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLPost.CreatedOn*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.CreatedOn
  name: CreatedOn
  nameWithType: BlogMLPost.CreatedOn
  fullName: Argotic.Syndication.Specialized.BlogMLPost.CreatedOn
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.CreatedOn
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.CreatedOn
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: CreatedOn
  nameWithType: IBlogMLCommonObject.CreatedOn
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.CreatedOn
- uid: Argotic.Syndication.Specialized.BlogMLPost.Excerpt*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Excerpt
  name: Excerpt
  nameWithType: BlogMLPost.Excerpt
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Excerpt
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Extensions.ISyndicationExtension
  commentId: T:Argotic.Extensions.ISyndicationExtension
  parent: Argotic.Extensions
  name: ISyndicationExtension
  nameWithType: ISyndicationExtension
  fullName: Argotic.Extensions.ISyndicationExtension
- uid: Argotic.Syndication.Specialized.BlogMLPost.Extensions*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Extensions
  name: Extensions
  nameWithType: BlogMLPost.Extensions
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Extensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.Extensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: Extensions
  nameWithType: IExtensibleSyndicationObject.Extensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.Extensions
- uid: System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Collections.Generic.IEnumerable{Argotic.Extensions.ISyndicationExtension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISyndicationExtension>
  nameWithType: IEnumerable<ISyndicationExtension>
  fullName: System.Collections.Generic.IEnumerable<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: IEnumerable(Of ISyndicationExtension)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: IEnumerable(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Argotic.Syndication.Specialized.BlogMLPost.Excerpt
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Excerpt
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLPost.HasExcerpt*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.HasExcerpt
  name: HasExcerpt
  nameWithType: BlogMLPost.HasExcerpt
  fullName: Argotic.Syndication.Specialized.BlogMLPost.HasExcerpt
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Argotic.Syndication.Specialized.BlogMLPost.Extensions
  commentId: P:Argotic.Syndication.Specialized.BlogMLPost.Extensions
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLPost.HasExtensions*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.HasExtensions
  name: HasExtensions
  nameWithType: BlogMLPost.HasExtensions
  fullName: Argotic.Syndication.Specialized.BlogMLPost.HasExtensions
- uid: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  commentId: P:Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: HasExtensions
  nameWithType: IExtensibleSyndicationObject.HasExtensions
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.HasExtensions
- uid: Argotic.Syndication.Specialized.BlogMLPost.Id*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Id
  name: Id
  nameWithType: BlogMLPost.Id
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Id
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.Id
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.Id
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: Id
  nameWithType: IBlogMLCommonObject.Id
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Argotic.Syndication.Specialized.BlogMLPost.LastModifiedOn*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.LastModifiedOn
  name: LastModifiedOn
  nameWithType: BlogMLPost.LastModifiedOn
  fullName: Argotic.Syndication.Specialized.BlogMLPost.LastModifiedOn
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.LastModifiedOn
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.LastModifiedOn
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: LastModifiedOn
  nameWithType: IBlogMLCommonObject.LastModifiedOn
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.LastModifiedOn
- uid: Argotic.Syndication.Specialized.BlogMLPost.Name*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Name
  name: Name
  nameWithType: BlogMLPost.Name
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Name
- uid: Argotic.Syndication.Specialized.BlogMLPostType
  commentId: T:Argotic.Syndication.Specialized.BlogMLPostType
  parent: Argotic.Syndication.Specialized
  name: BlogMLPostType
  nameWithType: BlogMLPostType
  fullName: Argotic.Syndication.Specialized.BlogMLPostType
- uid: Argotic.Syndication.Specialized.BlogMLPostType.None
  commentId: F:Argotic.Syndication.Specialized.BlogMLPostType.None
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLPost.PostType*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.PostType
  name: PostType
  nameWithType: BlogMLPost.PostType
  fullName: Argotic.Syndication.Specialized.BlogMLPost.PostType
- uid: Argotic.Syndication.Specialized.BlogMLPost.Title*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Title
  name: Title
  nameWithType: BlogMLPost.Title
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Title
- uid: Argotic.Syndication.Specialized.IBlogMLCommonObject.Title
  commentId: P:Argotic.Syndication.Specialized.IBlogMLCommonObject.Title
  parent: Argotic.Syndication.Specialized.IBlogMLCommonObject
  name: Title
  nameWithType: IBlogMLCommonObject.Title
  fullName: Argotic.Syndication.Specialized.IBlogMLCommonObject.Title
- uid: Argotic.Syndication.Specialized.BlogMLTrackback
  commentId: T:Argotic.Syndication.Specialized.BlogMLTrackback
  parent: Argotic.Syndication.Specialized
  name: BlogMLTrackback
  nameWithType: BlogMLTrackback
  fullName: Argotic.Syndication.Specialized.BlogMLTrackback
- uid: Argotic.Syndication.Specialized.BlogMLPost.Trackbacks*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Trackbacks
  name: Trackbacks
  nameWithType: BlogMLPost.Trackbacks
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Trackbacks
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLTrackback}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<BlogMLTrackback>
  nameWithType: Collection<BlogMLTrackback>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLTrackback>
  nameWithType.vb: Collection(Of BlogMLTrackback)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLTrackback)
  name.vb: Collection(Of BlogMLTrackback)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.Specialized.BlogMLTrackback
    name: BlogMLTrackback
    nameWithType: BlogMLTrackback
    fullName: Argotic.Syndication.Specialized.BlogMLTrackback
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.Specialized.BlogMLTrackback
    name: BlogMLTrackback
    nameWithType: BlogMLTrackback
    fullName: Argotic.Syndication.Specialized.BlogMLTrackback
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Argotic.Syndication.Specialized.BlogMLPost.Url*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Url
  name: Url
  nameWithType: BlogMLPost.Url
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Url
- uid: Argotic.Syndication.Specialized.BlogMLPost.Views*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Views
  name: Views
  nameWithType: BlogMLPost.Views
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Views
- uid: Argotic.Syndication.Specialized.BlogMLPost.op_Equality*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.op_Equality
  name: Equality
  nameWithType: BlogMLPost.Equality
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Equality
- uid: Argotic.Syndication.Specialized.BlogMLPost.op_GreaterThan*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.op_GreaterThan
  name: GreaterThan
  nameWithType: BlogMLPost.GreaterThan
  fullName: Argotic.Syndication.Specialized.BlogMLPost.GreaterThan
- uid: Argotic.Syndication.Specialized.BlogMLPost.op_Inequality*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.op_Inequality
  name: Inequality
  nameWithType: BlogMLPost.Inequality
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Inequality
- uid: Argotic.Syndication.Specialized.BlogMLPost.op_LessThan*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.op_LessThan
  name: LessThan
  nameWithType: BlogMLPost.LessThan
  fullName: Argotic.Syndication.Specialized.BlogMLPost.LessThan
- uid: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.CompareSequence
  name: CompareSequence
  nameWithType: BlogMLPost.CompareSequence
  fullName: Argotic.Syndication.Specialized.BlogMLPost.CompareSequence
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor}
  commentId: T:System.Collections.ObjectModel.Collection{Argotic.Syndication.Specialized.BlogMLAuthor}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<BlogMLAuthor>
  nameWithType: Collection<BlogMLAuthor>
  fullName: System.Collections.ObjectModel.Collection<Argotic.Syndication.Specialized.BlogMLAuthor>
  nameWithType.vb: Collection(Of BlogMLAuthor)
  fullName.vb: System.Collections.ObjectModel.Collection(Of Argotic.Syndication.Specialized.BlogMLAuthor)
  name.vb: Collection(Of BlogMLAuthor)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Syndication.Specialized.BlogMLAuthor
    name: BlogMLAuthor
    nameWithType: BlogMLAuthor
    fullName: Argotic.Syndication.Specialized.BlogMLAuthor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Syndication.Specialized.BlogMLAuthor
    name: BlogMLAuthor
    nameWithType: BlogMLAuthor
    fullName: Argotic.Syndication.Specialized.BlogMLAuthor
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLPost.PostTypeAsString*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.PostTypeAsString
  name: PostTypeAsString
  nameWithType: BlogMLPost.PostTypeAsString
  fullName: Argotic.Syndication.Specialized.BlogMLPost.PostTypeAsString
- uid: Argotic.Syndication.Specialized.BlogMLPost.PostTypeByName*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.PostTypeByName
  name: PostTypeByName
  nameWithType: BlogMLPost.PostTypeByName
  fullName: Argotic.Syndication.Specialized.BlogMLPost.PostTypeByName
- uid: Argotic.Syndication.Specialized.BlogMLPost.AddExtension*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.AddExtension
  name: AddExtension
  nameWithType: BlogMLPost.AddExtension
  fullName: Argotic.Syndication.Specialized.BlogMLPost.AddExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: AddExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.AddExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension(Argotic.Extensions.ISyndicationExtension)
    name: AddExtension
    nameWithType: IExtensibleSyndicationObject.AddExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.AddExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Argotic.Syndication.Specialized.BlogMLPost.CompareTo*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.CompareTo
  name: CompareTo
  nameWithType: BlogMLPost.CompareTo
  fullName: Argotic.Syndication.Specialized.BlogMLPost.CompareTo
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLPost.Equals*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Equals
  name: Equals
  nameWithType: BlogMLPost.Equals
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Equals
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLPost.FindExtension*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.FindExtension
  name: FindExtension
  nameWithType: BlogMLPost.FindExtension
  fullName: Argotic.Syndication.Specialized.BlogMLPost.FindExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  isExternal: true
  name: FindExtension(Predicate<ISyndicationExtension>)
  nameWithType: IExtensibleSyndicationObject.FindExtension(Predicate<ISyndicationExtension>)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate<Argotic.Extensions.ISyndicationExtension>)
  nameWithType.vb: IExtensibleSyndicationObject.FindExtension(Predicate(Of ISyndicationExtension))
  fullName.vb: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate(Of Argotic.Extensions.ISyndicationExtension))
  name.vb: FindExtension(Predicate(Of ISyndicationExtension))
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension(System.Predicate{Argotic.Extensions.ISyndicationExtension})
    name: FindExtension
    nameWithType: IExtensibleSyndicationObject.FindExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.FindExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate{Argotic.Extensions.ISyndicationExtension}
  commentId: T:System.Predicate{Argotic.Extensions.ISyndicationExtension}
  parent: System
  definition: System.Predicate`1
  name: Predicate<ISyndicationExtension>
  nameWithType: Predicate<ISyndicationExtension>
  fullName: System.Predicate<Argotic.Extensions.ISyndicationExtension>
  nameWithType.vb: Predicate(Of ISyndicationExtension)
  fullName.vb: System.Predicate(Of Argotic.Extensions.ISyndicationExtension)
  name.vb: Predicate(Of ISyndicationExtension)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLPost.GetHashCode*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.GetHashCode
  name: GetHashCode
  nameWithType: BlogMLPost.GetHashCode
  fullName: Argotic.Syndication.Specialized.BlogMLPost.GetHashCode
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: true
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: Argotic.Syndication.Specialized.BlogMLPost.Load*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.Load
  name: Load
  nameWithType: BlogMLPost.Load
  fullName: Argotic.Syndication.Specialized.BlogMLPost.Load
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: true
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: Argotic.Syndication.Specialized.ApmlApplication
  commentId: T:Argotic.Syndication.Specialized.ApmlApplication
  parent: Argotic.Syndication.Specialized
  name: ApmlApplication
  nameWithType: ApmlApplication
  fullName: Argotic.Syndication.Specialized.ApmlApplication
- uid: Argotic.Common.SyndicationResourceLoadSettings
  commentId: T:Argotic.Common.SyndicationResourceLoadSettings
  parent: Argotic.Common
  name: SyndicationResourceLoadSettings
  nameWithType: SyndicationResourceLoadSettings
  fullName: Argotic.Common.SyndicationResourceLoadSettings
- uid: Argotic.Common
  commentId: N:Argotic.Common
  name: Argotic.Common
  nameWithType: Argotic.Common
  fullName: Argotic.Common
- uid: Argotic.Syndication.Specialized.BlogMLPost.RemoveExtension*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.RemoveExtension
  name: RemoveExtension
  nameWithType: BlogMLPost.RemoveExtension
  fullName: Argotic.Syndication.Specialized.BlogMLPost.RemoveExtension
- uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  commentId: M:Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  parent: Argotic.Extensions.IExtensibleSyndicationObject
  name: RemoveExtension(ISyndicationExtension)
  nameWithType: IExtensibleSyndicationObject.RemoveExtension(ISyndicationExtension)
  fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
  spec.csharp:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension(Argotic.Extensions.ISyndicationExtension)
    name: RemoveExtension
    nameWithType: IExtensibleSyndicationObject.RemoveExtension
    fullName: Argotic.Extensions.IExtensibleSyndicationObject.RemoveExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: Argotic.Extensions.ISyndicationExtension
    name: ISyndicationExtension
    nameWithType: ISyndicationExtension
    fullName: Argotic.Extensions.ISyndicationExtension
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Argotic.Syndication.Specialized.BlogMLPost.ToString*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.ToString
  name: ToString
  nameWithType: BlogMLPost.ToString
  fullName: Argotic.Syndication.Specialized.BlogMLPost.ToString
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Argotic.Syndication.Specialized.BlogMLPost.WriteTo*
  commentId: Overload:Argotic.Syndication.Specialized.BlogMLPost.WriteTo
  name: WriteTo
  nameWithType: BlogMLPost.WriteTo
  fullName: Argotic.Syndication.Specialized.BlogMLPost.WriteTo
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
